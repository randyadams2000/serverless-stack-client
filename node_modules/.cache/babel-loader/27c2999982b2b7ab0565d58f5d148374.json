{"ast":null,"code":"var vint=require('./vint');function BufferReader(buffer){this.buffer=buffer;this.offset=0;}// a super limited subset of the node buffer API\nBufferReader.prototype.nextInt16BE=function(){var value=this.buffer.readInt16BE(this.offset);this.offset+=2;return value;};BufferReader.prototype.nextUInt8=function(){var value=this.buffer.readUInt8(this.offset);this.offset+=1;return value;};// EBML variable sized integers\nBufferReader.prototype.nextUIntV=function(){var v=vint(this.buffer,this.offset);this.offset+=v.length;return v.value;};BufferReader.prototype.nextIntV=function(){var v=vint(this.buffer,this.offset,true);this.offset+=v.length;return v.value;};// buffer slice\nBufferReader.prototype.nextBuffer=function(length){var buffer=length?this.buffer.slice(this.offset,this.offset+length):this.buffer.slice(this.offset);this.offset+=length||this.length;return buffer;};// remaining bytes to read\nObject.defineProperty(BufferReader.prototype,'length',{get:function get(){return this.buffer.length-this.offset;}});module.exports=BufferReader;","map":{"version":3,"sources":["/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/react-video-recorder-master/node_modules/ebml-block/lib/buffer-reader.js"],"names":["vint","require","BufferReader","buffer","offset","prototype","nextInt16BE","value","readInt16BE","nextUInt8","readUInt8","nextUIntV","v","length","nextIntV","nextBuffer","slice","Object","defineProperty","get","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,IAAI,CAAGC,OAAO,CAAC,QAAD,CAAlB,CAEA,QAASC,CAAAA,YAAT,CAAuBC,MAAvB,CAA+B,CAC7B,KAAKA,MAAL,CAAcA,MAAd,CACA,KAAKC,MAAL,CAAc,CAAd,CACD,CAED;AACAF,YAAY,CAACG,SAAb,CAAuBC,WAAvB,CAAqC,UAAY,CAC/C,GAAIC,CAAAA,KAAK,CAAG,KAAKJ,MAAL,CAAYK,WAAZ,CAAwB,KAAKJ,MAA7B,CAAZ,CACA,KAAKA,MAAL,EAAe,CAAf,CACA,MAAOG,CAAAA,KAAP,CACD,CAJD,CAMAL,YAAY,CAACG,SAAb,CAAuBI,SAAvB,CAAmC,UAAY,CAC7C,GAAIF,CAAAA,KAAK,CAAG,KAAKJ,MAAL,CAAYO,SAAZ,CAAsB,KAAKN,MAA3B,CAAZ,CACA,KAAKA,MAAL,EAAe,CAAf,CACA,MAAOG,CAAAA,KAAP,CACD,CAJD,CAMA;AACAL,YAAY,CAACG,SAAb,CAAuBM,SAAvB,CAAmC,UAAY,CAC7C,GAAIC,CAAAA,CAAC,CAAGZ,IAAI,CAAC,KAAKG,MAAN,CAAc,KAAKC,MAAnB,CAAZ,CACA,KAAKA,MAAL,EAAeQ,CAAC,CAACC,MAAjB,CACA,MAAOD,CAAAA,CAAC,CAACL,KAAT,CACD,CAJD,CAMAL,YAAY,CAACG,SAAb,CAAuBS,QAAvB,CAAkC,UAAY,CAC5C,GAAIF,CAAAA,CAAC,CAAGZ,IAAI,CAAC,KAAKG,MAAN,CAAc,KAAKC,MAAnB,CAA2B,IAA3B,CAAZ,CACA,KAAKA,MAAL,EAAeQ,CAAC,CAACC,MAAjB,CACA,MAAOD,CAAAA,CAAC,CAACL,KAAT,CACD,CAJD,CAMA;AACAL,YAAY,CAACG,SAAb,CAAuBU,UAAvB,CAAoC,SAAUF,MAAV,CAAkB,CACpD,GAAIV,CAAAA,MAAM,CAAGU,MAAM,CACf,KAAKV,MAAL,CAAYa,KAAZ,CAAkB,KAAKZ,MAAvB,CAA+B,KAAKA,MAAL,CAAcS,MAA7C,CADe,CAEf,KAAKV,MAAL,CAAYa,KAAZ,CAAkB,KAAKZ,MAAvB,CAFJ,CAGA,KAAKA,MAAL,EAAeS,MAAM,EAAI,KAAKA,MAA9B,CACA,MAAOV,CAAAA,MAAP,CACD,CAND,CAQA;AACAc,MAAM,CAACC,cAAP,CAAsBhB,YAAY,CAACG,SAAnC,CAA8C,QAA9C,CAAwD,CACtDc,GAAG,CAAE,cAAY,CAAE,MAAO,MAAKhB,MAAL,CAAYU,MAAZ,CAAqB,KAAKT,MAAjC,CAAyC,CADN,CAAxD,EAIAgB,MAAM,CAACC,OAAP,CAAiBnB,YAAjB","sourcesContent":["var vint = require('./vint')\n\nfunction BufferReader (buffer) {\n  this.buffer = buffer\n  this.offset = 0\n}\n\n// a super limited subset of the node buffer API\nBufferReader.prototype.nextInt16BE = function () {\n  var value = this.buffer.readInt16BE(this.offset)\n  this.offset += 2\n  return value\n}\n\nBufferReader.prototype.nextUInt8 = function () {\n  var value = this.buffer.readUInt8(this.offset)\n  this.offset += 1\n  return value\n}\n\n// EBML variable sized integers\nBufferReader.prototype.nextUIntV = function () {\n  var v = vint(this.buffer, this.offset)\n  this.offset += v.length\n  return v.value\n}\n\nBufferReader.prototype.nextIntV = function () {\n  var v = vint(this.buffer, this.offset, true)\n  this.offset += v.length\n  return v.value\n}\n\n// buffer slice\nBufferReader.prototype.nextBuffer = function (length) {\n  var buffer = length\n    ? this.buffer.slice(this.offset, this.offset + length)\n    : this.buffer.slice(this.offset)\n  this.offset += length || this.length\n  return buffer\n}\n\n// remaining bytes to read\nObject.defineProperty(BufferReader.prototype, 'length', {\n  get: function () { return this.buffer.length - this.offset }\n})\n\nmodule.exports = BufferReader\n"]},"metadata":{},"sourceType":"module"}