{"ast":null,"code":"var _jsxFileName = \"/Users/randyadams/notes-app-client/src/containers/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Home.css\";\nimport { API } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nexport default function Home() {\n  const [notes, setNotes] = useState([]);\n  const {\n    isAuthenticated\n  } = useAppContext();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function onLoad() {\n      if (!isAuthenticated) {\n        return;\n      }\n\n      try {\n        const notes = await loadNotes();\n        setNotes(notes);\n      } catch (e) {\n        onError(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [isAuthenticated]);\n\n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n\n  function renderNotesList(notes) {\n    return [{}].concat(notes).map((note, i) => i !== 0 ? /*#__PURE__*/React.createElement(LinkContainer, {\n      key: note.noteId,\n      to: `/notes/${note.noteId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      header: note.content.trim().split(\"\\n\")[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Created: \" + new Date(note.createdAt).toLocaleString())) : /*#__PURE__*/React.createElement(LinkContainer, {\n      key: \"new\",\n      to: \"/notes/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"\\uFF0B\"), \" Create a new note\"))));\n  }\n\n  function renderLander() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lander\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Become Immortal\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Let us create an immortal avatar that looks like you,\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 65\n      }\n    }), \" sounds like you and tells the story of your life.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"There is no charge or obligation, it's free and easy to create.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Simply upload a picture of yourself, record the answers\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 67\n      }\n    }), \" to questions about your life and we'll create your avatar\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 130\n      }\n    }), \" and send it to you when its ready.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"All your information is kept private but you can choose\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 67\n      }\n    }), \" to share your avatar with others if you wish.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"To begin, simply click the Signup button above.\"));\n  }\n\n  function renderNotes() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Your Notes\"), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, !isLoading && renderNotesList(notes)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, isAuthenticated ? renderNotes() : renderLander());\n}","map":{"version":3,"sources":["/Users/randyadams/notes-app-client/src/containers/Home.js"],"names":["React","useState","useEffect","PageHeader","ListGroup","ListGroupItem","useAppContext","onError","API","LinkContainer","Home","notes","setNotes","isAuthenticated","isLoading","setIsLoading","onLoad","loadNotes","e","get","renderNotesList","concat","map","note","i","noteId","content","trim","split","Date","createdAt","toLocaleString","renderLander","renderNotes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Home.css\";\nimport { API } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function Home() {\n  const [notes, setNotes] = useState([]);\n  const { isAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n  async function onLoad() {\n    if (!isAuthenticated) {\n      return;\n    }\n\n    try {\n      const notes = await loadNotes();\n      setNotes(notes);\n    } catch (e) {\n      onError(e);\n    }\n\n    setIsLoading(false);\n  }\n\n  onLoad();\n}, [isAuthenticated]);\n\nfunction loadNotes() {\n  return API.get(\"notes\", \"/notes\");\n}\n\nfunction renderNotesList(notes) {\n  return [{}].concat(notes).map((note, i) =>\n    i !== 0 ? (\n      <LinkContainer key={note.noteId} to={`/notes/${note.noteId}`}>\n        <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\n          {\"Created: \" + new Date(note.createdAt).toLocaleString()}\n        </ListGroupItem>\n      </LinkContainer>\n    ) : (\n      <LinkContainer key=\"new\" to=\"/notes/new\">\n        <ListGroupItem>\n          <h4>\n            <b>{\"\\uFF0B\"}</b> Create a new note\n          </h4>\n        </ListGroupItem>\n      </LinkContainer>\n    )\n  );\n}\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Become Immortal</h1>\n        <p>Let us create an immortal avatar that looks like you,<br/> sounds like you and tells the story of your life.</p>\n        <p>There is no charge or obligation, it's free and easy to create.</p>\n        <p>Simply upload a picture of yourself, record the answers<br/> to questions about your life and we'll create your avatar<br/> and send it to you when its ready.</p>\n        <p>All your information is kept private but you can choose<br/> to share your avatar with others if you wish.</p>\n        <p>To begin, simply click the Signup button above.</p>\n      </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Your Notes</PageHeader>\n        <ListGroup>\n          {!isLoading && renderNotesList(notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}