{"ast":null,"code":"var _jsxFileName = \"/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/containers/Record.js\";\nimport React, { useState } from \"react\"; //import { useHistory } from \"react-router-dom\";\n\nimport { Button } from \"react-bootstrap\";\nimport VideoRecorder from 'react-video-recorder';\nimport { API } from \"aws-amplify\";\nimport { s3UploadBlob } from \"../libs/awsLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Record.css\";\nexport default function Record(props) {\n  //   const history = useHistory();\n  const [content] = useState(\"\");\n  var disabled = true;\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  async function uploadVideo(videoBlob) {\n    try {\n      const attachment = await s3UploadBlob(\"video.mp4\", videoBlob);\n      await createNote({\n        content,\n        attachment\n      }); //            history.push(\"/\");\n    } catch (e) {\n      onError(e);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Record\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"SAVE RECORDING\"), /*#__PURE__*/React.createElement(VideoRecorder, {\n    isOnInitially: true,\n    showReplayControls: true,\n    replayVideoAutoplayAndLoopOff: true,\n    onRecordingComplete: videoBlob => {\n      uploadVideo(videoBlob);\n      console.log(\"recording complete\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/containers/Record.js"],"names":["React","useState","Button","VideoRecorder","API","s3UploadBlob","onError","Record","props","content","disabled","createNote","note","post","body","uploadVideo","videoBlob","attachment","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,MAAT,QAA+B,iBAA/B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,cAAP;AAGA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrC;AACG,QAAM,CAACC,OAAD,IAAYR,QAAQ,CAAC,EAAD,CAA1B;AACA,MAAIS,QAAQ,GAAG,IAAf;;AAEA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,WAAOR,GAAG,CAACS,IAAJ,CAAS,OAAT,EAAkB,QAAlB,EAA4B;AACjCC,MAAAA,IAAI,EAAEF;AAD2B,KAA5B,CAAP;AAGD;;AAEH,iBAAeG,WAAf,CAA2BC,SAA3B,EAAsC;AAClC,QAAI;AACA,YAAMC,UAAU,GAAG,MAAMZ,YAAY,CAAC,WAAD,EAAaW,SAAb,CAArC;AACA,YAAML,UAAU,CAAC;AAAEF,QAAAA,OAAF;AAAWQ,QAAAA;AAAX,OAAD,CAAhB,CAFA,CAGZ;AACS,KAJD,CAIE,OAAOC,CAAP,EAAU;AACRZ,MAAAA,OAAO,CAACY,CAAD,CAAP;AACH;AAEJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AACI,IAAA,QAAQ,EAAER,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAIA,oBAAC,aAAD;AACI,IAAA,aAAa,MADjB;AAEI,IAAA,kBAAkB,MAFtB;AAGI,IAAA,6BAA6B,MAHjC;AAII,IAAA,mBAAmB,EAAGM,SAAD,IAAe;AAChCD,MAAAA,WAAW,CAACC,SAAD,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADJ;AAiBH","sourcesContent":["import React, { useState } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Button         } from \"react-bootstrap\";\nimport VideoRecorder from 'react-video-recorder'\nimport { API } from \"aws-amplify\";\nimport { s3UploadBlob } from \"../libs/awsLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Record.css\";\n\n\nexport default function Record(props) {\n //   const history = useHistory();\n    const [content] = useState(\"\");\n    var disabled = true;\n\n    function createNote(note) {\n        return API.post(\"notes\", \"/notes\", {\n          body: note\n        });\n      }\n\n    async function uploadVideo(videoBlob) {\n        try {\n            const attachment = await s3UploadBlob(\"video.mp4\",videoBlob);\n            await createNote({ content, attachment });\n//            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n        }\n\n    }\n        \n    return (\n        <div className=\"Record\">\n        <Button\n            disabled={disabled}\n            >SAVE RECORDING</Button>\n        <VideoRecorder \n            isOnInitially\n            showReplayControls\n            replayVideoAutoplayAndLoopOff\n            onRecordingComplete={(videoBlob) => {\n                uploadVideo(videoBlob);\n                console.log(\"recording complete\");\n            }        \n            }\n        />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}