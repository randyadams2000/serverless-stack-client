{"ast":null,"code":"import React from\"react\";import\"react-router-dom\";//import { API, Storage } from \"aws-amplify\";\n//import { onError } from \"../libs/errorLib\";\n//import { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n//import LoaderButton from \"../components/LoaderButton\";\nimport{PageHeader}from\"react-bootstrap\";import\"./Record.css\";//import { s3Upload } from \"../libs/awsLib\";\n'use strict';// Last time updated: 2020-05-17 5:04:38 PM UTC\n// ________________\n// RecordRTC v5.6.1\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n// ____________\n// RecordRTC.js\n/**\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \n * @summary Record audio, video or screen inside the browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTC\n * @class\n * @example\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\n *     type: 'video', // audio or video or gif or canvas\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\n * });\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\n */function RecordRTC(mediaStream,config){if(!mediaStream){throw'First parameter is required.';}config=config||{type:'video'};config=new RecordRTCConfiguration(mediaStream,config);// a reference to user's recordRTC object\nvar self=this;function startRecording(config2){if(!config.disableLogs){console.log('RecordRTC version: ',self.version);}if(!!config2){// allow users to set options using startRecording method\n// config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\nconfig=new RecordRTCConfiguration(mediaStream,config2);}if(!config.disableLogs){console.log('started recording '+config.type+' stream.');}if(mediaRecorder){mediaRecorder.clearRecordedData();mediaRecorder.record();setState('recording');if(self.recordingDuration){handleRecordingDuration();}return self;}initRecorder(function(){if(self.recordingDuration){handleRecordingDuration();}});return self;}function initRecorder(initCallback){if(initCallback){config.initCallback=function(){initCallback();initCallback=config.initCallback=null;// recorder.initRecorder should be call-backed once.\n};}var Recorder=new GetRecorderType(mediaStream,config);mediaRecorder=new Recorder(mediaStream,config);mediaRecorder.record();setState('recording');if(!config.disableLogs){console.log('Initialized recorderType:',mediaRecorder.constructor.name,'for output-type:',config.type);}}function stopRecording(callback){callback=callback||function(){};if(!mediaRecorder){warningLog();return;}if(self.state==='paused'){self.resumeRecording();setTimeout(function(){stopRecording(callback);},1);return;}if(self.state!=='recording'&&!config.disableLogs){console.warn('Recording state should be: \"recording\", however current state is: ',self.state);}if(!config.disableLogs){console.log('Stopped recording '+config.type+' stream.');}if(config.type!=='gif'){mediaRecorder.stop(_callback);}else{mediaRecorder.stop();_callback();}setState('stopped');function _callback(__blob){if(!mediaRecorder){if(typeof callback.call==='function'){callback.call(self,'');}else{callback('');}return;}Object.keys(mediaRecorder).forEach(function(key){if(typeof mediaRecorder[key]==='function'){return;}self[key]=mediaRecorder[key];});var blob=mediaRecorder.blob;if(!blob){if(__blob){mediaRecorder.blob=blob=__blob;}else{throw'Recording failed.';}}if(blob&&!config.disableLogs){console.log(blob.type,'->',bytesToSize(blob.size));}if(callback){var url;try{url=URL.createObjectURL(blob);}catch(e){}if(typeof callback.call==='function'){callback.call(self,url);}else{callback(url);}}if(!config.autoWriteToDisk){return;}getDataURL(function(dataURL){var parameter={};parameter[config.type+'Blob']=dataURL;DiskStorage.Store(parameter);});}}function pauseRecording(){if(!mediaRecorder){warningLog();return;}if(self.state!=='recording'){if(!config.disableLogs){console.warn('Unable to pause the recording. Recording state: ',self.state);}return;}setState('paused');mediaRecorder.pause();if(!config.disableLogs){console.log('Paused recording.');}}function resumeRecording(){if(!mediaRecorder){warningLog();return;}if(self.state!=='paused'){if(!config.disableLogs){console.warn('Unable to resume the recording. Recording state: ',self.state);}return;}setState('recording');// not all libs have this method yet\nmediaRecorder.resume();if(!config.disableLogs){console.log('Resumed recording.');}}function readFile(_blob){postMessage(new FileReaderSync().readAsDataURL(_blob));}function getDataURL(callback,_mediaRecorder){if(!callback){throw'Pass a callback function over getDataURL.';}var blob=_mediaRecorder?_mediaRecorder.blob:(mediaRecorder||{}).blob;if(!blob){if(!config.disableLogs){console.warn('Blob encoder did not finish its job yet.');}setTimeout(function(){getDataURL(callback,_mediaRecorder);},1000);return;}if(typeof Worker!=='undefined'&&!navigator.mozGetUserMedia){var webWorker=processInWebWorker(readFile);webWorker.onmessage=function(event){callback(event.data);};webWorker.postMessage(blob);}else{var reader=new FileReader();reader.readAsDataURL(blob);reader.onload=function(event){callback(event.target.result);};}function processInWebWorker(_function){try{var blob=URL.createObjectURL(new Blob([_function.toString(),'this.onmessage =  function (eee) {'+_function.name+'(eee.data);}'],{type:'application/javascript'}));var worker=new Worker(blob);URL.revokeObjectURL(blob);return worker;}catch(e){}}}function handleRecordingDuration(counter){counter=counter||0;if(self.state==='paused'){setTimeout(function(){handleRecordingDuration(counter);},1000);return;}if(self.state==='stopped'){return;}if(counter>=self.recordingDuration){stopRecording(self.onRecordingStopped);return;}counter+=1000;// 1-second\nsetTimeout(function(){handleRecordingDuration(counter);},1000);}function setState(state){if(!self){return;}self.state=state;if(typeof self.onStateChanged.call==='function'){self.onStateChanged.call(self,state);}else{self.onStateChanged(state);}}var WARNING='It seems that recorder is destroyed or \"startRecording\" is not invoked for '+config.type+' recorder.';function warningLog(){if(config.disableLogs===true){return;}console.warn(WARNING);}var mediaRecorder;var returnObject={/**\n         * This method starts the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var recorder = RecordRTC(mediaStream, {\n         *     type: 'video'\n         * });\n         * recorder.startRecording();\n         */startRecording:startRecording,/**\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\n         * @param {function} callback - Callback to get the recorded blob.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     // use either \"this\" or \"recorder\" object; both are identical\n         *     video.src = this.toURL();\n         *     var blob = this.getBlob();\n         * });\n         */stopRecording:stopRecording,/**\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo Firefox is unable to pause the recording. Fix it.\n         * @example\n         * recorder.pauseRecording();  // pause the recording\n         * recorder.resumeRecording(); // resume again\n         */pauseRecording:pauseRecording,/**\n         * This method resumes the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.pauseRecording();  // first of all, pause the recording\n         * recorder.resumeRecording(); // now resume it\n         */resumeRecording:resumeRecording,/**\n         * This method initializes the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo This method should be deprecated.\n         * @example\n         * recorder.initRecorder();\n         */initRecorder:initRecorder,/**\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var fiveMinutes = 5 * 1000 * 60;\n         * recorder.setRecordingDuration(fiveMinutes, function() {\n         *    var blob = this.getBlob();\n         *    video.src = this.toURL();\n         * });\n         * \n         * // or otherwise\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\n         *    var blob = this.getBlob();\n         *    video.src = this.toURL();\n         * });\n         */setRecordingDuration:function setRecordingDuration(recordingDuration,callback){if(typeof recordingDuration==='undefined'){throw'recordingDuration is required.';}if(typeof recordingDuration!=='number'){throw'recordingDuration must be a number.';}self.recordingDuration=recordingDuration;self.onRecordingStopped=callback||function(){};return{onRecordingStopped:function onRecordingStopped(callback){self.onRecordingStopped=callback;}};},/**\n         * This method can be used to clear/reset all the recorded data.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\n         * @example\n         * recorder.clearRecordedData();\n         */clearRecordedData:function clearRecordedData(){if(!mediaRecorder){warningLog();return;}mediaRecorder.clearRecordedData();if(!config.disableLogs){console.log('Cleared old recorded data.');}},/**\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     var blob = this.getBlob();\n         *\n         *     var file = new File([blob], 'filename.webm', {\n         *         type: 'video/webm'\n         *     });\n         *\n         *     var formData = new FormData();\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\n         *     uploadToServer(formData);\n         * });\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\n         */getBlob:function getBlob(){if(!mediaRecorder){warningLog();return;}return mediaRecorder.blob;},/**\n         * Get data-URI instead of Blob.\n         * @param {function} callback - Callback to get the Data-URI.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     recorder.getDataURL(function(dataURI) {\n         *         video.src = dataURI;\n         *     });\n         * });\n         */getDataURL:getDataURL,/**\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     video.src = this.toURL();\n         * });\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\n         */toURL:function toURL(){if(!mediaRecorder){warningLog();return;}return URL.createObjectURL(mediaRecorder.blob);},/**\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var internalRecorder = recorder.getInternalRecorder();\n         * if(internalRecorder instanceof MultiStreamRecorder) {\n         *     internalRecorder.addStreams([newAudioStream]);\n         *     internalRecorder.resetVideoStreams([screenStream]);\n         * }\n         * @returns {Object} Returns internal recording object.\n         */getInternalRecorder:function getInternalRecorder(){return mediaRecorder;},/**\n         * Invoke save-as dialog to save the recorded blob into your disk.\n         * @param {string} fileName - Set your own file name.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     this.save('file-name');\n         *\n         *     // or manually:\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\n         * });\n         */save:function save(fileName){if(!mediaRecorder){warningLog();return;}invokeSaveAsDialog(mediaRecorder.blob,fileName);},/**\n         * This method gets a blob from indexed-DB storage.\n         * @param {function} callback - Callback to get the recorded blob.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.getFromDisk(function(dataURL) {\n         *     video.src = dataURL;\n         * });\n         */getFromDisk:function getFromDisk(callback){if(!mediaRecorder){warningLog();return;}RecordRTC.getFromDisk(config.type,callback);},/**\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\n         * @type {Array.<Array>}\n         * @param {Array} arrayOfWebPImages - Array of webp images.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo This method should be deprecated.\n         * @example\n         * var arrayOfWebPImages = [];\n         * arrayOfWebPImages.push({\n         *     duration: index,\n         *     image: 'data:image/webp;base64,...'\n         * });\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\n         */setAdvertisementArray:function setAdvertisementArray(arrayOfWebPImages){config.advertisement=[];var length=arrayOfWebPImages.length;for(var i=0;i<length;i++){config.advertisement.push({duration:i,image:arrayOfWebPImages[i]});}},/**\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     var blob = this.blob;\n         *\n         *     // below one is recommended\n         *     var blob = this.getBlob();\n         * });\n         */blob:null,/**\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\n         * });\n         */bufferSize:0,/**\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\n         * });\n         */sampleRate:0,/**\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     var arrayBuffer = this.buffer;\n         *     alert(arrayBuffer.byteLength);\n         * });\n         */buffer:null,/**\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.reset();\n         * recorder.startRecording();\n         */reset:function reset(){if(self.state==='recording'&&!config.disableLogs){console.warn('Stop an active recorder.');}if(mediaRecorder&&typeof mediaRecorder.clearRecordedData==='function'){mediaRecorder.clearRecordedData();}mediaRecorder=null;setState('inactive');self.blob=null;},/**\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.onStateChanged = function(state) {\n         *     console.log('Recorder state: ', state);\n         * };\n         */onStateChanged:function onStateChanged(state){if(!config.disableLogs){console.log('Recorder state changed:',state);}},/**\n         * A recorder can have inactive, recording, paused or stopped states.\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\n         * @memberof RecordRTC\n         * @static\n         * @readonly\n         * @example\n         * // this looper function will keep you updated about the recorder's states.\n         * (function looper() {\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\n         *     if(recorder.state === 'stopped') return; // ignore+stop\n         *     setTimeout(looper, 1000); // update after every 3-seconds\n         * })();\n         * recorder.startRecording();\n         */state:'inactive',/**\n         * Get recorder's readonly state.\n         * @method\n         * @memberof RecordRTC\n         * @example\n         * var state = recorder.getState();\n         * @returns {String} Returns recording state.\n         */getState:function getState(){return self.state;},/**\n         * Destroy RecordRTC instance. Clear all recorders and objects.\n         * @method\n         * @memberof RecordRTC\n         * @example\n         * recorder.destroy();\n         */destroy:function destroy(){var disableLogsCache=config.disableLogs;config={disableLogs:true};self.reset();setState('destroyed');returnObject=self=null;if(Storage.AudioContextConstructor){Storage.AudioContextConstructor.close();Storage.AudioContextConstructor=null;}config.disableLogs=disableLogsCache;if(!config.disableLogs){console.log('RecordRTC is destroyed.');}},/**\n         * RecordRTC version number\n         * @property {String} version - Release version number.\n         * @memberof RecordRTC\n         * @static\n         * @readonly\n         * @example\n         * alert(recorder.version);\n         */version:'5.6.1'};if(!this){self=returnObject;return returnObject;}// if someone wants to use RecordRTC with the \"new\" keyword.\nfor(var prop in returnObject){this[prop]=returnObject[prop];}self=this;return returnObject;}RecordRTC.version='5.6.1';if(typeof module!=='undefined'/* && !!module.exports*/){module.exports=RecordRTC;}if(typeof define==='function'&&define.amd){define('RecordRTC',[],function(){return RecordRTC;});}RecordRTC.getFromDisk=function(type,callback){if(!callback){throw'callback is mandatory.';}console.log('Getting recorded '+(type==='all'?'blobs':type+' blob ')+' from disk!');DiskStorage.Fetch(function(dataURL,_type){if(type!=='all'&&_type===type+'Blob'&&callback){callback(dataURL);}if(type==='all'&&callback){callback(dataURL,_type.replace('Blob',''));}});};/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof RecordRTC\n * @example\n * RecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */RecordRTC.writeToDisk=function(options){console.log('Writing recorded blob(s) to disk!');options=options||{};if(options.audio&&options.video&&options.gif){options.audio.getDataURL(function(audioDataURL){options.video.getDataURL(function(videoDataURL){options.gif.getDataURL(function(gifDataURL){DiskStorage.Store({audioBlob:audioDataURL,videoBlob:videoDataURL,gifBlob:gifDataURL});});});});}else if(options.audio&&options.video){options.audio.getDataURL(function(audioDataURL){options.video.getDataURL(function(videoDataURL){DiskStorage.Store({audioBlob:audioDataURL,videoBlob:videoDataURL});});});}else if(options.audio&&options.gif){options.audio.getDataURL(function(audioDataURL){options.gif.getDataURL(function(gifDataURL){DiskStorage.Store({audioBlob:audioDataURL,gifBlob:gifDataURL});});});}else if(options.video&&options.gif){options.video.getDataURL(function(videoDataURL){options.gif.getDataURL(function(gifDataURL){DiskStorage.Store({videoBlob:videoDataURL,gifBlob:gifDataURL});});});}else if(options.audio){options.audio.getDataURL(function(audioDataURL){DiskStorage.Store({audioBlob:audioDataURL});});}else if(options.video){options.video.getDataURL(function(videoDataURL){DiskStorage.Store({videoBlob:videoDataURL});});}else if(options.gif){options.gif.getDataURL(function(gifDataURL){DiskStorage.Store({gifBlob:gifDataURL});});}};// __________________________\n// RecordRTC-Configuration.js\n/**\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCConfiguration\n * @class\n * @example\n * var options = RecordRTCConfiguration(mediaStream, options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\n */function RecordRTCConfiguration(mediaStream,config){if(!config.recorderType&&!config.type){if(!!config.audio&&!!config.video){config.type='video';}else if(!!config.audio&&!config.video){config.type='audio';}}if(config.recorderType&&!config.type){if(config.recorderType===WhammyRecorder||config.recorderType===CanvasRecorder||typeof WebAssemblyRecorder!=='undefined'&&config.recorderType===WebAssemblyRecorder){config.type='video';}else if(config.recorderType===GifRecorder){config.type='gif';}else if(config.recorderType===StereoAudioRecorder){config.type='audio';}else if(config.recorderType===MediaStreamRecorder){if(getTracks(mediaStream,'audio').length&&getTracks(mediaStream,'video').length){config.type='video';}else if(!getTracks(mediaStream,'audio').length&&getTracks(mediaStream,'video').length){config.type='video';}else if(getTracks(mediaStream,'audio').length&&!getTracks(mediaStream,'video').length){config.type='audio';}else{// config.type = 'UnKnown';\n}}}if(typeof MediaStreamRecorder!=='undefined'&&typeof MediaRecorder!=='undefined'&&'requestData'in MediaRecorder.prototype){if(!config.mimeType){config.mimeType='video/webm';}if(!config.type){config.type=config.mimeType.split('/')[0];}if(!config.bitsPerSecond){// config.bitsPerSecond = 128000;\n}}// consider default type=audio\nif(!config.type){if(config.mimeType){config.type=config.mimeType.split('/')[0];}if(!config.type){config.type='audio';}}return config;}// __________________\n// GetRecorderType.js\n/**\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\n * @summary It returns best recorder-type available for your browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef GetRecorderType\n * @class\n * @example\n * var RecorderType = GetRecorderType(options);\n * var recorder = new RecorderType(options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n */function GetRecorderType(mediaStream,config){var recorder;// StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\n// todo: detect if it is Edge, then auto use: StereoAudioRecorder\nif(isChrome||isEdge||isOpera){// Media Stream Recording API has not been implemented in chrome yet;\n// That's why using WebAudio API to record stereo audio in WAV format\nrecorder=StereoAudioRecorder;}if(typeof MediaRecorder!=='undefined'&&'requestData'in MediaRecorder.prototype&&!isChrome){recorder=MediaStreamRecorder;}// video recorder (in WebM format)\nif(config.type==='video'&&(isChrome||isOpera)){recorder=WhammyRecorder;if(typeof WebAssemblyRecorder!=='undefined'&&typeof ReadableStream!=='undefined'){recorder=WebAssemblyRecorder;}}// video recorder (in Gif format)\nif(config.type==='gif'){recorder=GifRecorder;}// html2canvas recording!\nif(config.type==='canvas'){recorder=CanvasRecorder;}if(isMediaRecorderCompatible()&&recorder!==CanvasRecorder&&recorder!==GifRecorder&&typeof MediaRecorder!=='undefined'&&'requestData'in MediaRecorder.prototype){if(getTracks(mediaStream,'video').length||getTracks(mediaStream,'audio').length){// audio-only recording\nif(config.type==='audio'){if(typeof MediaRecorder.isTypeSupported==='function'&&MediaRecorder.isTypeSupported('audio/webm')){recorder=MediaStreamRecorder;}// else recorder = StereoAudioRecorder;\n}else{// video or screen tracks\nif(typeof MediaRecorder.isTypeSupported==='function'&&MediaRecorder.isTypeSupported('video/webm')){recorder=MediaStreamRecorder;}}}}if(mediaStream instanceof Array&&mediaStream.length){recorder=MultiStreamRecorder;}if(config.recorderType){recorder=config.recorderType;}if(!config.disableLogs&&!!recorder&&!!recorder.name){console.log('Using recorderType:',recorder.name||recorder.constructor.name);}if(!recorder&&isSafari){recorder=MediaStreamRecorder;}return recorder;}// _____________\n// MRecordRTC.js\n/**\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef MRecordRTC\n * @class\n * @example\n * var recorder = new MRecordRTC();\n * recorder.addStream(MediaStream);\n * recorder.mediaType = {\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n *     gif: true    // or GifRecorder\n * };\n * // mimeType is optional and should be set only in advance cases.\n * recorder.mimeType = {\n *     audio: 'audio/wav',\n *     video: 'video/webm',\n *     gif:   'image/gif'\n * };\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @requires {@link RecordRTC}\n */function MRecordRTC(mediaStream){/**\n     * This method attaches MediaStream object to {@link MRecordRTC}.\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.addStream(MediaStream);\n     */this.addStream=function(_mediaStream){if(_mediaStream){mediaStream=_mediaStream;}};/**\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\n     * @memberof MRecordRTC\n     * @example\n     * var recorder = new MRecordRTC();\n     * recorder.mediaType = {\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n     *     gif  : true  // TRUE or GifRecorder\n     * };\n     */this.mediaType={audio:true,video:true};/**\n     * This method starts recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.startRecording();\n     */this.startRecording=function(){var mediaType=this.mediaType;var recorderType;var mimeType=this.mimeType||{audio:null,video:null,gif:null};if(typeof mediaType.audio!=='function'&&isMediaRecorderCompatible()&&!getTracks(mediaStream,'audio').length){mediaType.audio=false;}if(typeof mediaType.video!=='function'&&isMediaRecorderCompatible()&&!getTracks(mediaStream,'video').length){mediaType.video=false;}if(typeof mediaType.gif!=='function'&&isMediaRecorderCompatible()&&!getTracks(mediaStream,'video').length){mediaType.gif=false;}if(!mediaType.audio&&!mediaType.video&&!mediaType.gif){throw'MediaStream must have either audio or video tracks.';}if(!!mediaType.audio){recorderType=null;if(typeof mediaType.audio==='function'){recorderType=mediaType.audio;}this.audioRecorder=new RecordRTC(mediaStream,{type:'audio',bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:recorderType,mimeType:mimeType.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp});if(!mediaType.video){this.audioRecorder.startRecording();}}if(!!mediaType.video){recorderType=null;if(typeof mediaType.video==='function'){recorderType=mediaType.video;}var newStream=mediaStream;if(isMediaRecorderCompatible()&&!!mediaType.audio&&typeof mediaType.audio==='function'){var videoTrack=getTracks(mediaStream,'video')[0];if(isFirefox){newStream=new MediaStream();newStream.addTrack(videoTrack);if(recorderType&&recorderType===WhammyRecorder){// Firefox does NOT supports webp-encoding yet\n// But Firefox do supports WebAssemblyRecorder\nrecorderType=MediaStreamRecorder;}}else{newStream=new MediaStream();newStream.addTrack(videoTrack);}}this.videoRecorder=new RecordRTC(newStream,{type:'video',video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:recorderType,mimeType:mimeType.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp,workerPath:this.workerPath,webAssemblyPath:this.webAssemblyPath,frameRate:this.frameRate,// used by WebAssemblyRecorder; values: usually 30; accepts any.\nbitrate:this.bitrate// used by WebAssemblyRecorder; values: 0 to 1000+\n});if(!mediaType.audio){this.videoRecorder.startRecording();}}if(!!mediaType.audio&&!!mediaType.video){var self=this;var isSingleRecorder=isMediaRecorderCompatible()===true;if(mediaType.audio instanceof StereoAudioRecorder&&!!mediaType.video){isSingleRecorder=false;}else if(mediaType.audio!==true&&mediaType.video!==true&&mediaType.audio!==mediaType.video){isSingleRecorder=false;}if(isSingleRecorder===true){self.audioRecorder=null;self.videoRecorder.startRecording();}else{self.videoRecorder.initRecorder(function(){self.audioRecorder.initRecorder(function(){// Both recorders are ready to record things accurately\nself.videoRecorder.startRecording();self.audioRecorder.startRecording();});});}}if(!!mediaType.gif){recorderType=null;if(typeof mediaType.gif==='function'){recorderType=mediaType.gif;}this.gifRecorder=new RecordRTC(mediaStream,{type:'gif',frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:recorderType,mimeType:mimeType.gif});this.gifRecorder.startRecording();}};/**\n     * This method stops recording.\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.stopRecording(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     */this.stopRecording=function(callback){callback=callback||function(){};if(this.audioRecorder){this.audioRecorder.stopRecording(function(blobURL){callback(blobURL,'audio');});}if(this.videoRecorder){this.videoRecorder.stopRecording(function(blobURL){callback(blobURL,'video');});}if(this.gifRecorder){this.gifRecorder.stopRecording(function(blobURL){callback(blobURL,'gif');});}};/**\n     * This method pauses recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.pauseRecording();\n     */this.pauseRecording=function(){if(this.audioRecorder){this.audioRecorder.pauseRecording();}if(this.videoRecorder){this.videoRecorder.pauseRecording();}if(this.gifRecorder){this.gifRecorder.pauseRecording();}};/**\n     * This method resumes recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.resumeRecording();\n     */this.resumeRecording=function(){if(this.audioRecorder){this.audioRecorder.resumeRecording();}if(this.videoRecorder){this.videoRecorder.resumeRecording();}if(this.gifRecorder){this.gifRecorder.resumeRecording();}};/**\n     * This method can be used to manually get all recorded blobs.\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getBlob(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     * // or\n     * var audioBlob = recorder.getBlob().audio;\n     * var videoBlob = recorder.getBlob().video;\n     */this.getBlob=function(callback){var output={};if(this.audioRecorder){output.audio=this.audioRecorder.getBlob();}if(this.videoRecorder){output.video=this.videoRecorder.getBlob();}if(this.gifRecorder){output.gif=this.gifRecorder.getBlob();}if(callback){callback(output);}return output;};/**\n     * Destroy all recorder instances.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.destroy();\n     */this.destroy=function(){if(this.audioRecorder){this.audioRecorder.destroy();this.audioRecorder=null;}if(this.videoRecorder){this.videoRecorder.destroy();this.videoRecorder=null;}if(this.gifRecorder){this.gifRecorder.destroy();this.gifRecorder=null;}};/**\n     * This method can be used to manually get all recorded blobs' DataURLs.\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getDataURL(function(recording){\n     *     var audioDataURL = recording.audio;\n     *     var videoDataURL = recording.video;\n     *     var gifDataURL   = recording.gif;\n     * });\n     */this.getDataURL=function(callback){this.getBlob(function(blob){if(blob.audio&&blob.video){getDataURL(blob.audio,function(_audioDataURL){getDataURL(blob.video,function(_videoDataURL){callback({audio:_audioDataURL,video:_videoDataURL});});});}else if(blob.audio){getDataURL(blob.audio,function(_audioDataURL){callback({audio:_audioDataURL});});}else if(blob.video){getDataURL(blob.video,function(_videoDataURL){callback({video:_videoDataURL});});}});function getDataURL(blob,callback00){if(typeof Worker!=='undefined'){var webWorker=processInWebWorker(function readFile(_blob){postMessage(new FileReaderSync().readAsDataURL(_blob));});webWorker.onmessage=function(event){callback00(event.data);};webWorker.postMessage(blob);}else{var reader=new FileReader();reader.readAsDataURL(blob);reader.onload=function(event){callback00(event.target.result);};}}function processInWebWorker(_function){var blob=URL.createObjectURL(new Blob([_function.toString(),'this.onmessage =  function (eee) {'+_function.name+'(eee.data);}'],{type:'application/javascript'}));var worker=new Worker(blob);var url;if(typeof URL!=='undefined'){url=URL;}else if(typeof webkitURL!=='undefined'){url=webkitURL;}else{throw'Neither URL nor webkitURL detected.';}url.revokeObjectURL(blob);return worker;}};/**\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.writeToDisk();\n     */this.writeToDisk=function(){RecordRTC.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder});};/**\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.save({\n     *     audio: 'audio-file-name',\n     *     video: 'video-file-name',\n     *     gif  : 'gif-file-name'\n     * });\n     */this.save=function(args){args=args||{audio:true,video:true,gif:true};if(!!args.audio&&this.audioRecorder){this.audioRecorder.save(typeof args.audio==='string'?args.audio:'');}if(!!args.video&&this.videoRecorder){this.videoRecorder.save(typeof args.video==='string'?args.video:'');}if(!!args.gif&&this.gifRecorder){this.gifRecorder.save(typeof args.gif==='string'?args.gif:'');}};}/**\n * This method can be used to get all recorded blobs from IndexedDB storage.\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\n * @param {function} callback - Callback function to get all stored blobs.\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\n *     if(type === 'audio') { }\n *     if(type === 'video') { }\n *     if(type === 'gif')   { }\n * });\n */MRecordRTC.getFromDisk=RecordRTC.getFromDisk;/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */MRecordRTC.writeToDisk=RecordRTC.writeToDisk;if(typeof RecordRTC!=='undefined'){RecordRTC.MRecordRTC=MRecordRTC;}var browserFakeUserAgent='Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';(function(that){if(!that){return;}if(typeof window!=='undefined'){return;}if(typeof global==='undefined'){return;}global.navigator={userAgent:browserFakeUserAgent,getUserMedia:function getUserMedia(){}};if(!global.console){global.console={};}if(typeof global.console.log==='undefined'||typeof global.console.error==='undefined'){global.console.error=global.console.log=global.console.log||function(){console.log(arguments);};}if(typeof document==='undefined'){/*global document:true */that.document={documentElement:{appendChild:function appendChild(){return'';}}};document.createElement=document.captureStream=document.mozCaptureStream=function(){var obj={getContext:function getContext(){return obj;},play:function play(){},pause:function pause(){},drawImage:function drawImage(){},toDataURL:function toDataURL(){return'';},style:{}};return obj;};that.HTMLVideoElement=function(){};}if(typeof location==='undefined'){/*global location:true */that.location={protocol:'file:',href:'',hash:''};}if(typeof screen==='undefined'){/*global screen:true */that.screen={width:0,height:0};}if(typeof URL==='undefined'){/*global screen:true */that.URL={createObjectURL:function createObjectURL(){return'';},revokeObjectURL:function revokeObjectURL(){return'';}};}/*global window:true */that.window=global;})(typeof global!=='undefined'?global:null);// _____________________________\n// Cross-Browser-Declarations.js\n// animation-frame used in WebM recording\n/*jshint -W079 */var requestAnimationFrame=window.requestAnimationFrame;if(typeof requestAnimationFrame==='undefined'){if(typeof webkitRequestAnimationFrame!=='undefined'){/*global requestAnimationFrame:true */requestAnimationFrame=webkitRequestAnimationFrame;}else if(typeof mozRequestAnimationFrame!=='undefined'){/*global requestAnimationFrame:true */requestAnimationFrame=mozRequestAnimationFrame;}else if(typeof msRequestAnimationFrame!=='undefined'){/*global requestAnimationFrame:true */requestAnimationFrame=msRequestAnimationFrame;}else if(typeof requestAnimationFrame==='undefined'){// via: https://gist.github.com/paulirish/1579671\nvar lastTime=0;/*global requestAnimationFrame:true */requestAnimationFrame=function requestAnimationFrame(callback,element){var currTime=new Date().getTime();var timeToCall=Math.max(0,16-(currTime-lastTime));var id=setTimeout(function(){callback(currTime+timeToCall);},timeToCall);lastTime=currTime+timeToCall;return id;};}}/*jshint -W079 */var cancelAnimationFrame=window.cancelAnimationFrame;if(typeof cancelAnimationFrame==='undefined'){if(typeof webkitCancelAnimationFrame!=='undefined'){/*global cancelAnimationFrame:true */cancelAnimationFrame=webkitCancelAnimationFrame;}else if(typeof mozCancelAnimationFrame!=='undefined'){/*global cancelAnimationFrame:true */cancelAnimationFrame=mozCancelAnimationFrame;}else if(typeof msCancelAnimationFrame!=='undefined'){/*global cancelAnimationFrame:true */cancelAnimationFrame=msCancelAnimationFrame;}else if(typeof cancelAnimationFrame==='undefined'){/*global cancelAnimationFrame:true */cancelAnimationFrame=function cancelAnimationFrame(id){clearTimeout(id);};}}// WebAudio API representer\nvar AudioContext=window.AudioContext;if(typeof AudioContext==='undefined'){if(typeof webkitAudioContext!=='undefined'){/*global AudioContext:true */AudioContext=webkitAudioContext;}if(typeof mozAudioContext!=='undefined'){/*global AudioContext:true */AudioContext=mozAudioContext;}}/*jshint -W079 */var URL=window.URL;if(typeof URL==='undefined'&&typeof webkitURL!=='undefined'){/*global URL:true */URL=webkitURL;}if(typeof navigator!=='undefined'&&typeof navigator.getUserMedia==='undefined'){// maybe window.navigator?\nif(typeof navigator.webkitGetUserMedia!=='undefined'){navigator.getUserMedia=navigator.webkitGetUserMedia;}if(typeof navigator.mozGetUserMedia!=='undefined'){navigator.getUserMedia=navigator.mozGetUserMedia;}}var isEdge=navigator.userAgent.indexOf('Edge')!==-1&&(!!navigator.msSaveBlob||!!navigator.msSaveOrOpenBlob);var isOpera=!!window.opera||navigator.userAgent.indexOf('OPR/')!==-1;var isFirefox=navigator.userAgent.toLowerCase().indexOf('firefox')>-1&&'netscape'in window&&/ rv:/.test(navigator.userAgent);var isChrome=!isOpera&&!isEdge&&!!navigator.webkitGetUserMedia||isElectron()||navigator.userAgent.toLowerCase().indexOf('chrome/')!==-1;var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);if(isSafari&&!isChrome&&navigator.userAgent.indexOf('CriOS')!==-1){isSafari=false;isChrome=true;}var MediaStream=window.MediaStream;if(typeof MediaStream==='undefined'&&typeof webkitMediaStream!=='undefined'){MediaStream=webkitMediaStream;}/*global MediaStream:true */if(typeof MediaStream!=='undefined'){// override \"stop\" method for all browsers\nif(typeof MediaStream.prototype.stop==='undefined'){MediaStream.prototype.stop=function(){this.getTracks().forEach(function(track){track.stop();});};}}// below function via: http://goo.gl/B3ae8c\n/**\n * Return human-readable file size.\n * @param {number} bytes - Pass bytes and get formatted string.\n * @returns {string} - formatted string\n * @example\n * bytesToSize(1024*1024*5) === '5 GB'\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */function bytesToSize(bytes){var k=1000;var sizes=['Bytes','KB','MB','GB','TB'];if(bytes===0){return'0 Bytes';}var i=parseInt(Math.floor(Math.log(bytes)/Math.log(k)),10);return(bytes/Math.pow(k,i)).toPrecision(3)+' '+sizes[i];}/**\n * @param {Blob} file - File or Blob object. This parameter is required.\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\n * @example\n * invokeSaveAsDialog(blob or file, [optional] fileName);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */function invokeSaveAsDialog(file,fileName){if(!file){throw'Blob object is required.';}if(!file.type){try{file.type='video/webm';}catch(e){}}var fileExtension=(file.type||'video/webm').split('/')[1];if(fileName&&fileName.indexOf('.')!==-1){var splitted=fileName.split('.');fileName=splitted[0];fileExtension=splitted[1];}var fileFullName=(fileName||Math.round(Math.random()*9999999999)+888888888)+'.'+fileExtension;if(typeof navigator.msSaveOrOpenBlob!=='undefined'){return navigator.msSaveOrOpenBlob(file,fileFullName);}else if(typeof navigator.msSaveBlob!=='undefined'){return navigator.msSaveBlob(file,fileFullName);}var hyperlink=document.createElement('a');hyperlink.href=URL.createObjectURL(file);hyperlink.download=fileFullName;hyperlink.style='display:none;opacity:0;color:transparent;';(document.body||document.documentElement).appendChild(hyperlink);if(typeof hyperlink.click==='function'){hyperlink.click();}else{hyperlink.target='_blank';hyperlink.dispatchEvent(new MouseEvent('click',{view:window,bubbles:true,cancelable:true}));}URL.revokeObjectURL(hyperlink.href);}/**\n * from: https://github.com/cheton/is-electron/blob/master/index.js\n **/function isElectron(){// Renderer process\nif(typeof window!=='undefined'&&typeof window.process==='object'&&window.process.type==='renderer'){return true;}// Main process\nif(typeof process!=='undefined'&&typeof process.versions==='object'&&!!process.versions.electron){return true;}// Detect the user agent when the `nodeIntegration` option is set to true\nif(typeof navigator==='object'&&typeof navigator.userAgent==='string'&&navigator.userAgent.indexOf('Electron')>=0){return true;}return false;}function getTracks(stream,kind){if(!stream||!stream.getTracks){return[];}return stream.getTracks().filter(function(t){return t.kind===(kind||'audio');});}function setSrcObject(stream,element){if('srcObject'in element){element.srcObject=stream;}else if('mozSrcObject'in element){element.mozSrcObject=stream;}else{element.srcObject=stream;}}/**\n * @param {Blob} file - File or Blob object.\n * @param {function} callback - Callback function.\n * @example\n * getSeekableBlob(blob or file, callback);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */function getSeekableBlob(inputBlob,callback){// EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\nif(typeof EBML==='undefined'){throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');}var reader=new EBML.Reader();var decoder=new EBML.Decoder();var tools=EBML.tools;var fileReader=new FileReader();fileReader.onload=function(e){var ebmlElms=decoder.decode(this.result);ebmlElms.forEach(function(element){reader.read(element);});reader.stop();var refinedMetadataBuf=tools.makeMetadataSeekable(reader.metadatas,reader.duration,reader.cues);var body=this.result.slice(reader.metadataSize);var newBlob=new Blob([refinedMetadataBuf,body],{type:'video/webm'});callback(newBlob);};fileReader.readAsArrayBuffer(inputBlob);}if(typeof RecordRTC!=='undefined'){RecordRTC.invokeSaveAsDialog=invokeSaveAsDialog;RecordRTC.getTracks=getTracks;RecordRTC.getSeekableBlob=getSeekableBlob;RecordRTC.bytesToSize=bytesToSize;RecordRTC.isElectron=isElectron;}// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// Storage.js\n/**\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @example\n * Storage.AudioContext === webkitAudioContext\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */var Storage={};if(typeof AudioContext!=='undefined'){Storage.AudioContext=AudioContext;}else if(typeof webkitAudioContext!=='undefined'){Storage.AudioContext=webkitAudioContext;}if(typeof RecordRTC!=='undefined'){RecordRTC.Storage=Storage;}function isMediaRecorderCompatible(){if(isFirefox||isSafari||isEdge){return true;}var nVer=navigator.appVersion;var nAgt=navigator.userAgent;var fullVersion=''+parseFloat(navigator.appVersion);var majorVersion=parseInt(navigator.appVersion,10);var nameOffset,verOffset,ix;if(isChrome||isOpera){verOffset=nAgt.indexOf('Chrome');fullVersion=nAgt.substring(verOffset+7);}// trim the fullVersion string at semicolon/space if present\nif((ix=fullVersion.indexOf(';'))!==-1){fullVersion=fullVersion.substring(0,ix);}if((ix=fullVersion.indexOf(' '))!==-1){fullVersion=fullVersion.substring(0,ix);}majorVersion=parseInt(''+fullVersion,10);if(isNaN(majorVersion)){fullVersion=''+parseFloat(navigator.appVersion);majorVersion=parseInt(navigator.appVersion,10);}return majorVersion>=49;}// ______________________\n// MediaStreamRecorder.js\n/**\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\n * @typedef MediaStreamRecorder\n * @class\n * @example\n * var config = {\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\n *     audioBitsPerSecond : 256 * 8 * 1024,\n *     videoBitsPerSecond : 256 * 8 * 1024,\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n *     checkForInactiveTracks: true,\n *     timeSlice: 1000, // concatenate intervals based blobs\n *     ondataavailable: function() {} // get intervals based blobs\n * }\n * var recorder = new MediaStreamRecorder(mediaStream, config);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\n */function MediaStreamRecorder(mediaStream,config){var self=this;if(typeof mediaStream==='undefined'){throw'First argument \"MediaStream\" is required.';}if(typeof MediaRecorder==='undefined'){throw'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';}config=config||{// bitsPerSecond: 256 * 8 * 1024,\nmimeType:'video/webm'};if(config.type==='audio'){if(getTracks(mediaStream,'video').length&&getTracks(mediaStream,'audio').length){var stream;if(!!navigator.mozGetUserMedia){stream=new MediaStream();stream.addTrack(getTracks(mediaStream,'audio')[0]);}else{// webkitMediaStream\nstream=new MediaStream(getTracks(mediaStream,'audio'));}mediaStream=stream;}if(!config.mimeType||config.mimeType.toString().toLowerCase().indexOf('audio')===-1){config.mimeType=isChrome?'audio/webm':'audio/ogg';}if(config.mimeType&&config.mimeType.toString().toLowerCase()!=='audio/ogg'&&!!navigator.mozGetUserMedia){// forcing better codecs on Firefox (via #166)\nconfig.mimeType='audio/ogg';}}var arrayOfBlobs=[];/**\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\n     * @returns {Array} Returns array of recorded blobs.\n     */this.getArrayOfBlobs=function(){return arrayOfBlobs;};/**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){// set defaults\nself.blob=null;self.clearRecordedData();self.timestamps=[];allStates=[];arrayOfBlobs=[];var recorderHints=config;if(!config.disableLogs){console.log('Passing following config over MediaRecorder API.',recorderHints);}if(mediaRecorder){// mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\nmediaRecorder=null;}if(isChrome&&!isMediaRecorderCompatible()){// to support video-only recording on stable\nrecorderHints='video/vp8';}if(typeof MediaRecorder.isTypeSupported==='function'&&recorderHints.mimeType){if(!MediaRecorder.isTypeSupported(recorderHints.mimeType)){if(!config.disableLogs){console.warn('MediaRecorder API seems unable to record mimeType:',recorderHints.mimeType);}recorderHints.mimeType=config.type==='audio'?'audio/webm':'video/webm';}}// using MediaRecorder API here\ntry{mediaRecorder=new MediaRecorder(mediaStream,recorderHints);// reset\nconfig.mimeType=recorderHints.mimeType;}catch(e){// chrome-based fallback\nmediaRecorder=new MediaRecorder(mediaStream);}// old hack?\nif(recorderHints.mimeType&&!MediaRecorder.isTypeSupported&&'canRecordMimeType'in mediaRecorder&&mediaRecorder.canRecordMimeType(recorderHints.mimeType)===false){if(!config.disableLogs){console.warn('MediaRecorder API seems unable to record mimeType:',recorderHints.mimeType);}}// Dispatching OnDataAvailable Handler\nmediaRecorder.ondataavailable=function(e){if(e.data){allStates.push('ondataavailable: '+bytesToSize(e.data.size));}if(typeof config.timeSlice==='number'){if(e.data&&e.data.size&&e.data.size>100){arrayOfBlobs.push(e.data);updateTimeStamp();if(typeof config.ondataavailable==='function'){// intervals based blobs\nvar blob=config.getNativeBlob?e.data:new Blob([e.data],{type:getMimeType(recorderHints)});config.ondataavailable(blob);}}return;}if(!e.data||!e.data.size||e.data.size<100||self.blob){// make sure that stopRecording always getting fired\n// even if there is invalid data\nif(self.recordingCallback){self.recordingCallback(new Blob([],{type:getMimeType(recorderHints)}));self.recordingCallback=null;}return;}self.blob=config.getNativeBlob?e.data:new Blob([e.data],{type:getMimeType(recorderHints)});if(self.recordingCallback){self.recordingCallback(self.blob);self.recordingCallback=null;}};mediaRecorder.onstart=function(){allStates.push('started');};mediaRecorder.onpause=function(){allStates.push('paused');};mediaRecorder.onresume=function(){allStates.push('resumed');};mediaRecorder.onstop=function(){allStates.push('stopped');};mediaRecorder.onerror=function(error){if(!error){return;}if(!error.name){error.name='UnknownError';}allStates.push('error: '+error);if(!config.disableLogs){// via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\nif(error.name.toString().toLowerCase().indexOf('invalidstate')!==-1){console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.',error);}else if(error.name.toString().toLowerCase().indexOf('notsupported')!==-1){console.error('MIME type (',recorderHints.mimeType,') is not supported.',error);}else if(error.name.toString().toLowerCase().indexOf('security')!==-1){console.error('MediaRecorder security error',error);}// older code below\nelse if(error.name==='OutOfMemory'){console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.',error);}else if(error.name==='IllegalStreamModification'){console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.',error);}else if(error.name==='OtherRecordingError'){console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.',error);}else if(error.name==='GenericError'){console.error('The UA cannot provide the codec or recording option that has been requested.',error);}else{console.error('MediaRecorder Error',error);}}(function(looper){if(!self.manuallyStopped&&mediaRecorder&&mediaRecorder.state==='inactive'){delete config.timeslice;// 10 minutes, enough?\nmediaRecorder.start(10*60*1000);return;}setTimeout(looper,1000);})();if(mediaRecorder.state!=='inactive'&&mediaRecorder.state!=='stopped'){mediaRecorder.stop();}};if(typeof config.timeSlice==='number'){updateTimeStamp();mediaRecorder.start(config.timeSlice);}else{// default is 60 minutes; enough?\n// use config => {timeSlice: 1000} otherwise\nmediaRecorder.start(3.6e+6);}if(config.initCallback){config.initCallback();// old code\n}};/**\n     * @property {Array} timestamps - Array of time stamps\n     * @memberof MediaStreamRecorder\n     * @example\n     * console.log(recorder.timestamps);\n     */this.timestamps=[];function updateTimeStamp(){self.timestamps.push(new Date().getTime());if(typeof config.onTimeStamp==='function'){config.onTimeStamp(self.timestamps[self.timestamps.length-1],self.timestamps);}}function getMimeType(secondObject){if(mediaRecorder&&mediaRecorder.mimeType){return mediaRecorder.mimeType;}return secondObject.mimeType||'video/webm';}/**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){callback=callback||function(){};self.manuallyStopped=true;// used inside the mediaRecorder.onerror\nif(!mediaRecorder){return;}this.recordingCallback=callback;if(mediaRecorder.state==='recording'){mediaRecorder.stop();}if(typeof config.timeSlice==='number'){setTimeout(function(){self.blob=new Blob(arrayOfBlobs,{type:getMimeType(config)});self.recordingCallback(self.blob);},100);}};/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){if(!mediaRecorder){return;}if(mediaRecorder.state==='recording'){mediaRecorder.pause();}};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){if(!mediaRecorder){return;}if(mediaRecorder.state==='paused'){mediaRecorder.resume();}};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){if(mediaRecorder&&mediaRecorder.state==='recording'){self.stop(clearRecordedDataCB);}clearRecordedDataCB();};function clearRecordedDataCB(){arrayOfBlobs=[];mediaRecorder=null;self.timestamps=[];}// Reference to \"MediaRecorder\" object\nvar mediaRecorder;/**\n     * Access to native MediaRecorder API\n     * @method\n     * @memberof MediaStreamRecorder\n     * @instance\n     * @example\n     * var internal = recorder.getInternalRecorder();\n     * internal.ondataavailable = function() {}; // override\n     * internal.stream, internal.onpause, internal.onstop, etc.\n     * @returns {Object} Returns internal recording object.\n     */this.getInternalRecorder=function(){return mediaRecorder;};function isMediaStreamActive(){if('active'in mediaStream){if(!mediaStream.active){return false;}}else if('ended'in mediaStream){// old hack\nif(mediaStream.ended){return false;}}return true;}/**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function() {\n     *     var blob = recorder.blob;\n     * });\n     */this.blob=null;/**\n     * Get MediaRecorder readonly state.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getState();\n     * @returns {String} Returns recording state.\n     */this.getState=function(){if(!mediaRecorder){return'inactive';}return mediaRecorder.state||'inactive';};// list of all recording states\nvar allStates=[];/**\n     * Get MediaRecorder all recording states.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getAllStates();\n     * @returns {Array} Returns all recording states\n     */this.getAllStates=function(){return allStates;};// if any Track within the MediaStream is muted or not enabled at any time, \n// the browser will only record black frames \n// or silence since that is the content produced by the Track\n// so we need to stopRecording as soon as any single track ends.\nif(typeof config.checkForInactiveTracks==='undefined'){config.checkForInactiveTracks=false;// disable to minimize CPU usage\n}var self=this;// this method checks if media stream is stopped\n// or if any track is ended.\n(function looper(){if(!mediaRecorder||config.checkForInactiveTracks===false){return;}if(isMediaStreamActive()===false){if(!config.disableLogs){console.log('MediaStream seems stopped.');}self.stop();return;}setTimeout(looper,1000);// check every second\n})();// for debugging\nthis.name='MediaStreamRecorder';this.toString=function(){return this.name;};}if(typeof RecordRTC!=='undefined'){RecordRTC.MediaStreamRecorder=MediaStreamRecorder;}// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n// https://github.com/mattdiamond/Recorderjs#license-mit\n// ______________________\n// StereoAudioRecorder.js\n/**\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\n * @summary JavaScript standalone object for stereo audio recording.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef StereoAudioRecorder\n * @class\n * @example\n * var recorder = new StereoAudioRecorder(MediaStream, {\n *     sampleRate: 44100,\n *     bufferSize: 4096\n * });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\n */function StereoAudioRecorder(mediaStream,config){if(!getTracks(mediaStream,'audio').length){throw'Your stream has no audio tracks.';}config=config||{};var self=this;// variables\nvar leftchannel=[];var rightchannel=[];var recording=false;var recordingLength=0;var jsAudioNode;var numberOfAudioChannels=2;/**\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\n     * @memberof StereoAudioRecorder\n     * @instance\n     * @example\n     * var recorder = StereoAudioRecorder(mediaStream, {\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\n     * });\n     */var desiredSampRate=config.desiredSampRate;// backward compatibility\nif(config.leftChannel===true){numberOfAudioChannels=1;}if(config.numberOfAudioChannels===1){numberOfAudioChannels=1;}if(!numberOfAudioChannels||numberOfAudioChannels<1){numberOfAudioChannels=2;}if(!config.disableLogs){console.log('StereoAudioRecorder is set to record number of channels: '+numberOfAudioChannels);}// if any Track within the MediaStream is muted or not enabled at any time, \n// the browser will only record black frames \n// or silence since that is the content produced by the Track\n// so we need to stopRecording as soon as any single track ends.\nif(typeof config.checkForInactiveTracks==='undefined'){config.checkForInactiveTracks=true;}function isMediaStreamActive(){if(config.checkForInactiveTracks===false){// always return \"true\"\nreturn true;}if('active'in mediaStream){if(!mediaStream.active){return false;}}else if('ended'in mediaStream){// old hack\nif(mediaStream.ended){return false;}}return true;}/**\n     * This method records MediaStream.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){if(isMediaStreamActive()===false){throw'Please make sure MediaStream is active.';}resetVariables();isAudioProcessStarted=isPaused=false;recording=true;if(typeof config.timeSlice!=='undefined'){looper();}};function mergeLeftRightBuffers(config,callback){function mergeAudioBuffers(config,cb){var numberOfAudioChannels=config.numberOfAudioChannels;// todo: \"slice(0)\" --- is it causes loop? Should be removed?\nvar leftBuffers=config.leftBuffers.slice(0);var rightBuffers=config.rightBuffers.slice(0);var sampleRate=config.sampleRate;var internalInterleavedLength=config.internalInterleavedLength;var desiredSampRate=config.desiredSampRate;if(numberOfAudioChannels===2){leftBuffers=mergeBuffers(leftBuffers,internalInterleavedLength);rightBuffers=mergeBuffers(rightBuffers,internalInterleavedLength);if(desiredSampRate){leftBuffers=interpolateArray(leftBuffers,desiredSampRate,sampleRate);rightBuffers=interpolateArray(rightBuffers,desiredSampRate,sampleRate);}}if(numberOfAudioChannels===1){leftBuffers=mergeBuffers(leftBuffers,internalInterleavedLength);if(desiredSampRate){leftBuffers=interpolateArray(leftBuffers,desiredSampRate,sampleRate);}}// set sample rate as desired sample rate\nif(desiredSampRate){sampleRate=desiredSampRate;}// for changing the sampling rate, reference:\n// http://stackoverflow.com/a/28977136/552182\nfunction interpolateArray(data,newSampleRate,oldSampleRate){var fitCount=Math.round(data.length*(newSampleRate/oldSampleRate));var newData=[];var springFactor=Number((data.length-1)/(fitCount-1));newData[0]=data[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Number(Math.floor(tmp)).toFixed();var after=Number(Math.ceil(tmp)).toFixed();var atPoint=tmp-before;newData[i]=linearInterpolate(data[before],data[after],atPoint);}newData[fitCount-1]=data[data.length-1];return newData;}function linearInterpolate(before,after,atPoint){return before+(after-before)*atPoint;}function mergeBuffers(channelBuffer,rLength){var result=new Float64Array(rLength);var offset=0;var lng=channelBuffer.length;for(var i=0;i<lng;i++){var buffer=channelBuffer[i];result.set(buffer,offset);offset+=buffer.length;}return result;}function interleave(leftChannel,rightChannel){var length=leftChannel.length+rightChannel.length;var result=new Float64Array(length);var inputIndex=0;for(var index=0;index<length;){result[index++]=leftChannel[inputIndex];result[index++]=rightChannel[inputIndex];inputIndex++;}return result;}function writeUTFBytes(view,offset,string){var lng=string.length;for(var i=0;i<lng;i++){view.setUint8(offset+i,string.charCodeAt(i));}}// interleave both channels together\nvar interleaved;if(numberOfAudioChannels===2){interleaved=interleave(leftBuffers,rightBuffers);}if(numberOfAudioChannels===1){interleaved=leftBuffers;}var interleavedLength=interleaved.length;// create wav file\nvar resultingBufferLength=44+interleavedLength*2;var buffer=new ArrayBuffer(resultingBufferLength);var view=new DataView(buffer);// RIFF chunk descriptor/identifier \nwriteUTFBytes(view,0,'RIFF');// RIFF chunk length\n// changed \"44\" to \"36\" via #401\nview.setUint32(4,36+interleavedLength*2,true);// RIFF type \nwriteUTFBytes(view,8,'WAVE');// format chunk identifier \n// FMT sub-chunk\nwriteUTFBytes(view,12,'fmt ');// format chunk length \nview.setUint32(16,16,true);// sample format (raw)\nview.setUint16(20,1,true);// stereo (2 channels)\nview.setUint16(22,numberOfAudioChannels,true);// sample rate \nview.setUint32(24,sampleRate,true);// byte rate (sample rate * block align)\nview.setUint32(28,sampleRate*2,true);// block align (channel count * bytes per sample) \nview.setUint16(32,numberOfAudioChannels*2,true);// bits per sample \nview.setUint16(34,16,true);// data sub-chunk\n// data chunk identifier \nwriteUTFBytes(view,36,'data');// data chunk length \nview.setUint32(40,interleavedLength*2,true);// write the PCM samples\nvar lng=interleavedLength;var index=44;var volume=1;for(var i=0;i<lng;i++){view.setInt16(index,interleaved[i]*(0x7FFF*volume),true);index+=2;}if(cb){return cb({buffer:buffer,view:view});}postMessage({buffer:buffer,view:view});}if(config.noWorker){mergeAudioBuffers(config,function(data){callback(data.buffer,data.view);});return;}var webWorker=processInWebWorker(mergeAudioBuffers);webWorker.onmessage=function(event){callback(event.data.buffer,event.data.view);// release memory\nURL.revokeObjectURL(webWorker.workerURL);// kill webworker (or Chrome will kill your page after ~25 calls)\nwebWorker.terminate();};webWorker.postMessage(config);}function processInWebWorker(_function){var workerURL=URL.createObjectURL(new Blob([_function.toString(),';this.onmessage =  function (eee) {'+_function.name+'(eee.data);}'],{type:'application/javascript'}));var worker=new Worker(workerURL);worker.workerURL=workerURL;return worker;}/**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){callback=callback||function(){};// stop recording\nrecording=false;mergeLeftRightBuffers({desiredSampRate:desiredSampRate,sampleRate:sampleRate,numberOfAudioChannels:numberOfAudioChannels,internalInterleavedLength:recordingLength,leftBuffers:leftchannel,rightBuffers:numberOfAudioChannels===1?[]:rightchannel,noWorker:config.noWorker},function(buffer,view){/**\n             * @property {Blob} blob - The recorded blob object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var blob = recorder.blob;\n             * });\n             */self.blob=new Blob([view],{type:'audio/wav'});/**\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var buffer = recorder.buffer;\n             * });\n             */self.buffer=new ArrayBuffer(view.buffer.byteLength);/**\n             * @property {DataView} view - The recorded data-view object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var view = recorder.view;\n             * });\n             */self.view=view;self.sampleRate=desiredSampRate||sampleRate;self.bufferSize=bufferSize;// recorded audio length\nself.length=recordingLength;isAudioProcessStarted=false;if(callback){callback(self.blob);}});};if(typeof RecordRTC.Storage==='undefined'){RecordRTC.Storage={AudioContextConstructor:null,AudioContext:window.AudioContext||window.webkitAudioContext};}if(!RecordRTC.Storage.AudioContextConstructor||RecordRTC.Storage.AudioContextConstructor.state==='closed'){RecordRTC.Storage.AudioContextConstructor=new RecordRTC.Storage.AudioContext();}var context=RecordRTC.Storage.AudioContextConstructor;// creates an audio node from the microphone incoming stream\nvar audioInput=context.createMediaStreamSource(mediaStream);var legalBufferValues=[0,256,512,1024,2048,4096,8192,16384];/**\n     * From the spec: This value controls how frequently the audioprocess event is\n     * dispatched and how many sample-frames need to be processed each call.\n     * Lower values for buffer size will result in a lower (better) latency.\n     * Higher values will be necessary to avoid audio breakup and glitches\n     * The size of the buffer (in sample-frames) which needs to\n     * be processed each time onprocessaudio is called.\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     bufferSize: 4096\n     * });\n     */ // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\nvar bufferSize=typeof config.bufferSize==='undefined'?4096:config.bufferSize;if(legalBufferValues.indexOf(bufferSize)===-1){if(!config.disableLogs){console.log('Legal values for buffer-size are '+JSON.stringify(legalBufferValues,null,'\\t'));}}if(context.createJavaScriptNode){jsAudioNode=context.createJavaScriptNode(bufferSize,numberOfAudioChannels,numberOfAudioChannels);}else if(context.createScriptProcessor){jsAudioNode=context.createScriptProcessor(bufferSize,numberOfAudioChannels,numberOfAudioChannels);}else{throw'WebAudio API has no support on this browser.';}// connect the stream to the script processor\naudioInput.connect(jsAudioNode);if(!config.bufferSize){bufferSize=jsAudioNode.bufferSize;// device buffer-size\n}/**\n     * The sample rate (in sample-frames per second) at which the\n     * AudioContext handles audio. It is assumed that all AudioNodes\n     * in the context run at this rate. In making this assumption,\n     * sample-rate converters or \"varispeed\" processors are not supported\n     * in real-time processing.\n     * The sampleRate parameter describes the sample-rate of the\n     * linear PCM audio data in the buffer in sample-frames per second.\n     * An implementation must support sample-rates in at least\n     * the range 22050 to 96000.\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     sampleRate: 44100\n     * });\n     */var sampleRate=typeof config.sampleRate!=='undefined'?config.sampleRate:context.sampleRate||44100;if(sampleRate<22050||sampleRate>96000){// Ref: http://stackoverflow.com/a/26303918/552182\nif(!config.disableLogs){console.log('sample-rate must be under range 22050 and 96000.');}}if(!config.disableLogs){if(config.desiredSampRate){console.log('Desired sample-rate: '+config.desiredSampRate);}}var isPaused=false;/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){isPaused=true;};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){if(isMediaStreamActive()===false){throw'Please make sure MediaStream is active.';}if(!recording){if(!config.disableLogs){console.log('Seems recording has been restarted.');}this.record();return;}isPaused=false;};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){config.checkForInactiveTracks=false;if(recording){this.stop(clearRecordedDataCB);}clearRecordedDataCB();};function resetVariables(){leftchannel=[];rightchannel=[];recordingLength=0;isAudioProcessStarted=false;recording=false;isPaused=false;context=null;self.leftchannel=leftchannel;self.rightchannel=rightchannel;self.numberOfAudioChannels=numberOfAudioChannels;self.desiredSampRate=desiredSampRate;self.sampleRate=sampleRate;self.recordingLength=recordingLength;intervalsBasedBuffers={left:[],right:[],recordingLength:0};}function clearRecordedDataCB(){if(jsAudioNode){jsAudioNode.onaudioprocess=null;jsAudioNode.disconnect();jsAudioNode=null;}if(audioInput){audioInput.disconnect();audioInput=null;}resetVariables();}// for debugging\nthis.name='StereoAudioRecorder';this.toString=function(){return this.name;};var isAudioProcessStarted=false;function onAudioProcessDataAvailable(e){if(isPaused){return;}if(isMediaStreamActive()===false){if(!config.disableLogs){console.log('MediaStream seems stopped.');}jsAudioNode.disconnect();recording=false;}if(!recording){if(audioInput){audioInput.disconnect();audioInput=null;}return;}/**\n         * This method is called on \"onaudioprocess\" event's first invocation.\n         * @method {function} onAudioProcessStarted\n         * @memberof StereoAudioRecorder\n         * @example\n         * recorder.onAudioProcessStarted: function() { };\n         */if(!isAudioProcessStarted){isAudioProcessStarted=true;if(config.onAudioProcessStarted){config.onAudioProcessStarted();}if(config.initCallback){config.initCallback();}}var left=e.inputBuffer.getChannelData(0);// we clone the samples\nvar chLeft=new Float32Array(left);leftchannel.push(chLeft);if(numberOfAudioChannels===2){var right=e.inputBuffer.getChannelData(1);var chRight=new Float32Array(right);rightchannel.push(chRight);}recordingLength+=bufferSize;// export raw PCM\nself.recordingLength=recordingLength;if(typeof config.timeSlice!=='undefined'){intervalsBasedBuffers.recordingLength+=bufferSize;intervalsBasedBuffers.left.push(chLeft);if(numberOfAudioChannels===2){intervalsBasedBuffers.right.push(chRight);}}}jsAudioNode.onaudioprocess=onAudioProcessDataAvailable;// to prevent self audio to be connected with speakers\nif(context.createMediaStreamDestination){jsAudioNode.connect(context.createMediaStreamDestination());}else{jsAudioNode.connect(context.destination);}// export raw PCM\nthis.leftchannel=leftchannel;this.rightchannel=rightchannel;this.numberOfAudioChannels=numberOfAudioChannels;this.desiredSampRate=desiredSampRate;this.sampleRate=sampleRate;self.recordingLength=recordingLength;// helper for intervals based blobs\nvar intervalsBasedBuffers={left:[],right:[],recordingLength:0};// this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\nfunction looper(){if(!recording||typeof config.ondataavailable!=='function'||typeof config.timeSlice==='undefined'){return;}if(intervalsBasedBuffers.left.length){mergeLeftRightBuffers({desiredSampRate:desiredSampRate,sampleRate:sampleRate,numberOfAudioChannels:numberOfAudioChannels,internalInterleavedLength:intervalsBasedBuffers.recordingLength,leftBuffers:intervalsBasedBuffers.left,rightBuffers:numberOfAudioChannels===1?[]:intervalsBasedBuffers.right},function(buffer,view){var blob=new Blob([view],{type:'audio/wav'});config.ondataavailable(blob);setTimeout(looper,config.timeSlice);});intervalsBasedBuffers={left:[],right:[],recordingLength:0};}else{setTimeout(looper,config.timeSlice);}}}if(typeof RecordRTC!=='undefined'){RecordRTC.StereoAudioRecorder=StereoAudioRecorder;}// _________________\n// CanvasRecorder.js\n/**\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\n * @summary HTML2Canvas recording into video WebM.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef CanvasRecorder\n * @class\n * @example\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\n * @param {object} config - {disableLogs:true, initCallback: function}\n */function CanvasRecorder(htmlElement,config){if(typeof html2canvas==='undefined'){throw'Please link: https://www.webrtc-experiment.com/screenshot.js';}config=config||{};if(!config.frameInterval){config.frameInterval=10;}// via DetectRTC.js\nvar isCanvasSupportsStreamCapturing=false;['captureStream','mozCaptureStream','webkitCaptureStream'].forEach(function(item){if(item in document.createElement('canvas')){isCanvasSupportsStreamCapturing=true;}});var _isChrome=(!!window.webkitRTCPeerConnection||!!window.webkitGetUserMedia)&&!!window.chrome;var chromeVersion=50;var matchArray=navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);if(_isChrome&&matchArray&&matchArray[2]){chromeVersion=parseInt(matchArray[2],10);}if(_isChrome&&chromeVersion<52){isCanvasSupportsStreamCapturing=false;}if(config.useWhammyRecorder){isCanvasSupportsStreamCapturing=false;}var globalCanvas,mediaStreamRecorder;if(isCanvasSupportsStreamCapturing){if(!config.disableLogs){console.log('Your browser supports both MediRecorder API and canvas.captureStream!');}if(htmlElement instanceof HTMLCanvasElement){globalCanvas=htmlElement;}else if(htmlElement instanceof CanvasRenderingContext2D){globalCanvas=htmlElement.canvas;}else{throw'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';}}else if(!!navigator.mozGetUserMedia){if(!config.disableLogs){console.error('Canvas recording is NOT supported in Firefox.');}}var isRecording;/**\n     * This method records Canvas.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){isRecording=true;if(isCanvasSupportsStreamCapturing&&!config.useWhammyRecorder){// CanvasCaptureMediaStream\nvar canvasMediaStream;if('captureStream'in globalCanvas){canvasMediaStream=globalCanvas.captureStream(25);// 25 FPS\n}else if('mozCaptureStream'in globalCanvas){canvasMediaStream=globalCanvas.mozCaptureStream(25);}else if('webkitCaptureStream'in globalCanvas){canvasMediaStream=globalCanvas.webkitCaptureStream(25);}try{var mdStream=new MediaStream();mdStream.addTrack(getTracks(canvasMediaStream,'video')[0]);canvasMediaStream=mdStream;}catch(e){}if(!canvasMediaStream){throw'captureStream API are NOT available.';}// Note: Jan 18, 2016 status is that, \n// Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\nmediaStreamRecorder=new MediaStreamRecorder(canvasMediaStream,{mimeType:config.mimeType||'video/webm'});mediaStreamRecorder.record();}else{whammy.frames=[];lastTime=new Date().getTime();drawCanvasFrame();}if(config.initCallback){config.initCallback();}};this.getWebPImages=function(callback){if(htmlElement.nodeName.toLowerCase()!=='canvas'){callback();return;}var framesLength=whammy.frames.length;whammy.frames.forEach(function(frame,idx){var framesRemaining=framesLength-idx;if(!config.disableLogs){console.log(framesRemaining+'/'+framesLength+' frames remaining');}if(config.onEncodingCallback){config.onEncodingCallback(framesRemaining,framesLength);}var webp=frame.image.toDataURL('image/webp',1);whammy.frames[idx].image=webp;});if(!config.disableLogs){console.log('Generating WebM');}callback();};/**\n     * This method stops recording Canvas.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){isRecording=false;var that=this;if(isCanvasSupportsStreamCapturing&&mediaStreamRecorder){mediaStreamRecorder.stop(callback);return;}this.getWebPImages(function(){/**\n             * @property {Blob} blob - Recorded frames in video/webm blob.\n             * @memberof CanvasRecorder\n             * @example\n             * recorder.stop(function() {\n             *     var blob = recorder.blob;\n             * });\n             */whammy.compile(function(blob){if(!config.disableLogs){console.log('Recording finished!');}that.blob=blob;if(that.blob.forEach){that.blob=new Blob([],{type:'video/webm'});}if(callback){callback(that.blob);}whammy.frames=[];});});};var isPausedRecording=false;/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){isPausedRecording=true;if(mediaStreamRecorder instanceof MediaStreamRecorder){mediaStreamRecorder.pause();return;}};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){isPausedRecording=false;if(mediaStreamRecorder instanceof MediaStreamRecorder){mediaStreamRecorder.resume();return;}if(!isRecording){this.record();}};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){if(isRecording){this.stop(clearRecordedDataCB);}clearRecordedDataCB();};function clearRecordedDataCB(){whammy.frames=[];isRecording=false;isPausedRecording=false;}// for debugging\nthis.name='CanvasRecorder';this.toString=function(){return this.name;};function cloneCanvas(){//create a new canvas\nvar newCanvas=document.createElement('canvas');var context=newCanvas.getContext('2d');//set dimensions\nnewCanvas.width=htmlElement.width;newCanvas.height=htmlElement.height;//apply the old canvas to the new one\ncontext.drawImage(htmlElement,0,0);//return the new canvas\nreturn newCanvas;}function drawCanvasFrame(){if(isPausedRecording){lastTime=new Date().getTime();return setTimeout(drawCanvasFrame,500);}if(htmlElement.nodeName.toLowerCase()==='canvas'){var duration=new Date().getTime()-lastTime;// via #206, by Jack i.e. @Seymourr\nlastTime=new Date().getTime();whammy.frames.push({image:cloneCanvas(),duration:duration});if(isRecording){setTimeout(drawCanvasFrame,config.frameInterval);}return;}html2canvas(htmlElement,{grabMouse:typeof config.showMousePointer==='undefined'||config.showMousePointer,onrendered:function onrendered(canvas){var duration=new Date().getTime()-lastTime;if(!duration){return setTimeout(drawCanvasFrame,config.frameInterval);}// via #206, by Jack i.e. @Seymourr\nlastTime=new Date().getTime();whammy.frames.push({image:canvas.toDataURL('image/webp',1),duration:duration});if(isRecording){setTimeout(drawCanvasFrame,config.frameInterval);}}});}var lastTime=new Date().getTime();var whammy=new Whammy.Video(100);}if(typeof RecordRTC!=='undefined'){RecordRTC.CanvasRecorder=CanvasRecorder;}// _________________\n// WhammyRecorder.js\n/**\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\n * @summary Video recording feature in Chrome.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef WhammyRecorder\n * @class\n * @example\n * var recorder = new WhammyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\n */function WhammyRecorder(mediaStream,config){config=config||{};if(!config.frameInterval){config.frameInterval=10;}if(!config.disableLogs){console.log('Using frames-interval:',config.frameInterval);}/**\n     * This method records video.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){if(!config.width){config.width=320;}if(!config.height){config.height=240;}if(!config.video){config.video={width:config.width,height:config.height};}if(!config.canvas){config.canvas={width:config.width,height:config.height};}canvas.width=config.canvas.width||320;canvas.height=config.canvas.height||240;context=canvas.getContext('2d');// setting defaults\nif(config.video&&config.video instanceof HTMLVideoElement){video=config.video.cloneNode();if(config.initCallback){config.initCallback();}}else{video=document.createElement('video');setSrcObject(mediaStream,video);video.onloadedmetadata=function(){// \"onloadedmetadata\" may NOT work in FF?\nif(config.initCallback){config.initCallback();}};video.width=config.video.width;video.height=config.video.height;}video.muted=true;video.play();lastTime=new Date().getTime();whammy=new Whammy.Video();if(!config.disableLogs){console.log('canvas resolutions',canvas.width,'*',canvas.height);console.log('video width/height',video.width||canvas.width,'*',video.height||canvas.height);}drawFrames(config.frameInterval);};/**\n     * Draw and push frames to Whammy\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\n     */function drawFrames(frameInterval){frameInterval=typeof frameInterval!=='undefined'?frameInterval:10;var duration=new Date().getTime()-lastTime;if(!duration){return setTimeout(drawFrames,frameInterval,frameInterval);}if(isPausedRecording){lastTime=new Date().getTime();return setTimeout(drawFrames,100);}// via #206, by Jack i.e. @Seymourr\nlastTime=new Date().getTime();if(video.paused){// via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n// Tweak for Android Chrome\nvideo.play();}context.drawImage(video,0,0,canvas.width,canvas.height);whammy.frames.push({duration:duration,image:canvas.toDataURL('image/webp')});if(!isStopDrawing){setTimeout(drawFrames,frameInterval,frameInterval);}}function asyncLoop(o){var i=-1,length=o.length;(function loop(){i++;if(i===length){o.callback();return;}// \"setTimeout\" added by Jim McLeod\nsetTimeout(function(){o.functionToLoop(loop,i);},1);})();}/**\n     * remove black frames from the beginning to the specified frame\n     * @param {Array} _frames - array of frames to be checked\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\n     * @returns {Array} - array of frames\n     */ // pull#293 by @volodalexey\nfunction dropBlackFrames(_frames,_framesToCheck,_pixTolerance,_frameTolerance,_callback2){var localCanvas=document.createElement('canvas');localCanvas.width=canvas.width;localCanvas.height=canvas.height;var context2d=localCanvas.getContext('2d');var resultFrames=[];var checkUntilNotBlack=_framesToCheck===-1;var endCheckFrame=_framesToCheck&&_framesToCheck>0&&_framesToCheck<=_frames.length?_framesToCheck:_frames.length;var sampleColor={r:0,g:0,b:0};var maxColorDifference=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2));var pixTolerance=_pixTolerance&&_pixTolerance>=0&&_pixTolerance<=1?_pixTolerance:0;var frameTolerance=_frameTolerance&&_frameTolerance>=0&&_frameTolerance<=1?_frameTolerance:0;var doNotCheckNext=false;asyncLoop({length:endCheckFrame,functionToLoop:function functionToLoop(loop,f){var matchPixCount,endPixCheck,maxPixCount;var finishImage=function finishImage(){if(!doNotCheckNext&&maxPixCount-matchPixCount<=maxPixCount*frameTolerance){// console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\n}else{// console.log('frame is passed : ' + f);\nif(checkUntilNotBlack){doNotCheckNext=true;}resultFrames.push(_frames[f]);}loop();};if(!doNotCheckNext){var image=new Image();image.onload=function(){context2d.drawImage(image,0,0,canvas.width,canvas.height);var imageData=context2d.getImageData(0,0,canvas.width,canvas.height);matchPixCount=0;endPixCheck=imageData.data.length;maxPixCount=imageData.data.length/4;for(var pix=0;pix<endPixCheck;pix+=4){var currentColor={r:imageData.data[pix],g:imageData.data[pix+1],b:imageData.data[pix+2]};var colorDifference=Math.sqrt(Math.pow(currentColor.r-sampleColor.r,2)+Math.pow(currentColor.g-sampleColor.g,2)+Math.pow(currentColor.b-sampleColor.b,2));// difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\nif(colorDifference<=maxColorDifference*pixTolerance){matchPixCount++;}}finishImage();};image.src=_frames[f].image;}else{finishImage();}},callback:function callback(){resultFrames=resultFrames.concat(_frames.slice(endCheckFrame));if(resultFrames.length<=0){// at least one last frame should be available for next manipulation\n// if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\nresultFrames.push(_frames[_frames.length-1]);}_callback2(resultFrames);}});}var isStopDrawing=false;/**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){callback=callback||function(){};isStopDrawing=true;var _this=this;// analyse of all frames takes some time!\nsetTimeout(function(){// e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\n// e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\n// e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\ndropBlackFrames(whammy.frames,-1,null,null,function(frames){whammy.frames=frames;// to display advertisement images!\nif(config.advertisement&&config.advertisement.length){whammy.frames=config.advertisement.concat(whammy.frames);}/**\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\n                 * @memberof WhammyRecorder\n                 * @example\n                 * recorder.stop(function() {\n                 *     var blob = recorder.blob;\n                 * });\n                 */whammy.compile(function(blob){_this.blob=blob;if(_this.blob.forEach){_this.blob=new Blob([],{type:'video/webm'});}if(callback){callback(_this.blob);}});});},10);};var isPausedRecording=false;/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){isPausedRecording=true;};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){isPausedRecording=false;if(isStopDrawing){this.record();}};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){if(!isStopDrawing){this.stop(clearRecordedDataCB);}clearRecordedDataCB();};function clearRecordedDataCB(){whammy.frames=[];isStopDrawing=true;isPausedRecording=false;}// for debugging\nthis.name='WhammyRecorder';this.toString=function(){return this.name;};var canvas=document.createElement('canvas');var context=canvas.getContext('2d');var video;var lastTime;var whammy;}if(typeof RecordRTC!=='undefined'){RecordRTC.WhammyRecorder=WhammyRecorder;}// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n/**\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n * @summary A real time javascript webm encoder based on a canvas hack.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef Whammy\n * @class\n * @example\n * var recorder = new Whammy().Video(15);\n * recorder.add(context || canvas || dataURL);\n * var output = recorder.compile();\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */var Whammy=function(){// a more abstract-ish API\nfunction WhammyVideo(duration){this.frames=[];this.duration=duration||1;this.quality=0.8;}/**\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.add(canvas || context || 'image/webp');\n     * @param {string} frame - Canvas || Context || image/webp\n     * @param {number} duration - Stick a duration (in milliseconds)\n     */WhammyVideo.prototype.add=function(frame,duration){if('canvas'in frame){//CanvasRenderingContext2D\nframe=frame.canvas;}if('toDataURL'in frame){frame=frame.toDataURL('image/webp',this.quality);}if(!/^data:image\\/webp;base64,/ig.test(frame)){throw'Input must be formatted properly as a base64 encoded DataURI of type image/webp';}this.frames.push({image:frame,duration:duration||this.duration});};function processInWebWorker(_function){var blob=URL.createObjectURL(new Blob([_function.toString(),'this.onmessage =  function (eee) {'+_function.name+'(eee.data);}'],{type:'application/javascript'}));var worker=new Worker(blob);URL.revokeObjectURL(blob);return worker;}function whammyInWebWorker(frames){function ArrayToWebM(frames){var info=checkFrames(frames);if(!info){return[];}var clusterMaxDuration=30000;var EBML=[{'id':0x1a45dfa3,// EBML\n'data':[{'data':1,'id':0x4286// EBMLVersion\n},{'data':1,'id':0x42f7// EBMLReadVersion\n},{'data':4,'id':0x42f2// EBMLMaxIDLength\n},{'data':8,'id':0x42f3// EBMLMaxSizeLength\n},{'data':'webm','id':0x4282// DocType\n},{'data':2,'id':0x4287// DocTypeVersion\n},{'data':2,'id':0x4285// DocTypeReadVersion\n}]},{'id':0x18538067,// Segment\n'data':[{'id':0x1549a966,// Info\n'data':[{'data':1e6,//do things in millisecs (num of nanosecs for duration scale)\n'id':0x2ad7b1// TimecodeScale\n},{'data':'whammy','id':0x4d80// MuxingApp\n},{'data':'whammy','id':0x5741// WritingApp\n},{'data':doubleToString(info.duration),'id':0x4489// Duration\n}]},{'id':0x1654ae6b,// Tracks\n'data':[{'id':0xae,// TrackEntry\n'data':[{'data':1,'id':0xd7// TrackNumber\n},{'data':1,'id':0x73c5// TrackUID\n},{'data':0,'id':0x9c// FlagLacing\n},{'data':'und','id':0x22b59c// Language\n},{'data':'V_VP8','id':0x86// CodecID\n},{'data':'VP8','id':0x258688// CodecName\n},{'data':1,'id':0x83// TrackType\n},{'id':0xe0,// Video\n'data':[{'data':info.width,'id':0xb0// PixelWidth\n},{'data':info.height,'id':0xba// PixelHeight\n}]}]}]}]}];//Generate clusters (max duration)\nvar frameNumber=0;var clusterTimecode=0;while(frameNumber<frames.length){var clusterFrames=[];var clusterDuration=0;do{clusterFrames.push(frames[frameNumber]);clusterDuration+=frames[frameNumber].duration;frameNumber++;}while(frameNumber<frames.length&&clusterDuration<clusterMaxDuration);var clusterCounter=0;var cluster={'id':0x1f43b675,// Cluster\n'data':getClusterData(clusterTimecode,clusterCounter,clusterFrames)};//Add cluster to segment\nEBML[1].data.push(cluster);clusterTimecode+=clusterDuration;}return generateEBML(EBML);}function getClusterData(clusterTimecode,clusterCounter,clusterFrames){return[{'data':clusterTimecode,'id':0xe7// Timecode\n}].concat(clusterFrames.map(function(webp){var block=makeSimpleBlock({discardable:0,frame:webp.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(clusterCounter)});clusterCounter+=webp.duration;return{data:block,id:0xa3};}));}// sums the lengths of all the frames and gets the duration\nfunction checkFrames(frames){if(!frames[0]){postMessage({error:'Something went wrong. Maybe WebP format is not supported in the current browser.'});return;}var width=frames[0].width,height=frames[0].height,duration=frames[0].duration;for(var i=1;i<frames.length;i++){duration+=frames[i].duration;}return{duration:duration,width:width,height:height};}function numToBuffer(num){var parts=[];while(num>0){parts.push(num&0xff);num=num>>8;}return new Uint8Array(parts.reverse());}function strToBuffer(str){return new Uint8Array(str.split('').map(function(e){return e.charCodeAt(0);}));}function bitsToBuffer(bits){var data=[];var pad=bits.length%8?new Array(1+8-bits.length%8).join('0'):'';bits=pad+bits;for(var i=0;i<bits.length;i+=8){data.push(parseInt(bits.substr(i,8),2));}return new Uint8Array(data);}function generateEBML(json){var ebml=[];for(var i=0;i<json.length;i++){var data=json[i].data;if(typeof data==='object'){data=generateEBML(data);}if(typeof data==='number'){data=bitsToBuffer(data.toString(2));}if(typeof data==='string'){data=strToBuffer(data);}var len=data.size||data.byteLength||data.length;var zeroes=Math.ceil(Math.ceil(Math.log(len)/Math.log(2))/8);var sizeToString=len.toString(2);var padded=new Array(zeroes*7+7+1-sizeToString.length).join('0')+sizeToString;var size=new Array(zeroes).join('0')+'1'+padded;ebml.push(numToBuffer(json[i].id));ebml.push(bitsToBuffer(size));ebml.push(data);}return new Blob(ebml,{type:'video/webm'});}function toBinStrOld(bits){var data='';var pad=bits.length%8?new Array(1+8-bits.length%8).join('0'):'';bits=pad+bits;for(var i=0;i<bits.length;i+=8){data+=String.fromCharCode(parseInt(bits.substr(i,8),2));}return data;}function makeSimpleBlock(data){var flags=0;if(data.keyframe){flags|=128;}if(data.invisible){flags|=8;}if(data.lacing){flags|=data.lacing<<1;}if(data.discardable){flags|=1;}if(data.trackNum>127){throw'TrackNumber > 127 not supported';}var out=[data.trackNum|0x80,data.timecode>>8,data.timecode&0xff,flags].map(function(e){return String.fromCharCode(e);}).join('')+data.frame;return out;}function parseWebP(riff){var VP8=riff.RIFF[0].WEBP[0];var frameStart=VP8.indexOf('\\x9d\\x01\\x2a');// A VP8 keyframe starts with the 0x9d012a header\nfor(var i=0,c=[];i<4;i++){c[i]=VP8.charCodeAt(frameStart+3+i);}var width,height,tmp;//the code below is literally copied verbatim from the bitstream spec\ntmp=c[1]<<8|c[0];width=tmp&0x3FFF;tmp=c[3]<<8|c[2];height=tmp&0x3FFF;return{width:width,height:height,data:VP8,riff:riff};}function getStrLength(string,offset){return parseInt(string.substr(offset+4,4).split('').map(function(i){var unpadded=i.charCodeAt(0).toString(2);return new Array(8-unpadded.length+1).join('0')+unpadded;}).join(''),2);}function parseRIFF(string){var offset=0;var chunks={};while(offset<string.length){var id=string.substr(offset,4);var len=getStrLength(string,offset);var data=string.substr(offset+4+4,len);offset+=4+4+len;chunks[id]=chunks[id]||[];if(id==='RIFF'||id==='LIST'){chunks[id].push(parseRIFF(data));}else{chunks[id].push(data);}}return chunks;}function doubleToString(num){return[].slice.call(new Uint8Array(new Float64Array([num]).buffer),0).map(function(e){return String.fromCharCode(e);}).reverse().join('');}var webm=new ArrayToWebM(frames.map(function(frame){var webp=parseWebP(parseRIFF(atob(frame.image.slice(23))));webp.duration=frame.duration;return webp;}));postMessage(webm);}/**\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.compile(function(blob) {\n     *    // blob.size - blob.type\n     * });\n     */WhammyVideo.prototype.compile=function(callback){var webWorker=processInWebWorker(whammyInWebWorker);webWorker.onmessage=function(event){if(event.data.error){console.error(event.data.error);return;}callback(event.data);};webWorker.postMessage(this.frames);};return{/**\n         * A more abstract-ish API.\n         * @method\n         * @memberof Whammy\n         * @example\n         * recorder = new Whammy().Video(0.8, 100);\n         * @param {?number} speed - 0.8\n         * @param {?number} quality - 100\n         */Video:WhammyVideo};}();if(typeof RecordRTC!=='undefined'){RecordRTC.Whammy=Whammy;}// ______________ (indexed-db)\n// DiskStorage.js\n/**\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\n * @summary Writing blobs into IndexedDB.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @example\n * DiskStorage.Store({\n *     audioBlob: yourAudioBlob,\n *     videoBlob: yourVideoBlob,\n *     gifBlob  : yourGifBlob\n * });\n * DiskStorage.Fetch(function(dataURL, type) {\n *     if(type === 'audioBlob') { }\n *     if(type === 'videoBlob') { }\n *     if(type === 'gifBlob')   { }\n * });\n * // DiskStorage.dataStoreName = 'recordRTC';\n * // DiskStorage.onError = function(error) { };\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\n * @property {function} Store - This method stores blobs in IndexedDB.\n * @property {function} onError - This function is invoked for any known/unknown error.\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */var DiskStorage={/**\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.init();\n     */init:function init(){var self=this;if(typeof indexedDB==='undefined'||typeof indexedDB.open==='undefined'){console.error('IndexedDB API are not available in this browser.');return;}var dbVersion=1;var dbName=this.dbName||location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g,''),db;var request=indexedDB.open(dbName,dbVersion);function createObjectStore(dataBase){dataBase.createObjectStore(self.dataStoreName);}function putInDB(){var transaction=db.transaction([self.dataStoreName],'readwrite');if(self.videoBlob){transaction.objectStore(self.dataStoreName).put(self.videoBlob,'videoBlob');}if(self.gifBlob){transaction.objectStore(self.dataStoreName).put(self.gifBlob,'gifBlob');}if(self.audioBlob){transaction.objectStore(self.dataStoreName).put(self.audioBlob,'audioBlob');}function getFromStore(portionName){transaction.objectStore(self.dataStoreName).get(portionName).onsuccess=function(event){if(self.callback){self.callback(event.target.result,portionName);}};}getFromStore('audioBlob');getFromStore('videoBlob');getFromStore('gifBlob');}request.onerror=self.onError;request.onsuccess=function(){db=request.result;db.onerror=self.onError;if(db.setVersion){if(db.version!==dbVersion){var setVersion=db.setVersion(dbVersion);setVersion.onsuccess=function(){createObjectStore(db);putInDB();};}else{putInDB();}}else{putInDB();}};request.onupgradeneeded=function(event){createObjectStore(event.target.result);};},/**\n     * This method fetches stored blobs from IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Fetch(function(dataURL, type) {\n     *     if(type === 'audioBlob') { }\n     *     if(type === 'videoBlob') { }\n     *     if(type === 'gifBlob')   { }\n     * });\n     */Fetch:function Fetch(callback){this.callback=callback;this.init();return this;},/**\n     * This method stores blobs in IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Store({\n     *     audioBlob: yourAudioBlob,\n     *     videoBlob: yourVideoBlob,\n     *     gifBlob  : yourGifBlob\n     * });\n     */Store:function Store(config){this.audioBlob=config.audioBlob;this.videoBlob=config.videoBlob;this.gifBlob=config.gifBlob;this.init();return this;},/**\n     * This function is invoked for any known/unknown error.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.onError = function(error){\n     *     alerot( JSON.stringify(error) );\n     * };\n     */onError:function onError(error){console.error(JSON.stringify(error,null,'\\t'));},/**\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.dataStoreName = 'recordRTC';\n     */dataStoreName:'recordRTC',dbName:null};if(typeof RecordRTC!=='undefined'){RecordRTC.DiskStorage=DiskStorage;}// ______________\n// GifRecorder.js\n/**\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef GifRecorder\n * @class\n * @example\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     img.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\n */function GifRecorder(mediaStream,config){if(typeof GIFEncoder==='undefined'){var script=document.createElement('script');script.src='https://www.webrtc-experiment.com/gif-recorder.js';(document.body||document.documentElement).appendChild(script);}config=config||{};var isHTMLObject=mediaStream instanceof CanvasRenderingContext2D||mediaStream instanceof HTMLCanvasElement;/**\n     * This method records MediaStream.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){if(typeof GIFEncoder==='undefined'){setTimeout(self.record,1000);return;}if(!isLoadedMetaData){setTimeout(self.record,1000);return;}if(!isHTMLObject){if(!config.width){config.width=video.offsetWidth||320;}if(!config.height){config.height=video.offsetHeight||240;}if(!config.video){config.video={width:config.width,height:config.height};}if(!config.canvas){config.canvas={width:config.width,height:config.height};}canvas.width=config.canvas.width||320;canvas.height=config.canvas.height||240;video.width=config.video.width||320;video.height=config.video.height||240;}// external library to record as GIF images\ngifEncoder=new GIFEncoder();// void setRepeat(int iter) \n// Sets the number of times the set of GIF frames should be played. \n// Default is 1; 0 means play indefinitely.\ngifEncoder.setRepeat(0);// void setFrameRate(Number fps) \n// Sets frame rate in frames per second. \n// Equivalent to setDelay(1000/fps).\n// Using \"setDelay\" instead of \"setFrameRate\"\ngifEncoder.setDelay(config.frameRate||200);// void setQuality(int quality) \n// Sets quality of color quantization (conversion of images to the \n// maximum 256 colors allowed by the GIF specification). \n// Lower values (minimum = 1) produce better colors, \n// but slow processing significantly. 10 is the default, \n// and produces good color mapping at reasonable speeds. \n// Values greater than 20 do not yield significant improvements in speed.\ngifEncoder.setQuality(config.quality||10);// Boolean start() \n// This writes the GIF Header and returns false if it fails.\ngifEncoder.start();if(typeof config.onGifRecordingStarted==='function'){config.onGifRecordingStarted();}startTime=Date.now();function drawVideoFrame(time){if(self.clearedRecordedData===true){return;}if(isPausedRecording){return setTimeout(function(){drawVideoFrame(time);},100);}lastAnimationFrame=requestAnimationFrame(drawVideoFrame);if(typeof lastFrameTime===undefined){lastFrameTime=time;}// ~10 fps\nif(time-lastFrameTime<90){return;}if(!isHTMLObject&&video.paused){// via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n// Tweak for Android Chrome\nvideo.play();}if(!isHTMLObject){context.drawImage(video,0,0,canvas.width,canvas.height);}if(config.onGifPreview){config.onGifPreview(canvas.toDataURL('image/png'));}gifEncoder.addFrame(context);lastFrameTime=time;}lastAnimationFrame=requestAnimationFrame(drawVideoFrame);if(config.initCallback){config.initCallback();}};/**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     img.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){callback=callback||function(){};if(lastAnimationFrame){cancelAnimationFrame(lastAnimationFrame);}endTime=Date.now();/**\n         * @property {Blob} blob - The recorded blob object.\n         * @memberof GifRecorder\n         * @example\n         * recorder.stop(function(){\n         *     var blob = recorder.blob;\n         * });\n         */this.blob=new Blob([new Uint8Array(gifEncoder.stream().bin)],{type:'image/gif'});callback(this.blob);// bug: find a way to clear old recorded blobs\ngifEncoder.stream().bin=[];};var isPausedRecording=false;/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){isPausedRecording=true;};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){isPausedRecording=false;};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){self.clearedRecordedData=true;clearRecordedDataCB();};function clearRecordedDataCB(){if(gifEncoder){gifEncoder.stream().bin=[];}}// for debugging\nthis.name='GifRecorder';this.toString=function(){return this.name;};var canvas=document.createElement('canvas');var context=canvas.getContext('2d');if(isHTMLObject){if(mediaStream instanceof CanvasRenderingContext2D){context=mediaStream;canvas=context.canvas;}else if(mediaStream instanceof HTMLCanvasElement){context=mediaStream.getContext('2d');canvas=mediaStream;}}var isLoadedMetaData=true;if(!isHTMLObject){var video=document.createElement('video');video.muted=true;video.autoplay=true;video.playsInline=true;isLoadedMetaData=false;video.onloadedmetadata=function(){isLoadedMetaData=true;};setSrcObject(mediaStream,video);video.play();}var lastAnimationFrame=null;var startTime,endTime,lastFrameTime;var gifEncoder;var self=this;}if(typeof RecordRTC!=='undefined'){RecordRTC.GifRecorder=GifRecorder;}// Last time updated: 2019-06-21 4:09:42 AM UTC\n// ________________________\n// MultiStreamsMixer v1.2.2\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\nfunction MultiStreamsMixer(arrayOfMediaStreams,elementClass){var browserFakeUserAgent='Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';(function(that){if(typeof RecordRTC!=='undefined'){return;}if(!that){return;}if(typeof window!=='undefined'){return;}if(typeof global==='undefined'){return;}global.navigator={userAgent:browserFakeUserAgent,getUserMedia:function getUserMedia(){}};if(!global.console){global.console={};}if(typeof global.console.log==='undefined'||typeof global.console.error==='undefined'){global.console.error=global.console.log=global.console.log||function(){console.log(arguments);};}if(typeof document==='undefined'){/*global document:true */that.document={documentElement:{appendChild:function appendChild(){return'';}}};document.createElement=document.captureStream=document.mozCaptureStream=function(){var obj={getContext:function getContext(){return obj;},play:function play(){},pause:function pause(){},drawImage:function drawImage(){},toDataURL:function toDataURL(){return'';},style:{}};return obj;};that.HTMLVideoElement=function(){};}if(typeof location==='undefined'){/*global location:true */that.location={protocol:'file:',href:'',hash:''};}if(typeof screen==='undefined'){/*global screen:true */that.screen={width:0,height:0};}if(typeof URL==='undefined'){/*global screen:true */that.URL={createObjectURL:function createObjectURL(){return'';},revokeObjectURL:function revokeObjectURL(){return'';}};}/*global window:true */that.window=global;})(typeof global!=='undefined'?global:null);// requires: chrome://flags/#enable-experimental-web-platform-features\nelementClass=elementClass||'multi-streams-mixer';var videos=[];var isStopDrawingFrames=false;var canvas=document.createElement('canvas');var context=canvas.getContext('2d');canvas.style.opacity=0;canvas.style.position='absolute';canvas.style.zIndex=-1;canvas.style.top='-1000em';canvas.style.left='-1000em';canvas.className=elementClass;(document.body||document.documentElement).appendChild(canvas);this.disableLogs=false;this.frameInterval=10;this.width=360;this.height=240;// use gain node to prevent echo\nthis.useGainNode=true;var self=this;// _____________________________\n// Cross-Browser-Declarations.js\n// WebAudio API representer\nvar AudioContext=window.AudioContext;if(typeof AudioContext==='undefined'){if(typeof webkitAudioContext!=='undefined'){/*global AudioContext:true */AudioContext=webkitAudioContext;}if(typeof mozAudioContext!=='undefined'){/*global AudioContext:true */AudioContext=mozAudioContext;}}/*jshint -W079 */var URL=window.URL;if(typeof URL==='undefined'&&typeof webkitURL!=='undefined'){/*global URL:true */URL=webkitURL;}if(typeof navigator!=='undefined'&&typeof navigator.getUserMedia==='undefined'){// maybe window.navigator?\nif(typeof navigator.webkitGetUserMedia!=='undefined'){navigator.getUserMedia=navigator.webkitGetUserMedia;}if(typeof navigator.mozGetUserMedia!=='undefined'){navigator.getUserMedia=navigator.mozGetUserMedia;}}var MediaStream=window.MediaStream;if(typeof MediaStream==='undefined'&&typeof webkitMediaStream!=='undefined'){MediaStream=webkitMediaStream;}/*global MediaStream:true */if(typeof MediaStream!=='undefined'){// override \"stop\" method for all browsers\nif(typeof MediaStream.prototype.stop==='undefined'){MediaStream.prototype.stop=function(){this.getTracks().forEach(function(track){track.stop();});};}}var Storage={};if(typeof AudioContext!=='undefined'){Storage.AudioContext=AudioContext;}else if(typeof webkitAudioContext!=='undefined'){Storage.AudioContext=webkitAudioContext;}function setSrcObject(stream,element){if('srcObject'in element){element.srcObject=stream;}else if('mozSrcObject'in element){element.mozSrcObject=stream;}else{element.srcObject=stream;}}this.startDrawingFrames=function(){drawVideosToCanvas();};function drawVideosToCanvas(){if(isStopDrawingFrames){return;}var videosLength=videos.length;var fullcanvas=false;var remaining=[];videos.forEach(function(video){if(!video.stream){video.stream={};}if(video.stream.fullcanvas){fullcanvas=video;}else{// todo: video.stream.active or video.stream.live to fix blank frames issues?\nremaining.push(video);}});if(fullcanvas){canvas.width=fullcanvas.stream.width;canvas.height=fullcanvas.stream.height;}else if(remaining.length){canvas.width=videosLength>1?remaining[0].width*2:remaining[0].width;var height=1;if(videosLength===3||videosLength===4){height=2;}if(videosLength===5||videosLength===6){height=3;}if(videosLength===7||videosLength===8){height=4;}if(videosLength===9||videosLength===10){height=5;}canvas.height=remaining[0].height*height;}else{canvas.width=self.width||360;canvas.height=self.height||240;}if(fullcanvas&&fullcanvas instanceof HTMLVideoElement){drawImage(fullcanvas);}remaining.forEach(function(video,idx){drawImage(video,idx);});setTimeout(drawVideosToCanvas,self.frameInterval);}function drawImage(video,idx){if(isStopDrawingFrames){return;}var x=0;var y=0;var width=video.width;var height=video.height;if(idx===1){x=video.width;}if(idx===2){y=video.height;}if(idx===3){x=video.width;y=video.height;}if(idx===4){y=video.height*2;}if(idx===5){x=video.width;y=video.height*2;}if(idx===6){y=video.height*3;}if(idx===7){x=video.width;y=video.height*3;}if(typeof video.stream.left!=='undefined'){x=video.stream.left;}if(typeof video.stream.top!=='undefined'){y=video.stream.top;}if(typeof video.stream.width!=='undefined'){width=video.stream.width;}if(typeof video.stream.height!=='undefined'){height=video.stream.height;}context.drawImage(video,x,y,width,height);if(typeof video.stream.onRender==='function'){video.stream.onRender(context,x,y,width,height,idx);}}function getMixedStream(){isStopDrawingFrames=false;var mixedVideoStream=getMixedVideoStream();var mixedAudioStream=getMixedAudioStream();if(mixedAudioStream){mixedAudioStream.getTracks().filter(function(t){return t.kind==='audio';}).forEach(function(track){mixedVideoStream.addTrack(track);});}var fullcanvas;arrayOfMediaStreams.forEach(function(stream){if(stream.fullcanvas){fullcanvas=true;}});// mixedVideoStream.prototype.appendStreams = appendStreams;\n// mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\n// mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\nreturn mixedVideoStream;}function getMixedVideoStream(){resetVideoStreams();var capturedStream;if('captureStream'in canvas){capturedStream=canvas.captureStream();}else if('mozCaptureStream'in canvas){capturedStream=canvas.mozCaptureStream();}else if(!self.disableLogs){console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');}var videoStream=new MediaStream();capturedStream.getTracks().filter(function(t){return t.kind==='video';}).forEach(function(track){videoStream.addTrack(track);});canvas.stream=videoStream;return videoStream;}function getMixedAudioStream(){// via: @pehrsons\nif(!Storage.AudioContextConstructor){Storage.AudioContextConstructor=new Storage.AudioContext();}self.audioContext=Storage.AudioContextConstructor;self.audioSources=[];if(self.useGainNode===true){self.gainNode=self.audioContext.createGain();self.gainNode.connect(self.audioContext.destination);self.gainNode.gain.value=0;// don't hear self\n}var audioTracksLength=0;arrayOfMediaStreams.forEach(function(stream){if(!stream.getTracks().filter(function(t){return t.kind==='audio';}).length){return;}audioTracksLength++;var audioSource=self.audioContext.createMediaStreamSource(stream);if(self.useGainNode===true){audioSource.connect(self.gainNode);}self.audioSources.push(audioSource);});if(!audioTracksLength){// because \"self.audioContext\" is not initialized\n// that's why we've to ignore rest of the code\nreturn;}self.audioDestination=self.audioContext.createMediaStreamDestination();self.audioSources.forEach(function(audioSource){audioSource.connect(self.audioDestination);});return self.audioDestination.stream;}function getVideo(stream){var video=document.createElement('video');setSrcObject(stream,video);video.className=elementClass;video.muted=true;video.volume=0;video.width=stream.width||self.width||360;video.height=stream.height||self.height||240;video.play();return video;}this.appendStreams=function(streams){if(!streams){throw'First parameter is required.';}if(!(streams instanceof Array)){streams=[streams];}streams.forEach(function(stream){var newStream=new MediaStream();if(stream.getTracks().filter(function(t){return t.kind==='video';}).length){var video=getVideo(stream);video.stream=stream;videos.push(video);newStream.addTrack(stream.getTracks().filter(function(t){return t.kind==='video';})[0]);}if(stream.getTracks().filter(function(t){return t.kind==='audio';}).length){var audioSource=self.audioContext.createMediaStreamSource(stream);self.audioDestination=self.audioContext.createMediaStreamDestination();audioSource.connect(self.audioDestination);newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t){return t.kind==='audio';})[0]);}arrayOfMediaStreams.push(newStream);});};this.releaseStreams=function(){videos=[];isStopDrawingFrames=true;if(self.gainNode){self.gainNode.disconnect();self.gainNode=null;}if(self.audioSources.length){self.audioSources.forEach(function(source){source.disconnect();});self.audioSources=[];}if(self.audioDestination){self.audioDestination.disconnect();self.audioDestination=null;}if(self.audioContext){self.audioContext.close();}self.audioContext=null;context.clearRect(0,0,canvas.width,canvas.height);if(canvas.stream){canvas.stream.stop();canvas.stream=null;}};this.resetVideoStreams=function(streams){if(streams&&!(streams instanceof Array)){streams=[streams];}resetVideoStreams(streams);};function resetVideoStreams(streams){videos=[];streams=streams||arrayOfMediaStreams;// via: @adrian-ber\nstreams.forEach(function(stream){if(!stream.getTracks().filter(function(t){return t.kind==='video';}).length){return;}var video=getVideo(stream);video.stream=stream;videos.push(video);});}// for debugging\nthis.name='MultiStreamsMixer';this.toString=function(){return this.name;};this.getMixedStream=getMixedStream;}if(typeof RecordRTC==='undefined'){if(typeof module!=='undefined'/* && !!module.exports*/){module.exports=MultiStreamsMixer;}if(typeof define==='function'&&define.amd){define('MultiStreamsMixer',[],function(){return MultiStreamsMixer;});}}// ______________________\n// MultiStreamRecorder.js\n/*\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\n */ /**\n * MultiStreamRecorder can record multiple videos in single container.\n * @summary Multi-videos recorder.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef MultiStreamRecorder\n * @class\n * @example\n * var options = {\n *     mimeType: 'video/webm'\n * }\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\n */function MultiStreamRecorder(arrayOfMediaStreams,options){arrayOfMediaStreams=arrayOfMediaStreams||[];var self=this;var mixer;var mediaRecorder;options=options||{elementClass:'multi-streams-mixer',mimeType:'video/webm',video:{width:360,height:240}};if(!options.frameInterval){options.frameInterval=10;}if(!options.video){options.video={};}if(!options.video.width){options.video.width=360;}if(!options.video.height){options.video.height=240;}/**\n     * This method records all MediaStreams.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){// github/muaz-khan/MultiStreamsMixer\nmixer=new MultiStreamsMixer(arrayOfMediaStreams,options.elementClass||'multi-streams-mixer');if(getAllVideoTracks().length){mixer.frameInterval=options.frameInterval||10;mixer.width=options.video.width||360;mixer.height=options.video.height||240;mixer.startDrawingFrames();}if(options.previewStream&&typeof options.previewStream==='function'){options.previewStream(mixer.getMixedStream());}// record using MediaRecorder API\nmediaRecorder=new MediaStreamRecorder(mixer.getMixedStream(),options);mediaRecorder.record();};function getAllVideoTracks(){var tracks=[];arrayOfMediaStreams.forEach(function(stream){getTracks(stream,'video').forEach(function(track){tracks.push(track);});});return tracks;}/**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){if(!mediaRecorder){return;}mediaRecorder.stop(function(blob){self.blob=blob;callback(blob);self.clearRecordedData();});};/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){if(mediaRecorder){mediaRecorder.pause();}};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){if(mediaRecorder){mediaRecorder.resume();}};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){if(mediaRecorder){mediaRecorder.clearRecordedData();mediaRecorder=null;}if(mixer){mixer.releaseStreams();mixer=null;}};/**\n     * Add extra media-streams to existing recordings.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\n     * @example\n     * recorder.addStreams([newAudioStream, newVideoStream]);\n     */this.addStreams=function(streams){if(!streams){throw'First parameter is required.';}if(!(streams instanceof Array)){streams=[streams];}arrayOfMediaStreams.concat(streams);if(!mediaRecorder||!mixer){return;}mixer.appendStreams(streams);if(options.previewStream&&typeof options.previewStream==='function'){options.previewStream(mixer.getMixedStream());}};/**\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\n     * @example\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\n     */this.resetVideoStreams=function(streams){if(!mixer){return;}if(streams&&!(streams instanceof Array)){streams=[streams];}mixer.resetVideoStreams(streams);};/**\n     * Returns MultiStreamsMixer\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * let mixer = recorder.getMixer();\n     * mixer.appendStreams([newStream]);\n     */this.getMixer=function(){return mixer;};// for debugging\nthis.name='MultiStreamRecorder';this.toString=function(){return this.name;};}if(typeof RecordRTC!=='undefined'){RecordRTC.MultiStreamRecorder=MultiStreamRecorder;}// _____________________\n// RecordRTC.promises.js\n/**\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\n * @summary Promises for {@link RecordRTC}\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCPromisesHandler\n * @class\n * @example\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\n * recorder.startRecording()\n *         .then(successCB)\n *         .catch(errorCB);\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \n * recorder.recordRTC.onStateChanged = function(state) {};\n * recorder.recordRTC.setRecordingDuration(5000);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\n * @requires {@link RecordRTC}\n */function RecordRTCPromisesHandler(mediaStream,options){if(!this){throw'Use \"new RecordRTCPromisesHandler()\"';}if(typeof mediaStream==='undefined'){throw'First argument \"MediaStream\" is required.';}var self=this;/**\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let internal = recorder.recordRTC.getInternalRecorder();\n     * alert(internal instanceof MediaStreamRecorder);\n     * recorder.recordRTC.onStateChanged = function(state) {};\n     */self.recordRTC=new RecordRTC(mediaStream,options);/**\n     * This method records MediaStream.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.startRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */this.startRecording=function(){return new Promise(function(resolve,reject){try{self.recordRTC.startRecording();resolve();}catch(e){reject(e);}});};/**\n     * This method stops the recording.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     var blob = recorder.getBlob();\n     * }).catch(errorCB);\n     */this.stopRecording=function(){return new Promise(function(resolve,reject){try{self.recordRTC.stopRecording(function(url){self.blob=self.recordRTC.getBlob();if(!self.blob||!self.blob.size){reject('Empty blob.',self.blob);return;}resolve(url);});}catch(e){reject(e);}});};/**\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.pauseRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */this.pauseRecording=function(){return new Promise(function(resolve,reject){try{self.recordRTC.pauseRecording();resolve();}catch(e){reject(e);}});};/**\n     * This method resumes the recording.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.resumeRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */this.resumeRecording=function(){return new Promise(function(resolve,reject){try{self.recordRTC.resumeRecording();resolve();}catch(e){reject(e);}});};/**\n     * This method returns data-url for the recorded blob.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     recorder.getDataURL().then(function(dataURL) {\n     *         window.open(dataURL);\n     *     }).catch(errorCB);;\n     * }).catch(errorCB);\n     */this.getDataURL=function(callback){return new Promise(function(resolve,reject){try{self.recordRTC.getDataURL(function(dataURL){resolve(dataURL);});}catch(e){reject(e);}});};/**\n     * This method returns the recorded blob.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     recorder.getBlob().then(function(blob) {})\n     * }).catch(errorCB);\n     */this.getBlob=function(){return new Promise(function(resolve,reject){try{resolve(self.recordRTC.getBlob());}catch(e){reject(e);}});};/**\n     * This method returns the internal recording object.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let internalRecorder = await recorder.getInternalRecorder();\n     * if(internalRecorder instanceof MultiStreamRecorder) {\n     *     internalRecorder.addStreams([newAudioStream]);\n     *     internalRecorder.resetVideoStreams([screenStream]);\n     * }\n     * @returns {Object} \n     */this.getInternalRecorder=function(){return new Promise(function(resolve,reject){try{resolve(self.recordRTC.getInternalRecorder());}catch(e){reject(e);}});};/**\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * await recorder.reset();\n     * recorder.startRecording(); // record again\n     */this.reset=function(){return new Promise(function(resolve,reject){try{resolve(self.recordRTC.reset());}catch(e){reject(e);}});};/**\n     * Destroy RecordRTC instance. Clear all recorders and objects.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.destroy().then(successCB).catch(errorCB);\n     */this.destroy=function(){return new Promise(function(resolve,reject){try{resolve(self.recordRTC.destroy());}catch(e){reject(e);}});};/**\n     * Get recorder's readonly state.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let state = await recorder.getState();\n     * // or\n     * recorder.getState().then(state => { console.log(state); })\n     * @returns {String} Returns recording state.\n     */this.getState=function(){return new Promise(function(resolve,reject){try{resolve(self.recordRTC.getState());}catch(e){reject(e);}});};/**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * await recorder.stopRecording();\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\n     * invokeSaveAsDialog(blob);\n     */this.blob=null;/**\n     * RecordRTC version number\n     * @property {String} version - Release version number.\n     * @memberof RecordRTCPromisesHandler\n     * @static\n     * @readonly\n     * @example\n     * alert(recorder.version);\n     */this.version='5.6.1';}if(typeof RecordRTC!=='undefined'){RecordRTC.RecordRTCPromisesHandler=RecordRTCPromisesHandler;}// ______________________\n// WebAssemblyRecorder.js\n/**\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef WebAssemblyRecorder\n * @class\n * @example\n * var recorder = new WebAssemblyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\n */function WebAssemblyRecorder(stream,config){// based on: github.com/GoogleChromeLabs/webm-wasm\nif(typeof ReadableStream==='undefined'||typeof WritableStream==='undefined'){// because it fixes readable/writable streams issues\nconsole.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');}config=config||{};config.width=config.width||640;config.height=config.height||480;config.frameRate=config.frameRate||30;config.bitrate=config.bitrate||1200;config.realtime=config.realtime||true;function createBufferURL(buffer,type){return URL.createObjectURL(new Blob([buffer],{type:type||''}));}var finished;function cameraStream(){return new ReadableStream({start:function start(controller){var cvs=document.createElement('canvas');var video=document.createElement('video');var first=true;video.srcObject=stream;video.muted=true;video.height=config.height;video.width=config.width;video.volume=0;video.onplaying=function(){cvs.width=config.width;cvs.height=config.height;var ctx=cvs.getContext('2d');var frameTimeout=1000/config.frameRate;var cameraTimer=setInterval(function f(){if(finished){clearInterval(cameraTimer);controller.close();}if(first){first=false;if(config.onVideoProcessStarted){config.onVideoProcessStarted();}}ctx.drawImage(video,0,0);if(controller._controlledReadableStream.state!=='closed'){try{controller.enqueue(ctx.getImageData(0,0,config.width,config.height));}catch(e){}}},frameTimeout);};video.play();}});}var worker;function startRecording(stream,buffer){if(!config.workerPath&&!buffer){finished=false;// is it safe to use @latest ?\nfetch('https://unpkg.com/webm-wasm@latest/dist/webm-worker.js').then(function(r){r.arrayBuffer().then(function(buffer){startRecording(stream,buffer);});});return;}if(!config.workerPath&&buffer instanceof ArrayBuffer){var blob=new Blob([buffer],{type:'text/javascript'});config.workerPath=URL.createObjectURL(blob);}if(!config.workerPath){console.error('workerPath parameter is missing.');}worker=new Worker(config.workerPath);worker.postMessage(config.webAssemblyPath||'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');worker.addEventListener('message',function(event){if(event.data==='READY'){worker.postMessage({width:config.width,height:config.height,bitrate:config.bitrate||1200,timebaseDen:config.frameRate||30,realtime:config.realtime});cameraStream().pipeTo(new WritableStream({write:function write(image){if(finished){console.error('Got image, but recorder is finished!');return;}worker.postMessage(image.data.buffer,[image.data.buffer]);}}));}else if(!!event.data){if(!isPaused){arrayOfBuffers.push(event.data);}}});}/**\n     * This method records video.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.record();\n     */this.record=function(){arrayOfBuffers=[];isPaused=false;this.blob=null;startRecording(stream);if(typeof config.initCallback==='function'){config.initCallback();}};var isPaused;/**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.pause();\n     */this.pause=function(){isPaused=true;};/**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.resume();\n     */this.resume=function(){isPaused=false;};function terminate(callback){if(!worker){if(callback){callback();}return;}// Wait for null event data to indicate that the encoding is complete\nworker.addEventListener('message',function(event){if(event.data===null){worker.terminate();worker=null;if(callback){callback();}}});worker.postMessage(null);}var arrayOfBuffers=[];/**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */this.stop=function(callback){finished=true;var recorder=this;terminate(function(){recorder.blob=new Blob(arrayOfBuffers,{type:'video/webm'});callback(recorder.blob);});};// for debugging\nthis.name='WebAssemblyRecorder';this.toString=function(){return this.name;};/**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */this.clearRecordedData=function(){arrayOfBuffers=[];isPaused=false;this.blob=null;// todo: if recording-ON then STOP it first\n};/**\n     * @property {Blob} blob - The recorded blob object.\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.stop(function(){\n     *     var blob = recorder.blob;\n     * });\n     */this.blob=null;}if(typeof RecordRTC!=='undefined'){RecordRTC.WebAssemblyRecorder=WebAssemblyRecorder;}AWS.config.region='us-east-1';// 1. Enter your region\nAWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:'us-east-1:7ea26b5d-926b-44fd-8936-f8bec3c89452'// 2. Enter your identity pool\n});AWS.config.credentials.get(function(err){if(err)alert(err);console.log(AWS.config.credentials);});var bucketName='immortify-videos';// Enter your bucket name+\nvar bucket=new AWS.S3({params:{Bucket:bucketName}});var fileChooser=document.getElementById('file-chooser');var button=document.getElementById('upload-button');var results=document.getElementById('results');var percentage=document.getElementById('percentage');var cancelUpload=document.getElementById('cancel-button');function dataURLtoFile(dataurl,filename){var arr=dataurl.split(','),mime=arr[0].match(/:(.*?);/)[1],bstr=atob(arr[2]),n=bstr.length,u8arr=new Uint8Array(n);while(n--){u8arr[n]=bstr.charCodeAt(n);}return new File([u8arr],filename,{type:mime});}// Store a reference of the preview video element and a global reference to the recorder instance\nvar video=document.getElementById('my-preview');var recorder;// When the user clicks on start video recording\ndocument.getElementById('btn-start-recording').addEventListener(\"click\",function(){// Disable start recording button\nthis.disabled=true;var audioSource=audioInputSelect.value;var videoSource=videoSelect.value;var constraints={audio:{deviceId:audioSource?{exact:audioSource}:undefined},video:{deviceId:videoSource?{exact:videoSource}:undefined}};// Request access to the media devices\nnavigator.mediaDevices.getUserMedia(constraints).then(function(stream){// Display a live preview on the video element of the page\nsetSrcObject(stream,video);// Start to display the preview on the video element\n// and mute the video to disable the echo issue !\nvideo.play();video.muted=true;// Initialize the recorder\nrecorder=new RecordRTCPromisesHandler(stream,{mimeType:'video/webm',bitsPerSecond:1280000});// Start recording the video\nrecorder.startRecording().then(function(){console.info('Recording video ...');}).catch(function(error){console.log(error);console.error('Cannot start video recording: ',error);});// release stream on stopRecording\nrecorder.stream=stream;// Enable stop recording button\ndocument.getElementById('btn-stop-recording').disabled=false;}).catch(function(error){console.log(error);console.error(\"Cannot access media devices: \",error);});},false);// When the user clicks on Stop video recording\ndocument.getElementById('btn-stop-recording').addEventListener(\"click\",function(){this.disabled=true;recorder.stopRecording().then(function(){console.info('stopRecording success');var DataUrl=recorder.getDataURL();var random=Math.random();DataUrl.then(function(result){var url_file=dataURLtoFile(result,random+'.webm');var objKey=url_file.name;var params={Key:objKey,ContentType:url_file.type,Body:url_file,ACL:'public-read'};// bucket.putObject(params, function(err, data) {\n//     if (err) {\n//         results.innerHTML = 'ERROR: ' + err;\n//     } else {\n//         listObjs();\n//     }\n// });\nvar request=bucket.putObject(params);request.on('httpUploadProgress',function(progress){percentage.innerHTML=parseInt(progress.loaded*100/progress.total)+'%';console.log(\"Uploaded :: \"+parseInt(progress.loaded*100/progress.total)+'%');// console.log(progress.loaded + \" of \" + progress.total + \" bytes\");\n}).send(function(err,data){percentage.innerHTML=\"File has been uploaded successfully.\";//                listObjs();\n});cancelUpload.addEventListener('click',function(){if(request.abort()){percentage.innerHTML=\"Uploading has been canceled.\";}});// here you can use the result of promiseB\n});// Retrieve recorded video as blob and display in the preview element\n/*           var videoBlob = recorder.getBlob();\n\nvar blobUrl = URL.createObjectURL(videoBlob);\n\nconsole.log(\"Blob url\" + blobUrl);\n\nvideo.srcObject = videoBlob;\nvideo.src = URL.createObjectURL(videoBlob);\nvideo.play();\n\n// Unmute video on preview\nvideo.muted = false;\n\n// Stop the device streaming\nrecorder.stream.stop();\n*/ // Enable record button again !\ndocument.getElementById('btn-start-recording').disabled=false;}).catch(function(error){console.error('stopRecording failure',error);});},false);function listObjs(){var prefix='';bucket.listObjects({Prefix:prefix},function(err,data){if(err){results.innerHTML='ERROR: '+err;}else{var objKeys=\"\";data.Contents.forEach(function(obj){objKeys+=obj.Key+\"<br>\";});results.innerHTML=objKeys;}});}// Get the modal\nvar modal=document.getElementById(\"myModal\");// Get the <span> element that closes the modal\nvar span=document.getElementsByClassName(\"close\")[0];// When the user clicks on <span> (x), close the modal\nspan.onclick=function(){modal.style.display=\"none\";};// When the user clicks anywhere outside of the modal, close it\nwindow.onclick=function(event){if(event.target==modal){modal.style.display=\"none\";}};function myFunction(){modal.style.display=\"block\";}'use strict';var videoElement=document.querySelector('video');var audioInputSelect=document.querySelector('select#audioSource');var audioOutputSelect=document.querySelector('select#audioOutput');var videoSelect=document.querySelector('select#videoSource');var selectors=[audioInputSelect,audioOutputSelect,videoSelect];audioOutputSelect.disabled=!('sinkId'in HTMLMediaElement.prototype);function gotDevices(deviceInfos){// Handles being called several times to update labels. Preserve values.\nvar values=selectors.map(function(select){return select.value;});selectors.forEach(function(select){while(select.firstChild){select.removeChild(select.firstChild);}});for(var i=0;i!==deviceInfos.length;++i){var deviceInfo=deviceInfos[i];var option=document.createElement('option');option.value=deviceInfo.deviceId;if(deviceInfo.kind==='audioinput'){option.text=deviceInfo.label||\"microphone \".concat(audioInputSelect.length+1);audioInputSelect.appendChild(option);}else if(deviceInfo.kind==='audiooutput'){option.text=deviceInfo.label||\"speaker \".concat(audioOutputSelect.length+1);audioOutputSelect.appendChild(option);}else if(deviceInfo.kind==='videoinput'){option.text=deviceInfo.label||\"camera \".concat(videoSelect.length+1);videoSelect.appendChild(option);}else{console.log('Some other kind of source/device: ',deviceInfo);}}selectors.forEach(function(select,selectorIndex){if(Array.prototype.slice.call(select.childNodes).some(function(n){return n.value===values[selectorIndex];})){select.value=values[selectorIndex];}});}navigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);// Attach audio output device to video element using device/sink ID.\nfunction attachSinkId(element,sinkId){if(typeof element.sinkId!=='undefined'){element.setSinkId(sinkId).then(function(){console.log(\"Success, audio output device attached: \".concat(sinkId));}).catch(function(error){var errorMessage=error;if(error.name==='SecurityError'){errorMessage=\"You need to use HTTPS for selecting audio output device: \".concat(error);}console.error(errorMessage);// Jump back to first output device in the list as it's the default.\naudioOutputSelect.selectedIndex=0;});}else{console.warn('Browser does not support output device selection.');}}function handleError(error){console.log('navigator.MediaDevices.getUserMedia error: ',error.message,error.name);}/*  \n  // Request access to the media devices\n  navigator.mediaDevices.getUserMedia({\n    audio: true, \n    video: true\n    }).then(function(stream) {\n    // Display a live preview on the video element of the page\n    setSrcObject(stream, video);\n    \n    // Start to display the preview on the video element\n    // and mute the video to disable the echo issue !\n    video.play();\n    video.muted = true;\n    })\n */function start(){if(window.stream){window.stream.getTracks().forEach(function(track){track.stop();});}var audioSource=audioInputSelect.value;var videoSource=videoSelect.value;var constraints={audio:{deviceId:audioSource?{exact:audioSource}:undefined},video:{deviceId:videoSource?{exact:videoSource}:undefined}};navigator.mediaDevices.getUserMedia(constraints).then(function(stream){setSrcObject(stream,video);// Start to display the preview on the video element\n// and mute the video to disable the echo issue !\nvideo.play();});}audioInputSelect.onchange=start;videoSelect.onchange=start;start();export default function Record(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Notes\"},/*#__PURE__*/React.createElement(PageHeader,null,\"Record\"),/*#__PURE__*/React.createElement(\"button\",{id:\"btn-start-recording\"},\"Start Recording\"),/*#__PURE__*/React.createElement(\"button\",{disabled:\"disabled\",id:\"btn-stop-recording\"},\"Stop Recording\"),/*#__PURE__*/React.createElement(\"button\",{id:\"cancel-button\"},\"Cancel Upload\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"video\",{autoplay:\"\",controls:\"\",id:\"my-preview\"}),/*#__PURE__*/React.createElement(\"p\",{id:\"percentage\"}));}","map":{"version":3,"sources":["/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/containers/Record.js"],"names":["React","PageHeader","RecordRTC","mediaStream","config","type","RecordRTCConfiguration","self","startRecording","config2","disableLogs","console","log","version","mediaRecorder","clearRecordedData","record","setState","recordingDuration","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","constructor","name","stopRecording","callback","warningLog","state","resumeRecording","setTimeout","warn","stop","_callback","__blob","call","Object","keys","forEach","key","blob","bytesToSize","size","url","URL","createObjectURL","e","autoWriteToDisk","getDataURL","dataURL","parameter","DiskStorage","Store","pauseRecording","pause","resume","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","navigator","mozGetUserMedia","webWorker","processInWebWorker","onmessage","event","data","reader","FileReader","onload","target","result","_function","Blob","toString","worker","revokeObjectURL","counter","onRecordingStopped","onStateChanged","WARNING","returnObject","setRecordingDuration","getBlob","toURL","getInternalRecorder","save","fileName","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","length","i","push","duration","image","bufferSize","sampleRate","buffer","reset","getState","destroy","disableLogsCache","Storage","AudioContextConstructor","close","prop","module","exports","define","amd","Fetch","_type","replace","writeToDisk","options","audio","video","gif","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","recorderType","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getTracks","MediaRecorder","prototype","mimeType","split","bitsPerSecond","recorder","isChrome","isEdge","isOpera","ReadableStream","isMediaRecorderCompatible","isTypeSupported","Array","MultiStreamRecorder","isSafari","MRecordRTC","addStream","_mediaStream","mediaType","audioRecorder","numberOfAudioChannels","timeSlice","onTimeStamp","newStream","videoTrack","isFirefox","MediaStream","addTrack","videoRecorder","canvas","frameInterval","workerPath","webAssemblyPath","frameRate","bitrate","isSingleRecorder","gifRecorder","quality","blobURL","output","_audioDataURL","_videoDataURL","callback00","webkitURL","args","browserFakeUserAgent","that","window","global","userAgent","getUserMedia","error","arguments","document","documentElement","appendChild","createElement","captureStream","mozCaptureStream","obj","getContext","play","drawImage","toDataURL","style","HTMLVideoElement","location","protocol","href","hash","screen","width","height","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","element","currTime","Date","getTime","timeToCall","Math","max","id","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","indexOf","msSaveBlob","msSaveOrOpenBlob","opera","toLowerCase","test","isElectron","webkitMediaStream","track","bytes","k","sizes","parseInt","floor","pow","toPrecision","file","fileExtension","splitted","fileFullName","round","random","hyperlink","download","body","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","process","versions","electron","stream","kind","filter","t","setSrcObject","srcObject","mozSrcObject","getSeekableBlob","inputBlob","EBML","Error","Reader","decoder","Decoder","tools","fileReader","ebmlElms","decode","read","refinedMetadataBuf","makeMetadataSeekable","metadatas","cues","slice","metadataSize","newBlob","readAsArrayBuffer","nVer","appVersion","nAgt","fullVersion","parseFloat","majorVersion","nameOffset","verOffset","ix","substring","isNaN","arrayOfBlobs","getArrayOfBlobs","timestamps","allStates","recorderHints","canRecordMimeType","ondataavailable","updateTimeStamp","getNativeBlob","getMimeType","recordingCallback","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","start","secondObject","clearRecordedDataCB","isMediaStreamActive","active","ended","getAllStates","checkForInactiveTracks","leftchannel","rightchannel","recording","recordingLength","jsAudioNode","desiredSampRate","leftChannel","resetVariables","isAudioProcessStarted","isPaused","mergeLeftRightBuffers","mergeAudioBuffers","cb","leftBuffers","rightBuffers","internalInterleavedLength","mergeBuffers","interpolateArray","newSampleRate","oldSampleRate","fitCount","newData","springFactor","Number","tmp","before","toFixed","after","ceil","atPoint","linearInterpolate","channelBuffer","rLength","Float64Array","offset","lng","set","interleave","rightChannel","inputIndex","index","writeUTFBytes","string","setUint8","charCodeAt","interleaved","interleavedLength","resultingBufferLength","ArrayBuffer","DataView","setUint32","setUint16","volume","setInt16","noWorker","workerURL","terminate","byteLength","context","audioInput","createMediaStreamSource","legalBufferValues","JSON","stringify","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessDataAvailable","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","createMediaStreamDestination","destination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","_isChrome","webkitRTCPeerConnection","chrome","chromeVersion","matchArray","match","useWhammyRecorder","globalCanvas","mediaStreamRecorder","HTMLCanvasElement","CanvasRenderingContext2D","isRecording","canvasMediaStream","webkitCaptureStream","mdStream","whammy","frames","drawCanvasFrame","getWebPImages","nodeName","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","cloneCanvas","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","Video","cloneNode","onloadedmetadata","muted","drawFrames","paused","isStopDrawing","asyncLoop","o","loop","functionToLoop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","r","g","b","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","f","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","colorDifference","src","concat","_this","WhammyVideo","add","whammyInWebWorker","ArrayToWebM","info","checkFrames","clusterMaxDuration","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","map","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","numToBuffer","num","parts","Uint8Array","reverse","strToBuffer","str","bitsToBuffer","bits","pad","join","substr","json","ebml","len","zeroes","sizeToString","padded","toBinStrOld","String","fromCharCode","flags","out","parseWebP","riff","VP8","RIFF","WEBP","frameStart","c","getStrLength","unpadded","parseRIFF","chunks","webm","atob","init","indexedDB","open","dbVersion","dbName","db","request","createObjectStore","dataBase","dataStoreName","putInDB","transaction","objectStore","put","getFromStore","portionName","get","onsuccess","onError","setVersion","onupgradeneeded","GIFEncoder","script","isHTMLObject","isLoadedMetaData","offsetWidth","offsetHeight","gifEncoder","setRepeat","setDelay","setQuality","onGifRecordingStarted","startTime","now","drawVideoFrame","time","clearedRecordedData","lastAnimationFrame","lastFrameTime","undefined","onGifPreview","addFrame","endTime","bin","autoplay","playsInline","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","opacity","position","zIndex","top","className","useGainNode","startDrawingFrames","drawVideosToCanvas","videosLength","fullcanvas","remaining","x","y","onRender","getMixedStream","mixedVideoStream","getMixedVideoStream","mixedAudioStream","getMixedAudioStream","resetVideoStreams","capturedStream","videoStream","audioContext","audioSources","gainNode","createGain","gain","value","audioTracksLength","audioSource","audioDestination","getVideo","appendStreams","streams","releaseStreams","source","clearRect","mixer","getAllVideoTracks","previewStream","tracks","addStreams","getMixer","RecordRTCPromisesHandler","recordRTC","Promise","resolve","reject","WritableStream","realtime","createBufferURL","finished","cameraStream","controller","cvs","first","onplaying","ctx","frameTimeout","cameraTimer","setInterval","clearInterval","onVideoProcessStarted","_controlledReadableStream","enqueue","fetch","then","arrayBuffer","addEventListener","timebaseDen","pipeTo","write","arrayOfBuffers","AWS","region","credentials","CognitoIdentityCredentials","IdentityPoolId","err","alert","bucketName","bucket","S3","params","Bucket","fileChooser","getElementById","button","results","percentage","cancelUpload","dataURLtoFile","dataurl","filename","arr","mime","bstr","n","u8arr","File","disabled","audioInputSelect","videoSource","videoSelect","constraints","deviceId","exact","mediaDevices","catch","DataUrl","url_file","objKey","Key","ContentType","Body","ACL","putObject","on","progress","innerHTML","loaded","total","send","abort","listObjs","prefix","listObjects","Prefix","objKeys","Contents","modal","span","getElementsByClassName","onclick","display","myFunction","videoElement","querySelector","audioOutputSelect","selectors","HTMLMediaElement","gotDevices","deviceInfos","values","select","firstChild","removeChild","deviceInfo","option","text","label","selectorIndex","childNodes","some","enumerateDevices","handleError","attachSinkId","sinkId","setSinkId","errorMessage","selectedIndex","message","onchange","Record"],"mappings":"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","sourcesContent":["import React, {} from \"react\";\nimport {  } from \"react-router-dom\";\n//import { API, Storage } from \"aws-amplify\";\n//import { onError } from \"../libs/errorLib\";\n//import { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n//import LoaderButton from \"../components/LoaderButton\";\nimport { PageHeader } from \"react-bootstrap\";\nimport \"./Record.css\";\n//import { s3Upload } from \"../libs/awsLib\";\n\n\n\n'use strict';\n\n// Last time updated: 2020-05-17 5:04:38 PM UTC\n\n// ________________\n// RecordRTC v5.6.1\n\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\n// ____________\n// RecordRTC.js\n\n/**\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \n * @summary Record audio, video or screen inside the browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTC\n * @class\n * @example\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\n *     type: 'video', // audio or video or gif or canvas\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\n * });\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\n */\n\nfunction RecordRTC(mediaStream, config) {\n    if (!mediaStream) {\n        throw 'First parameter is required.';\n    }\n\n    config = config || {\n        type: 'video'\n    };\n\n    config = new RecordRTCConfiguration(mediaStream, config);\n\n    // a reference to user's recordRTC object\n    var self = this;\n\n    function startRecording(config2) {\n        if (!config.disableLogs) {\n            console.log('RecordRTC version: ', self.version);\n        }\n\n        if (!!config2) {\n            // allow users to set options using startRecording method\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\n            config = new RecordRTCConfiguration(mediaStream, config2);\n        }\n\n        if (!config.disableLogs) {\n            console.log('started recording ' + config.type + ' stream.');\n        }\n\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n            mediaRecorder.record();\n\n            setState('recording');\n\n            if (self.recordingDuration) {\n                handleRecordingDuration();\n            }\n            return self;\n        }\n\n        initRecorder(function() {\n            if (self.recordingDuration) {\n                handleRecordingDuration();\n            }\n        });\n\n        return self;\n    }\n\n    function initRecorder(initCallback) {\n        if (initCallback) {\n            config.initCallback = function() {\n                initCallback();\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\n            };\n        }\n\n        var Recorder = new GetRecorderType(mediaStream, config);\n\n        mediaRecorder = new Recorder(mediaStream, config);\n        mediaRecorder.record();\n\n        setState('recording');\n\n        if (!config.disableLogs) {\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\n        }\n    }\n\n    function stopRecording(callback) {\n        callback = callback || function() {};\n\n        if (!mediaRecorder) {\n            warningLog();\n            return;\n        }\n\n        if (self.state === 'paused') {\n            self.resumeRecording();\n\n            setTimeout(function() {\n                stopRecording(callback);\n            }, 1);\n            return;\n        }\n\n        if (self.state !== 'recording' && !config.disableLogs) {\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\n        }\n\n        if (!config.disableLogs) {\n            console.log('Stopped recording ' + config.type + ' stream.');\n        }\n\n        if (config.type !== 'gif') {\n            mediaRecorder.stop(_callback);\n        } else {\n            mediaRecorder.stop();\n            _callback();\n        }\n\n        setState('stopped');\n\n        function _callback(__blob) {\n            if (!mediaRecorder) {\n                if (typeof callback.call === 'function') {\n                    callback.call(self, '');\n                } else {\n                    callback('');\n                }\n                return;\n            }\n\n            Object.keys(mediaRecorder).forEach(function(key) {\n                if (typeof mediaRecorder[key] === 'function') {\n                    return;\n                }\n\n                self[key] = mediaRecorder[key];\n            });\n\n            var blob = mediaRecorder.blob;\n\n            if (!blob) {\n                if (__blob) {\n                    mediaRecorder.blob = blob = __blob;\n                } else {\n                    throw 'Recording failed.';\n                }\n            }\n\n            if (blob && !config.disableLogs) {\n                console.log(blob.type, '->', bytesToSize(blob.size));\n            }\n\n            if (callback) {\n                var url;\n\n                try {\n                    url = URL.createObjectURL(blob);\n                } catch (e) {}\n\n                if (typeof callback.call === 'function') {\n                    callback.call(self, url);\n                } else {\n                    callback(url);\n                }\n            }\n\n            if (!config.autoWriteToDisk) {\n                return;\n            }\n\n            getDataURL(function(dataURL) {\n                var parameter = {};\n                parameter[config.type + 'Blob'] = dataURL;\n                DiskStorage.Store(parameter);\n            });\n        }\n    }\n\n    function pauseRecording() {\n        if (!mediaRecorder) {\n            warningLog();\n            return;\n        }\n\n        if (self.state !== 'recording') {\n            if (!config.disableLogs) {\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\n            }\n            return;\n        }\n\n        setState('paused');\n\n        mediaRecorder.pause();\n\n        if (!config.disableLogs) {\n            console.log('Paused recording.');\n        }\n    }\n\n    function resumeRecording() {\n        if (!mediaRecorder) {\n            warningLog();\n            return;\n        }\n\n        if (self.state !== 'paused') {\n            if (!config.disableLogs) {\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\n            }\n            return;\n        }\n\n        setState('recording');\n\n        // not all libs have this method yet\n        mediaRecorder.resume();\n\n        if (!config.disableLogs) {\n            console.log('Resumed recording.');\n        }\n    }\n\n    function readFile(_blob) {\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\n    }\n\n    function getDataURL(callback, _mediaRecorder) {\n        if (!callback) {\n            throw 'Pass a callback function over getDataURL.';\n        }\n\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\n\n        if (!blob) {\n            if (!config.disableLogs) {\n                console.warn('Blob encoder did not finish its job yet.');\n            }\n\n            setTimeout(function() {\n                getDataURL(callback, _mediaRecorder);\n            }, 1000);\n            return;\n        }\n\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\n            var webWorker = processInWebWorker(readFile);\n\n            webWorker.onmessage = function(event) {\n                callback(event.data);\n            };\n\n            webWorker.postMessage(blob);\n        } else {\n            var reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onload = function(event) {\n                callback(event.target.result);\n            };\n        }\n\n        function processInWebWorker(_function) {\n            try {\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n                ], {\n                    type: 'application/javascript'\n                }));\n\n                var worker = new Worker(blob);\n                URL.revokeObjectURL(blob);\n                return worker;\n            } catch (e) {}\n        }\n    }\n\n    function handleRecordingDuration(counter) {\n        counter = counter || 0;\n\n        if (self.state === 'paused') {\n            setTimeout(function() {\n                handleRecordingDuration(counter);\n            }, 1000);\n            return;\n        }\n\n        if (self.state === 'stopped') {\n            return;\n        }\n\n        if (counter >= self.recordingDuration) {\n            stopRecording(self.onRecordingStopped);\n            return;\n        }\n\n        counter += 1000; // 1-second\n\n        setTimeout(function() {\n            handleRecordingDuration(counter);\n        }, 1000);\n    }\n\n    function setState(state) {\n        if (!self) {\n            return;\n        }\n\n        self.state = state;\n\n        if (typeof self.onStateChanged.call === 'function') {\n            self.onStateChanged.call(self, state);\n        } else {\n            self.onStateChanged(state);\n        }\n    }\n\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\n\n    function warningLog() {\n        if (config.disableLogs === true) {\n            return;\n        }\n\n        console.warn(WARNING);\n    }\n\n    var mediaRecorder;\n\n    var returnObject = {\n        /**\n         * This method starts the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var recorder = RecordRTC(mediaStream, {\n         *     type: 'video'\n         * });\n         * recorder.startRecording();\n         */\n        startRecording: startRecording,\n\n        /**\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\n         * @param {function} callback - Callback to get the recorded blob.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     // use either \"this\" or \"recorder\" object; both are identical\n         *     video.src = this.toURL();\n         *     var blob = this.getBlob();\n         * });\n         */\n        stopRecording: stopRecording,\n\n        /**\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo Firefox is unable to pause the recording. Fix it.\n         * @example\n         * recorder.pauseRecording();  // pause the recording\n         * recorder.resumeRecording(); // resume again\n         */\n        pauseRecording: pauseRecording,\n\n        /**\n         * This method resumes the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.pauseRecording();  // first of all, pause the recording\n         * recorder.resumeRecording(); // now resume it\n         */\n        resumeRecording: resumeRecording,\n\n        /**\n         * This method initializes the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo This method should be deprecated.\n         * @example\n         * recorder.initRecorder();\n         */\n        initRecorder: initRecorder,\n\n        /**\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var fiveMinutes = 5 * 1000 * 60;\n         * recorder.setRecordingDuration(fiveMinutes, function() {\n         *    var blob = this.getBlob();\n         *    video.src = this.toURL();\n         * });\n         * \n         * // or otherwise\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\n         *    var blob = this.getBlob();\n         *    video.src = this.toURL();\n         * });\n         */\n        setRecordingDuration: function(recordingDuration, callback) {\n            if (typeof recordingDuration === 'undefined') {\n                throw 'recordingDuration is required.';\n            }\n\n            if (typeof recordingDuration !== 'number') {\n                throw 'recordingDuration must be a number.';\n            }\n\n            self.recordingDuration = recordingDuration;\n            self.onRecordingStopped = callback || function() {};\n\n            return {\n                onRecordingStopped: function(callback) {\n                    self.onRecordingStopped = callback;\n                }\n            };\n        },\n\n        /**\n         * This method can be used to clear/reset all the recorded data.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\n         * @example\n         * recorder.clearRecordedData();\n         */\n        clearRecordedData: function() {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            mediaRecorder.clearRecordedData();\n\n            if (!config.disableLogs) {\n                console.log('Cleared old recorded data.');\n            }\n        },\n\n        /**\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     var blob = this.getBlob();\n         *\n         *     var file = new File([blob], 'filename.webm', {\n         *         type: 'video/webm'\n         *     });\n         *\n         *     var formData = new FormData();\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\n         *     uploadToServer(formData);\n         * });\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\n         */\n        getBlob: function() {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            return mediaRecorder.blob;\n        },\n\n        /**\n         * Get data-URI instead of Blob.\n         * @param {function} callback - Callback to get the Data-URI.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     recorder.getDataURL(function(dataURI) {\n         *         video.src = dataURI;\n         *     });\n         * });\n         */\n        getDataURL: getDataURL,\n\n        /**\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     video.src = this.toURL();\n         * });\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\n         */\n        toURL: function() {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            return URL.createObjectURL(mediaRecorder.blob);\n        },\n\n        /**\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var internalRecorder = recorder.getInternalRecorder();\n         * if(internalRecorder instanceof MultiStreamRecorder) {\n         *     internalRecorder.addStreams([newAudioStream]);\n         *     internalRecorder.resetVideoStreams([screenStream]);\n         * }\n         * @returns {Object} Returns internal recording object.\n         */\n        getInternalRecorder: function() {\n            return mediaRecorder;\n        },\n\n        /**\n         * Invoke save-as dialog to save the recorded blob into your disk.\n         * @param {string} fileName - Set your own file name.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     this.save('file-name');\n         *\n         *     // or manually:\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\n         * });\n         */\n        save: function(fileName) {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\n        },\n\n        /**\n         * This method gets a blob from indexed-DB storage.\n         * @param {function} callback - Callback to get the recorded blob.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.getFromDisk(function(dataURL) {\n         *     video.src = dataURL;\n         * });\n         */\n        getFromDisk: function(callback) {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            RecordRTC.getFromDisk(config.type, callback);\n        },\n\n        /**\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\n         * @type {Array.<Array>}\n         * @param {Array} arrayOfWebPImages - Array of webp images.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo This method should be deprecated.\n         * @example\n         * var arrayOfWebPImages = [];\n         * arrayOfWebPImages.push({\n         *     duration: index,\n         *     image: 'data:image/webp;base64,...'\n         * });\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\n         */\n        setAdvertisementArray: function(arrayOfWebPImages) {\n            config.advertisement = [];\n\n            var length = arrayOfWebPImages.length;\n            for (var i = 0; i < length; i++) {\n                config.advertisement.push({\n                    duration: i,\n                    image: arrayOfWebPImages[i]\n                });\n            }\n        },\n\n        /**\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     var blob = this.blob;\n         *\n         *     // below one is recommended\n         *     var blob = this.getBlob();\n         * });\n         */\n        blob: null,\n\n        /**\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\n         * });\n         */\n        bufferSize: 0,\n\n        /**\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\n         * });\n         */\n        sampleRate: 0,\n\n        /**\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     var arrayBuffer = this.buffer;\n         *     alert(arrayBuffer.byteLength);\n         * });\n         */\n        buffer: null,\n\n        /**\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.reset();\n         * recorder.startRecording();\n         */\n        reset: function() {\n            if (self.state === 'recording' && !config.disableLogs) {\n                console.warn('Stop an active recorder.');\n            }\n\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\n                mediaRecorder.clearRecordedData();\n            }\n            mediaRecorder = null;\n            setState('inactive');\n            self.blob = null;\n        },\n\n        /**\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.onStateChanged = function(state) {\n         *     console.log('Recorder state: ', state);\n         * };\n         */\n        onStateChanged: function(state) {\n            if (!config.disableLogs) {\n                console.log('Recorder state changed:', state);\n            }\n        },\n\n        /**\n         * A recorder can have inactive, recording, paused or stopped states.\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\n         * @memberof RecordRTC\n         * @static\n         * @readonly\n         * @example\n         * // this looper function will keep you updated about the recorder's states.\n         * (function looper() {\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\n         *     if(recorder.state === 'stopped') return; // ignore+stop\n         *     setTimeout(looper, 1000); // update after every 3-seconds\n         * })();\n         * recorder.startRecording();\n         */\n        state: 'inactive',\n\n        /**\n         * Get recorder's readonly state.\n         * @method\n         * @memberof RecordRTC\n         * @example\n         * var state = recorder.getState();\n         * @returns {String} Returns recording state.\n         */\n        getState: function() {\n            return self.state;\n        },\n\n        /**\n         * Destroy RecordRTC instance. Clear all recorders and objects.\n         * @method\n         * @memberof RecordRTC\n         * @example\n         * recorder.destroy();\n         */\n        destroy: function() {\n            var disableLogsCache = config.disableLogs;\n\n            config = {\n                disableLogs: true\n            };\n            self.reset();\n            setState('destroyed');\n            returnObject = self = null;\n\n            if (Storage.AudioContextConstructor) {\n                Storage.AudioContextConstructor.close();\n                Storage.AudioContextConstructor = null;\n            }\n\n            config.disableLogs = disableLogsCache;\n\n            if (!config.disableLogs) {\n                console.log('RecordRTC is destroyed.');\n            }\n        },\n\n        /**\n         * RecordRTC version number\n         * @property {String} version - Release version number.\n         * @memberof RecordRTC\n         * @static\n         * @readonly\n         * @example\n         * alert(recorder.version);\n         */\n        version: '5.6.1'\n    };\n\n    if (!this) {\n        self = returnObject;\n        return returnObject;\n    }\n\n    // if someone wants to use RecordRTC with the \"new\" keyword.\n    for (var prop in returnObject) {\n        this[prop] = returnObject[prop];\n    }\n\n    self = this;\n\n    return returnObject;\n}\n\nRecordRTC.version = '5.6.1';\n\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\n    module.exports = RecordRTC;\n}\n\nif (typeof define === 'function' && define.amd) {\n    define('RecordRTC', [], function() {\n        return RecordRTC;\n    });\n}\n\nRecordRTC.getFromDisk = function(type, callback) {\n    if (!callback) {\n        throw 'callback is mandatory.';\n    }\n\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\n    DiskStorage.Fetch(function(dataURL, _type) {\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\n            callback(dataURL);\n        }\n\n        if (type === 'all' && callback) {\n            callback(dataURL, _type.replace('Blob', ''));\n        }\n    });\n};\n\n/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof RecordRTC\n * @example\n * RecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */\nRecordRTC.writeToDisk = function(options) {\n    console.log('Writing recorded blob(s) to disk!');\n    options = options || {};\n    if (options.audio && options.video && options.gif) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.video.getDataURL(function(videoDataURL) {\n                options.gif.getDataURL(function(gifDataURL) {\n                    DiskStorage.Store({\n                        audioBlob: audioDataURL,\n                        videoBlob: videoDataURL,\n                        gifBlob: gifDataURL\n                    });\n                });\n            });\n        });\n    } else if (options.audio && options.video) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.video.getDataURL(function(videoDataURL) {\n                DiskStorage.Store({\n                    audioBlob: audioDataURL,\n                    videoBlob: videoDataURL\n                });\n            });\n        });\n    } else if (options.audio && options.gif) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.gif.getDataURL(function(gifDataURL) {\n                DiskStorage.Store({\n                    audioBlob: audioDataURL,\n                    gifBlob: gifDataURL\n                });\n            });\n        });\n    } else if (options.video && options.gif) {\n        options.video.getDataURL(function(videoDataURL) {\n            options.gif.getDataURL(function(gifDataURL) {\n                DiskStorage.Store({\n                    videoBlob: videoDataURL,\n                    gifBlob: gifDataURL\n                });\n            });\n        });\n    } else if (options.audio) {\n        options.audio.getDataURL(function(audioDataURL) {\n            DiskStorage.Store({\n                audioBlob: audioDataURL\n            });\n        });\n    } else if (options.video) {\n        options.video.getDataURL(function(videoDataURL) {\n            DiskStorage.Store({\n                videoBlob: videoDataURL\n            });\n        });\n    } else if (options.gif) {\n        options.gif.getDataURL(function(gifDataURL) {\n            DiskStorage.Store({\n                gifBlob: gifDataURL\n            });\n        });\n    }\n};\n\n// __________________________\n// RecordRTC-Configuration.js\n\n/**\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCConfiguration\n * @class\n * @example\n * var options = RecordRTCConfiguration(mediaStream, options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\n */\n\nfunction RecordRTCConfiguration(mediaStream, config) {\n    if (!config.recorderType && !config.type) {\n        if (!!config.audio && !!config.video) {\n            config.type = 'video';\n        } else if (!!config.audio && !config.video) {\n            config.type = 'audio';\n        }\n    }\n\n    if (config.recorderType && !config.type) {\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\n            config.type = 'video';\n        } else if (config.recorderType === GifRecorder) {\n            config.type = 'gif';\n        } else if (config.recorderType === StereoAudioRecorder) {\n            config.type = 'audio';\n        } else if (config.recorderType === MediaStreamRecorder) {\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\n                config.type = 'video';\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\n                config.type = 'video';\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\n                config.type = 'audio';\n            } else {\n                // config.type = 'UnKnown';\n            }\n        }\n    }\n\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\n        if (!config.mimeType) {\n            config.mimeType = 'video/webm';\n        }\n\n        if (!config.type) {\n            config.type = config.mimeType.split('/')[0];\n        }\n\n        if (!config.bitsPerSecond) {\n            // config.bitsPerSecond = 128000;\n        }\n    }\n\n    // consider default type=audio\n    if (!config.type) {\n        if (config.mimeType) {\n            config.type = config.mimeType.split('/')[0];\n        }\n        if (!config.type) {\n            config.type = 'audio';\n        }\n    }\n\n    return config;\n}\n\n// __________________\n// GetRecorderType.js\n\n/**\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\n * @summary It returns best recorder-type available for your browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef GetRecorderType\n * @class\n * @example\n * var RecorderType = GetRecorderType(options);\n * var recorder = new RecorderType(options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n */\n\nfunction GetRecorderType(mediaStream, config) {\n    var recorder;\n\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\n    if (isChrome || isEdge || isOpera) {\n        // Media Stream Recording API has not been implemented in chrome yet;\n        // That's why using WebAudio API to record stereo audio in WAV format\n        recorder = StereoAudioRecorder;\n    }\n\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\n        recorder = MediaStreamRecorder;\n    }\n\n    // video recorder (in WebM format)\n    if (config.type === 'video' && (isChrome || isOpera)) {\n        recorder = WhammyRecorder;\n\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\n            recorder = WebAssemblyRecorder;\n        }\n    }\n\n    // video recorder (in Gif format)\n    if (config.type === 'gif') {\n        recorder = GifRecorder;\n    }\n\n    // html2canvas recording!\n    if (config.type === 'canvas') {\n        recorder = CanvasRecorder;\n    }\n\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\n            // audio-only recording\n            if (config.type === 'audio') {\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\n                    recorder = MediaStreamRecorder;\n                }\n                // else recorder = StereoAudioRecorder;\n            } else {\n                // video or screen tracks\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\n                    recorder = MediaStreamRecorder;\n                }\n            }\n        }\n    }\n\n    if (mediaStream instanceof Array && mediaStream.length) {\n        recorder = MultiStreamRecorder;\n    }\n\n    if (config.recorderType) {\n        recorder = config.recorderType;\n    }\n\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\n    }\n\n    if (!recorder && isSafari) {\n        recorder = MediaStreamRecorder;\n    }\n\n    return recorder;\n}\n\n// _____________\n// MRecordRTC.js\n\n/**\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef MRecordRTC\n * @class\n * @example\n * var recorder = new MRecordRTC();\n * recorder.addStream(MediaStream);\n * recorder.mediaType = {\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n *     gif: true    // or GifRecorder\n * };\n * // mimeType is optional and should be set only in advance cases.\n * recorder.mimeType = {\n *     audio: 'audio/wav',\n *     video: 'video/webm',\n *     gif:   'image/gif'\n * };\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @requires {@link RecordRTC}\n */\n\nfunction MRecordRTC(mediaStream) {\n\n    /**\n     * This method attaches MediaStream object to {@link MRecordRTC}.\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.addStream(MediaStream);\n     */\n    this.addStream = function(_mediaStream) {\n        if (_mediaStream) {\n            mediaStream = _mediaStream;\n        }\n    };\n\n    /**\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\n     * @memberof MRecordRTC\n     * @example\n     * var recorder = new MRecordRTC();\n     * recorder.mediaType = {\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n     *     gif  : true  // TRUE or GifRecorder\n     * };\n     */\n    this.mediaType = {\n        audio: true,\n        video: true\n    };\n\n    /**\n     * This method starts recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.startRecording();\n     */\n    this.startRecording = function() {\n        var mediaType = this.mediaType;\n        var recorderType;\n        var mimeType = this.mimeType || {\n            audio: null,\n            video: null,\n            gif: null\n        };\n\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\n            mediaType.audio = false;\n        }\n\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\n            mediaType.video = false;\n        }\n\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\n            mediaType.gif = false;\n        }\n\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\n            throw 'MediaStream must have either audio or video tracks.';\n        }\n\n        if (!!mediaType.audio) {\n            recorderType = null;\n            if (typeof mediaType.audio === 'function') {\n                recorderType = mediaType.audio;\n            }\n\n            this.audioRecorder = new RecordRTC(mediaStream, {\n                type: 'audio',\n                bufferSize: this.bufferSize,\n                sampleRate: this.sampleRate,\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.audio,\n                timeSlice: this.timeSlice,\n                onTimeStamp: this.onTimeStamp\n            });\n\n            if (!mediaType.video) {\n                this.audioRecorder.startRecording();\n            }\n        }\n\n        if (!!mediaType.video) {\n            recorderType = null;\n            if (typeof mediaType.video === 'function') {\n                recorderType = mediaType.video;\n            }\n\n            var newStream = mediaStream;\n\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\n                var videoTrack = getTracks(mediaStream, 'video')[0];\n\n                if (isFirefox) {\n                    newStream = new MediaStream();\n                    newStream.addTrack(videoTrack);\n\n                    if (recorderType && recorderType === WhammyRecorder) {\n                        // Firefox does NOT supports webp-encoding yet\n                        // But Firefox do supports WebAssemblyRecorder\n                        recorderType = MediaStreamRecorder;\n                    }\n                } else {\n                    newStream = new MediaStream();\n                    newStream.addTrack(videoTrack);\n                }\n            }\n\n            this.videoRecorder = new RecordRTC(newStream, {\n                type: 'video',\n                video: this.video,\n                canvas: this.canvas,\n                frameInterval: this.frameInterval || 10,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.video,\n                timeSlice: this.timeSlice,\n                onTimeStamp: this.onTimeStamp,\n                workerPath: this.workerPath,\n                webAssemblyPath: this.webAssemblyPath,\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\n            });\n\n            if (!mediaType.audio) {\n                this.videoRecorder.startRecording();\n            }\n        }\n\n        if (!!mediaType.audio && !!mediaType.video) {\n            var self = this;\n\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\n\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\n                isSingleRecorder = false;\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\n                isSingleRecorder = false;\n            }\n\n            if (isSingleRecorder === true) {\n                self.audioRecorder = null;\n                self.videoRecorder.startRecording();\n            } else {\n                self.videoRecorder.initRecorder(function() {\n                    self.audioRecorder.initRecorder(function() {\n                        // Both recorders are ready to record things accurately\n                        self.videoRecorder.startRecording();\n                        self.audioRecorder.startRecording();\n                    });\n                });\n            }\n        }\n\n        if (!!mediaType.gif) {\n            recorderType = null;\n            if (typeof mediaType.gif === 'function') {\n                recorderType = mediaType.gif;\n            }\n            this.gifRecorder = new RecordRTC(mediaStream, {\n                type: 'gif',\n                frameRate: this.frameRate || 200,\n                quality: this.quality || 10,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.gif\n            });\n            this.gifRecorder.startRecording();\n        }\n    };\n\n    /**\n     * This method stops recording.\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.stopRecording(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     */\n    this.stopRecording = function(callback) {\n        callback = callback || function() {};\n\n        if (this.audioRecorder) {\n            this.audioRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'audio');\n            });\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'video');\n            });\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'gif');\n            });\n        }\n    };\n\n    /**\n     * This method pauses recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.pauseRecording();\n     */\n    this.pauseRecording = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.pauseRecording();\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.pauseRecording();\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.pauseRecording();\n        }\n    };\n\n    /**\n     * This method resumes recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.resumeRecording();\n     */\n    this.resumeRecording = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.resumeRecording();\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.resumeRecording();\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.resumeRecording();\n        }\n    };\n\n    /**\n     * This method can be used to manually get all recorded blobs.\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getBlob(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     * // or\n     * var audioBlob = recorder.getBlob().audio;\n     * var videoBlob = recorder.getBlob().video;\n     */\n    this.getBlob = function(callback) {\n        var output = {};\n\n        if (this.audioRecorder) {\n            output.audio = this.audioRecorder.getBlob();\n        }\n\n        if (this.videoRecorder) {\n            output.video = this.videoRecorder.getBlob();\n        }\n\n        if (this.gifRecorder) {\n            output.gif = this.gifRecorder.getBlob();\n        }\n\n        if (callback) {\n            callback(output);\n        }\n\n        return output;\n    };\n\n    /**\n     * Destroy all recorder instances.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.destroy();\n     */\n    this.destroy = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.destroy();\n            this.audioRecorder = null;\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.destroy();\n            this.videoRecorder = null;\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.destroy();\n            this.gifRecorder = null;\n        }\n    };\n\n    /**\n     * This method can be used to manually get all recorded blobs' DataURLs.\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getDataURL(function(recording){\n     *     var audioDataURL = recording.audio;\n     *     var videoDataURL = recording.video;\n     *     var gifDataURL   = recording.gif;\n     * });\n     */\n    this.getDataURL = function(callback) {\n        this.getBlob(function(blob) {\n            if (blob.audio && blob.video) {\n                getDataURL(blob.audio, function(_audioDataURL) {\n                    getDataURL(blob.video, function(_videoDataURL) {\n                        callback({\n                            audio: _audioDataURL,\n                            video: _videoDataURL\n                        });\n                    });\n                });\n            } else if (blob.audio) {\n                getDataURL(blob.audio, function(_audioDataURL) {\n                    callback({\n                        audio: _audioDataURL\n                    });\n                });\n            } else if (blob.video) {\n                getDataURL(blob.video, function(_videoDataURL) {\n                    callback({\n                        video: _videoDataURL\n                    });\n                });\n            }\n        });\n\n        function getDataURL(blob, callback00) {\n            if (typeof Worker !== 'undefined') {\n                var webWorker = processInWebWorker(function readFile(_blob) {\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\n                });\n\n                webWorker.onmessage = function(event) {\n                    callback00(event.data);\n                };\n\n                webWorker.postMessage(blob);\n            } else {\n                var reader = new FileReader();\n                reader.readAsDataURL(blob);\n                reader.onload = function(event) {\n                    callback00(event.target.result);\n                };\n            }\n        }\n\n        function processInWebWorker(_function) {\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n            ], {\n                type: 'application/javascript'\n            }));\n\n            var worker = new Worker(blob);\n            var url;\n            if (typeof URL !== 'undefined') {\n                url = URL;\n            } else if (typeof webkitURL !== 'undefined') {\n                url = webkitURL;\n            } else {\n                throw 'Neither URL nor webkitURL detected.';\n            }\n            url.revokeObjectURL(blob);\n            return worker;\n        }\n    };\n\n    /**\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.writeToDisk();\n     */\n    this.writeToDisk = function() {\n        RecordRTC.writeToDisk({\n            audio: this.audioRecorder,\n            video: this.videoRecorder,\n            gif: this.gifRecorder\n        });\n    };\n\n    /**\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.save({\n     *     audio: 'audio-file-name',\n     *     video: 'video-file-name',\n     *     gif  : 'gif-file-name'\n     * });\n     */\n    this.save = function(args) {\n        args = args || {\n            audio: true,\n            video: true,\n            gif: true\n        };\n\n        if (!!args.audio && this.audioRecorder) {\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\n        }\n\n        if (!!args.video && this.videoRecorder) {\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\n        }\n        if (!!args.gif && this.gifRecorder) {\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\n        }\n    };\n}\n\n/**\n * This method can be used to get all recorded blobs from IndexedDB storage.\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\n * @param {function} callback - Callback function to get all stored blobs.\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\n *     if(type === 'audio') { }\n *     if(type === 'video') { }\n *     if(type === 'gif')   { }\n * });\n */\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\n\n/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MRecordRTC = MRecordRTC;\n}\n\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n(function(that) {\n    if (!that) {\n        return;\n    }\n\n    if (typeof window !== 'undefined') {\n        return;\n    }\n\n    if (typeof global === 'undefined') {\n        return;\n    }\n\n    global.navigator = {\n        userAgent: browserFakeUserAgent,\n        getUserMedia: function() {}\n    };\n\n    if (!global.console) {\n        global.console = {};\n    }\n\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\n        global.console.error = global.console.log = global.console.log || function() {\n            console.log(arguments);\n        };\n    }\n\n    if (typeof document === 'undefined') {\n        /*global document:true */\n        that.document = {\n            documentElement: {\n                appendChild: function() {\n                    return '';\n                }\n            }\n        };\n\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\n            var obj = {\n                getContext: function() {\n                    return obj;\n                },\n                play: function() {},\n                pause: function() {},\n                drawImage: function() {},\n                toDataURL: function() {\n                    return '';\n                },\n                style: {}\n            };\n            return obj;\n        };\n\n        that.HTMLVideoElement = function() {};\n    }\n\n    if (typeof location === 'undefined') {\n        /*global location:true */\n        that.location = {\n            protocol: 'file:',\n            href: '',\n            hash: ''\n        };\n    }\n\n    if (typeof screen === 'undefined') {\n        /*global screen:true */\n        that.screen = {\n            width: 0,\n            height: 0\n        };\n    }\n\n    if (typeof URL === 'undefined') {\n        /*global screen:true */\n        that.URL = {\n            createObjectURL: function() {\n                return '';\n            },\n            revokeObjectURL: function() {\n                return '';\n            }\n        };\n    }\n\n    /*global window:true */\n    that.window = global;\n})(typeof global !== 'undefined' ? global : null);\n\n// _____________________________\n// Cross-Browser-Declarations.js\n\n// animation-frame used in WebM recording\n\n/*jshint -W079 */\nvar requestAnimationFrame = window.requestAnimationFrame;\nif (typeof requestAnimationFrame === 'undefined') {\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = webkitRequestAnimationFrame;\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = mozRequestAnimationFrame;\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = msRequestAnimationFrame;\n    } else if (typeof requestAnimationFrame === 'undefined') {\n        // via: https://gist.github.com/paulirish/1579671\n        var lastTime = 0;\n\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = setTimeout(function() {\n                callback(currTime + timeToCall);\n            }, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n}\n\n/*jshint -W079 */\nvar cancelAnimationFrame = window.cancelAnimationFrame;\nif (typeof cancelAnimationFrame === 'undefined') {\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = webkitCancelAnimationFrame;\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = mozCancelAnimationFrame;\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = msCancelAnimationFrame;\n    } else if (typeof cancelAnimationFrame === 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n    }\n}\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\n/*jshint -W079 */\nvar URL = window.URL;\n\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n    /*global URL:true */\n    URL = webkitURL;\n}\n\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n}\n\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\n\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\n    isSafari = false;\n    isChrome = true;\n}\n\nvar MediaStream = window.MediaStream;\n\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n    MediaStream = webkitMediaStream;\n}\n\n/*global MediaStream:true */\nif (typeof MediaStream !== 'undefined') {\n    // override \"stop\" method for all browsers\n    if (typeof MediaStream.prototype.stop === 'undefined') {\n        MediaStream.prototype.stop = function() {\n            this.getTracks().forEach(function(track) {\n                track.stop();\n            });\n        };\n    }\n}\n\n// below function via: http://goo.gl/B3ae8c\n/**\n * Return human-readable file size.\n * @param {number} bytes - Pass bytes and get formatted string.\n * @returns {string} - formatted string\n * @example\n * bytesToSize(1024*1024*5) === '5 GB'\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n\n/**\n * @param {Blob} file - File or Blob object. This parameter is required.\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\n * @example\n * invokeSaveAsDialog(blob or file, [optional] fileName);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction invokeSaveAsDialog(file, fileName) {\n    if (!file) {\n        throw 'Blob object is required.';\n    }\n\n    if (!file.type) {\n        try {\n            file.type = 'video/webm';\n        } catch (e) {}\n    }\n\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\n\n    if (fileName && fileName.indexOf('.') !== -1) {\n        var splitted = fileName.split('.');\n        fileName = splitted[0];\n        fileExtension = splitted[1];\n    }\n\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\n\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\n        return navigator.msSaveBlob(file, fileFullName);\n    }\n\n    var hyperlink = document.createElement('a');\n    hyperlink.href = URL.createObjectURL(file);\n    hyperlink.download = fileFullName;\n\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\n    (document.body || document.documentElement).appendChild(hyperlink);\n\n    if (typeof hyperlink.click === 'function') {\n        hyperlink.click();\n    } else {\n        hyperlink.target = '_blank';\n        hyperlink.dispatchEvent(new MouseEvent('click', {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        }));\n    }\n\n    URL.revokeObjectURL(hyperlink.href);\n}\n\n/**\n * from: https://github.com/cheton/is-electron/blob/master/index.js\n **/\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to true\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction getTracks(stream, kind) {\n    if (!stream || !stream.getTracks) {\n        return [];\n    }\n\n    return stream.getTracks().filter(function(t) {\n        return t.kind === (kind || 'audio');\n    });\n}\n\nfunction setSrcObject(stream, element) {\n    if ('srcObject' in element) {\n        element.srcObject = stream;\n    } else if ('mozSrcObject' in element) {\n        element.mozSrcObject = stream;\n    } else {\n        element.srcObject = stream;\n    }\n}\n\n/**\n * @param {Blob} file - File or Blob object.\n * @param {function} callback - Callback function.\n * @example\n * getSeekableBlob(blob or file, callback);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction getSeekableBlob(inputBlob, callback) {\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\n    if (typeof EBML === 'undefined') {\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\n    }\n\n    var reader = new EBML.Reader();\n    var decoder = new EBML.Decoder();\n    var tools = EBML.tools;\n\n    var fileReader = new FileReader();\n    fileReader.onload = function(e) {\n        var ebmlElms = decoder.decode(this.result);\n        ebmlElms.forEach(function(element) {\n            reader.read(element);\n        });\n        reader.stop();\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\n        var body = this.result.slice(reader.metadataSize);\n        var newBlob = new Blob([refinedMetadataBuf, body], {\n            type: 'video/webm'\n        });\n\n        callback(newBlob);\n    };\n    fileReader.readAsArrayBuffer(inputBlob);\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\n    RecordRTC.getTracks = getTracks;\n    RecordRTC.getSeekableBlob = getSeekableBlob;\n    RecordRTC.bytesToSize = bytesToSize;\n    RecordRTC.isElectron = isElectron;\n}\n\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// Storage.js\n\n/**\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @example\n * Storage.AudioContext === webkitAudioContext\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\nvar Storage = {};\n\nif (typeof AudioContext !== 'undefined') {\n    Storage.AudioContext = AudioContext;\n} else if (typeof webkitAudioContext !== 'undefined') {\n    Storage.AudioContext = webkitAudioContext;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.Storage = Storage;\n}\n\nfunction isMediaRecorderCompatible() {\n    if (isFirefox || isSafari || isEdge) {\n        return true;\n    }\n\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var fullVersion = '' + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var nameOffset, verOffset, ix;\n\n    if (isChrome || isOpera) {\n        verOffset = nAgt.indexOf('Chrome');\n        fullVersion = nAgt.substring(verOffset + 7);\n    }\n\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    majorVersion = parseInt('' + fullVersion, 10);\n\n    if (isNaN(majorVersion)) {\n        fullVersion = '' + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    return majorVersion >= 49;\n}\n\n// ______________________\n// MediaStreamRecorder.js\n\n/**\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\n * @typedef MediaStreamRecorder\n * @class\n * @example\n * var config = {\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\n *     audioBitsPerSecond : 256 * 8 * 1024,\n *     videoBitsPerSecond : 256 * 8 * 1024,\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n *     checkForInactiveTracks: true,\n *     timeSlice: 1000, // concatenate intervals based blobs\n *     ondataavailable: function() {} // get intervals based blobs\n * }\n * var recorder = new MediaStreamRecorder(mediaStream, config);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\n */\n\nfunction MediaStreamRecorder(mediaStream, config) {\n    var self = this;\n\n    if (typeof mediaStream === 'undefined') {\n        throw 'First argument \"MediaStream\" is required.';\n    }\n\n    if (typeof MediaRecorder === 'undefined') {\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\n    }\n\n    config = config || {\n        // bitsPerSecond: 256 * 8 * 1024,\n        mimeType: 'video/webm'\n    };\n\n    if (config.type === 'audio') {\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\n            var stream;\n            if (!!navigator.mozGetUserMedia) {\n                stream = new MediaStream();\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\n            } else {\n                // webkitMediaStream\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\n            }\n            mediaStream = stream;\n        }\n\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\n        }\n\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\n            // forcing better codecs on Firefox (via #166)\n            config.mimeType = 'audio/ogg';\n        }\n    }\n\n    var arrayOfBlobs = [];\n\n    /**\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\n     * @returns {Array} Returns array of recorded blobs.\n     */\n    this.getArrayOfBlobs = function() {\n        return arrayOfBlobs;\n    };\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        // set defaults\n        self.blob = null;\n        self.clearRecordedData();\n        self.timestamps = [];\n        allStates = [];\n        arrayOfBlobs = [];\n\n        var recorderHints = config;\n\n        if (!config.disableLogs) {\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (isChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = 'video/vp8';\n        }\n\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\n                if (!config.disableLogs) {\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n                }\n\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\n            }\n        }\n\n        // using MediaRecorder API here\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n\n            // reset\n            config.mimeType = recorderHints.mimeType;\n        } catch (e) {\n            // chrome-based fallback\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        // old hack?\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\n            if (!config.disableLogs) {\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n            }\n        }\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function(e) {\n            if (e.data) {\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\n            }\n\n            if (typeof config.timeSlice === 'number') {\n                if (e.data && e.data.size && e.data.size > 100) {\n                    arrayOfBlobs.push(e.data);\n                    updateTimeStamp();\n\n                    if (typeof config.ondataavailable === 'function') {\n                        // intervals based blobs\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                            type: getMimeType(recorderHints)\n                        });\n                        config.ondataavailable(blob);\n                    }\n                }\n                return;\n            }\n\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\n                // make sure that stopRecording always getting fired\n                // even if there is invalid data\n                if (self.recordingCallback) {\n                    self.recordingCallback(new Blob([], {\n                        type: getMimeType(recorderHints)\n                    }));\n                    self.recordingCallback = null;\n                }\n                return;\n            }\n\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                type: getMimeType(recorderHints)\n            });\n\n            if (self.recordingCallback) {\n                self.recordingCallback(self.blob);\n                self.recordingCallback = null;\n            }\n        };\n\n        mediaRecorder.onstart = function() {\n            allStates.push('started');\n        };\n\n        mediaRecorder.onpause = function() {\n            allStates.push('paused');\n        };\n\n        mediaRecorder.onresume = function() {\n            allStates.push('resumed');\n        };\n\n        mediaRecorder.onstop = function() {\n            allStates.push('stopped');\n        };\n\n        mediaRecorder.onerror = function(error) {\n            if (!error) {\n                return;\n            }\n\n            if (!error.name) {\n                error.name = 'UnknownError';\n            }\n\n            allStates.push('error: ' + error);\n\n            if (!config.disableLogs) {\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\n                    console.error('MediaRecorder security error', error);\n                }\n\n                // older code below\n                else if (error.name === 'OutOfMemory') {\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'IllegalStreamModification') {\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'OtherRecordingError') {\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'GenericError') {\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\n                } else {\n                    console.error('MediaRecorder Error', error);\n                }\n            }\n\n            (function(looper) {\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\n                    delete config.timeslice;\n\n                    // 10 minutes, enough?\n                    mediaRecorder.start(10 * 60 * 1000);\n                    return;\n                }\n\n                setTimeout(looper, 1000);\n            })();\n\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\n                mediaRecorder.stop();\n            }\n        };\n\n        if (typeof config.timeSlice === 'number') {\n            updateTimeStamp();\n            mediaRecorder.start(config.timeSlice);\n        } else {\n            // default is 60 minutes; enough?\n            // use config => {timeSlice: 1000} otherwise\n\n            mediaRecorder.start(3.6e+6);\n        }\n\n        if (config.initCallback) {\n            config.initCallback(); // old code\n        }\n    };\n\n    /**\n     * @property {Array} timestamps - Array of time stamps\n     * @memberof MediaStreamRecorder\n     * @example\n     * console.log(recorder.timestamps);\n     */\n    this.timestamps = [];\n\n    function updateTimeStamp() {\n        self.timestamps.push(new Date().getTime());\n\n        if (typeof config.onTimeStamp === 'function') {\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\n        }\n    }\n\n    function getMimeType(secondObject) {\n        if (mediaRecorder && mediaRecorder.mimeType) {\n            return mediaRecorder.mimeType;\n        }\n\n        return secondObject.mimeType || 'video/webm';\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.recordingCallback = callback;\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.stop();\n        }\n\n        if (typeof config.timeSlice === 'number') {\n            setTimeout(function() {\n                self.blob = new Blob(arrayOfBlobs, {\n                    type: getMimeType(config)\n                });\n\n                self.recordingCallback(self.blob);\n            }, 100);\n        }\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'paused') {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\n            self.stop(clearRecordedDataCB);\n        }\n\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        arrayOfBlobs = [];\n        mediaRecorder = null;\n        self.timestamps = [];\n    }\n\n    // Reference to \"MediaRecorder\" object\n    var mediaRecorder;\n\n    /**\n     * Access to native MediaRecorder API\n     * @method\n     * @memberof MediaStreamRecorder\n     * @instance\n     * @example\n     * var internal = recorder.getInternalRecorder();\n     * internal.ondataavailable = function() {}; // override\n     * internal.stream, internal.onpause, internal.onstop, etc.\n     * @returns {Object} Returns internal recording object.\n     */\n    this.getInternalRecorder = function() {\n        return mediaRecorder;\n    };\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function() {\n     *     var blob = recorder.blob;\n     * });\n     */\n    this.blob = null;\n\n\n    /**\n     * Get MediaRecorder readonly state.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getState();\n     * @returns {String} Returns recording state.\n     */\n    this.getState = function() {\n        if (!mediaRecorder) {\n            return 'inactive';\n        }\n\n        return mediaRecorder.state || 'inactive';\n    };\n\n    // list of all recording states\n    var allStates = [];\n\n    /**\n     * Get MediaRecorder all recording states.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getAllStates();\n     * @returns {Array} Returns all recording states\n     */\n    this.getAllStates = function() {\n        return allStates;\n    };\n\n    // if any Track within the MediaStream is muted or not enabled at any time, \n    // the browser will only record black frames \n    // or silence since that is the content produced by the Track\n    // so we need to stopRecording as soon as any single track ends.\n    if (typeof config.checkForInactiveTracks === 'undefined') {\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\n    }\n\n    var self = this;\n\n    // this method checks if media stream is stopped\n    // or if any track is ended.\n    (function looper() {\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n\n    // for debugging\n    this.name = 'MediaStreamRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\n}\n\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n// https://github.com/mattdiamond/Recorderjs#license-mit\n// ______________________\n// StereoAudioRecorder.js\n\n/**\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\n * @summary JavaScript standalone object for stereo audio recording.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef StereoAudioRecorder\n * @class\n * @example\n * var recorder = new StereoAudioRecorder(MediaStream, {\n *     sampleRate: 44100,\n *     bufferSize: 4096\n * });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\n */\n\nfunction StereoAudioRecorder(mediaStream, config) {\n    if (!getTracks(mediaStream, 'audio').length) {\n        throw 'Your stream has no audio tracks.';\n    }\n\n    config = config || {};\n\n    var self = this;\n\n    // variables\n    var leftchannel = [];\n    var rightchannel = [];\n    var recording = false;\n    var recordingLength = 0;\n    var jsAudioNode;\n\n    var numberOfAudioChannels = 2;\n\n    /**\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\n     * @memberof StereoAudioRecorder\n     * @instance\n     * @example\n     * var recorder = StereoAudioRecorder(mediaStream, {\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\n     * });\n     */\n    var desiredSampRate = config.desiredSampRate;\n\n    // backward compatibility\n    if (config.leftChannel === true) {\n        numberOfAudioChannels = 1;\n    }\n\n    if (config.numberOfAudioChannels === 1) {\n        numberOfAudioChannels = 1;\n    }\n\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\n        numberOfAudioChannels = 2;\n    }\n\n    if (!config.disableLogs) {\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\n    }\n\n    // if any Track within the MediaStream is muted or not enabled at any time, \n    // the browser will only record black frames \n    // or silence since that is the content produced by the Track\n    // so we need to stopRecording as soon as any single track ends.\n    if (typeof config.checkForInactiveTracks === 'undefined') {\n        config.checkForInactiveTracks = true;\n    }\n\n    function isMediaStreamActive() {\n        if (config.checkForInactiveTracks === false) {\n            // always return \"true\"\n            return true;\n        }\n\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (isMediaStreamActive() === false) {\n            throw 'Please make sure MediaStream is active.';\n        }\n\n        resetVariables();\n\n        isAudioProcessStarted = isPaused = false;\n        recording = true;\n\n        if (typeof config.timeSlice !== 'undefined') {\n            looper();\n        }\n    };\n\n    function mergeLeftRightBuffers(config, callback) {\n        function mergeAudioBuffers(config, cb) {\n            var numberOfAudioChannels = config.numberOfAudioChannels;\n\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\n            var leftBuffers = config.leftBuffers.slice(0);\n            var rightBuffers = config.rightBuffers.slice(0);\n            var sampleRate = config.sampleRate;\n            var internalInterleavedLength = config.internalInterleavedLength;\n            var desiredSampRate = config.desiredSampRate;\n\n            if (numberOfAudioChannels === 2) {\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\n\n                if (desiredSampRate) {\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\n                }\n            }\n\n            if (numberOfAudioChannels === 1) {\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n\n                if (desiredSampRate) {\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\n                }\n            }\n\n            // set sample rate as desired sample rate\n            if (desiredSampRate) {\n                sampleRate = desiredSampRate;\n            }\n\n            // for changing the sampling rate, reference:\n            // http://stackoverflow.com/a/28977136/552182\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\n                var newData = [];\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\n                newData[0] = data[0];\n                for (var i = 1; i < fitCount - 1; i++) {\n                    var tmp = i * springFactor;\n                    var before = Number(Math.floor(tmp)).toFixed();\n                    var after = Number(Math.ceil(tmp)).toFixed();\n                    var atPoint = tmp - before;\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\n                }\n                newData[fitCount - 1] = data[data.length - 1];\n                return newData;\n            }\n\n            function linearInterpolate(before, after, atPoint) {\n                return before + (after - before) * atPoint;\n            }\n\n            function mergeBuffers(channelBuffer, rLength) {\n                var result = new Float64Array(rLength);\n                var offset = 0;\n                var lng = channelBuffer.length;\n\n                for (var i = 0; i < lng; i++) {\n                    var buffer = channelBuffer[i];\n                    result.set(buffer, offset);\n                    offset += buffer.length;\n                }\n\n                return result;\n            }\n\n            function interleave(leftChannel, rightChannel) {\n                var length = leftChannel.length + rightChannel.length;\n\n                var result = new Float64Array(length);\n\n                var inputIndex = 0;\n\n                for (var index = 0; index < length;) {\n                    result[index++] = leftChannel[inputIndex];\n                    result[index++] = rightChannel[inputIndex];\n                    inputIndex++;\n                }\n                return result;\n            }\n\n            function writeUTFBytes(view, offset, string) {\n                var lng = string.length;\n                for (var i = 0; i < lng; i++) {\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            }\n\n            // interleave both channels together\n            var interleaved;\n\n            if (numberOfAudioChannels === 2) {\n                interleaved = interleave(leftBuffers, rightBuffers);\n            }\n\n            if (numberOfAudioChannels === 1) {\n                interleaved = leftBuffers;\n            }\n\n            var interleavedLength = interleaved.length;\n\n            // create wav file\n            var resultingBufferLength = 44 + interleavedLength * 2;\n\n            var buffer = new ArrayBuffer(resultingBufferLength);\n\n            var view = new DataView(buffer);\n\n            // RIFF chunk descriptor/identifier \n            writeUTFBytes(view, 0, 'RIFF');\n\n            // RIFF chunk length\n            // changed \"44\" to \"36\" via #401\n            view.setUint32(4, 36 + interleavedLength * 2, true);\n\n            // RIFF type \n            writeUTFBytes(view, 8, 'WAVE');\n\n            // format chunk identifier \n            // FMT sub-chunk\n            writeUTFBytes(view, 12, 'fmt ');\n\n            // format chunk length \n            view.setUint32(16, 16, true);\n\n            // sample format (raw)\n            view.setUint16(20, 1, true);\n\n            // stereo (2 channels)\n            view.setUint16(22, numberOfAudioChannels, true);\n\n            // sample rate \n            view.setUint32(24, sampleRate, true);\n\n            // byte rate (sample rate * block align)\n            view.setUint32(28, sampleRate * 2, true);\n\n            // block align (channel count * bytes per sample) \n            view.setUint16(32, numberOfAudioChannels * 2, true);\n\n            // bits per sample \n            view.setUint16(34, 16, true);\n\n            // data sub-chunk\n            // data chunk identifier \n            writeUTFBytes(view, 36, 'data');\n\n            // data chunk length \n            view.setUint32(40, interleavedLength * 2, true);\n\n            // write the PCM samples\n            var lng = interleavedLength;\n            var index = 44;\n            var volume = 1;\n            for (var i = 0; i < lng; i++) {\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\n                index += 2;\n            }\n\n            if (cb) {\n                return cb({\n                    buffer: buffer,\n                    view: view\n                });\n            }\n\n            postMessage({\n                buffer: buffer,\n                view: view\n            });\n        }\n\n        if (config.noWorker) {\n            mergeAudioBuffers(config, function(data) {\n                callback(data.buffer, data.view);\n            });\n            return;\n        }\n\n\n        var webWorker = processInWebWorker(mergeAudioBuffers);\n\n        webWorker.onmessage = function(event) {\n            callback(event.data.buffer, event.data.view);\n\n            // release memory\n            URL.revokeObjectURL(webWorker.workerURL);\n\n            // kill webworker (or Chrome will kill your page after ~25 calls)\n            webWorker.terminate();\n        };\n\n        webWorker.postMessage(config);\n    }\n\n    function processInWebWorker(_function) {\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(workerURL);\n        worker.workerURL = workerURL;\n        return worker;\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        // stop recording\n        recording = false;\n\n        mergeLeftRightBuffers({\n            desiredSampRate: desiredSampRate,\n            sampleRate: sampleRate,\n            numberOfAudioChannels: numberOfAudioChannels,\n            internalInterleavedLength: recordingLength,\n            leftBuffers: leftchannel,\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\n            noWorker: config.noWorker\n        }, function(buffer, view) {\n            /**\n             * @property {Blob} blob - The recorded blob object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var blob = recorder.blob;\n             * });\n             */\n            self.blob = new Blob([view], {\n                type: 'audio/wav'\n            });\n\n            /**\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var buffer = recorder.buffer;\n             * });\n             */\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\n\n            /**\n             * @property {DataView} view - The recorded data-view object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var view = recorder.view;\n             * });\n             */\n            self.view = view;\n\n            self.sampleRate = desiredSampRate || sampleRate;\n            self.bufferSize = bufferSize;\n\n            // recorded audio length\n            self.length = recordingLength;\n\n            isAudioProcessStarted = false;\n\n            if (callback) {\n                callback(self.blob);\n            }\n        });\n    };\n\n    if (typeof RecordRTC.Storage === 'undefined') {\n        RecordRTC.Storage = {\n            AudioContextConstructor: null,\n            AudioContext: window.AudioContext || window.webkitAudioContext\n        };\n    }\n\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\n    }\n\n    var context = RecordRTC.Storage.AudioContextConstructor;\n\n    // creates an audio node from the microphone incoming stream\n    var audioInput = context.createMediaStreamSource(mediaStream);\n\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\n\n    /**\n     * From the spec: This value controls how frequently the audioprocess event is\n     * dispatched and how many sample-frames need to be processed each call.\n     * Lower values for buffer size will result in a lower (better) latency.\n     * Higher values will be necessary to avoid audio breakup and glitches\n     * The size of the buffer (in sample-frames) which needs to\n     * be processed each time onprocessaudio is called.\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     bufferSize: 4096\n     * });\n     */\n\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\n\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\n        if (!config.disableLogs) {\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\n        }\n    }\n\n    if (context.createJavaScriptNode) {\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else if (context.createScriptProcessor) {\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else {\n        throw 'WebAudio API has no support on this browser.';\n    }\n\n    // connect the stream to the script processor\n    audioInput.connect(jsAudioNode);\n\n    if (!config.bufferSize) {\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\n    }\n\n    /**\n     * The sample rate (in sample-frames per second) at which the\n     * AudioContext handles audio. It is assumed that all AudioNodes\n     * in the context run at this rate. In making this assumption,\n     * sample-rate converters or \"varispeed\" processors are not supported\n     * in real-time processing.\n     * The sampleRate parameter describes the sample-rate of the\n     * linear PCM audio data in the buffer in sample-frames per second.\n     * An implementation must support sample-rates in at least\n     * the range 22050 to 96000.\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     sampleRate: 44100\n     * });\n     */\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\n\n    if (sampleRate < 22050 || sampleRate > 96000) {\n        // Ref: http://stackoverflow.com/a/26303918/552182\n        if (!config.disableLogs) {\n            console.log('sample-rate must be under range 22050 and 96000.');\n        }\n    }\n\n    if (!config.disableLogs) {\n        if (config.desiredSampRate) {\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\n        }\n    }\n\n    var isPaused = false;\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (isMediaStreamActive() === false) {\n            throw 'Please make sure MediaStream is active.';\n        }\n\n        if (!recording) {\n            if (!config.disableLogs) {\n                console.log('Seems recording has been restarted.');\n            }\n            this.record();\n            return;\n        }\n\n        isPaused = false;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        config.checkForInactiveTracks = false;\n\n        if (recording) {\n            this.stop(clearRecordedDataCB);\n        }\n\n        clearRecordedDataCB();\n    };\n\n    function resetVariables() {\n        leftchannel = [];\n        rightchannel = [];\n        recordingLength = 0;\n        isAudioProcessStarted = false;\n        recording = false;\n        isPaused = false;\n        context = null;\n\n        self.leftchannel = leftchannel;\n        self.rightchannel = rightchannel;\n        self.numberOfAudioChannels = numberOfAudioChannels;\n        self.desiredSampRate = desiredSampRate;\n        self.sampleRate = sampleRate;\n        self.recordingLength = recordingLength;\n\n        intervalsBasedBuffers = {\n            left: [],\n            right: [],\n            recordingLength: 0\n        };\n    }\n\n    function clearRecordedDataCB() {\n        if (jsAudioNode) {\n            jsAudioNode.onaudioprocess = null;\n            jsAudioNode.disconnect();\n            jsAudioNode = null;\n        }\n\n        if (audioInput) {\n            audioInput.disconnect();\n            audioInput = null;\n        }\n\n        resetVariables();\n    }\n\n    // for debugging\n    this.name = 'StereoAudioRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    var isAudioProcessStarted = false;\n\n    function onAudioProcessDataAvailable(e) {\n        if (isPaused) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            jsAudioNode.disconnect();\n            recording = false;\n        }\n\n        if (!recording) {\n            if (audioInput) {\n                audioInput.disconnect();\n                audioInput = null;\n            }\n            return;\n        }\n\n        /**\n         * This method is called on \"onaudioprocess\" event's first invocation.\n         * @method {function} onAudioProcessStarted\n         * @memberof StereoAudioRecorder\n         * @example\n         * recorder.onAudioProcessStarted: function() { };\n         */\n        if (!isAudioProcessStarted) {\n            isAudioProcessStarted = true;\n            if (config.onAudioProcessStarted) {\n                config.onAudioProcessStarted();\n            }\n\n            if (config.initCallback) {\n                config.initCallback();\n            }\n        }\n\n        var left = e.inputBuffer.getChannelData(0);\n\n        // we clone the samples\n        var chLeft = new Float32Array(left);\n        leftchannel.push(chLeft);\n\n        if (numberOfAudioChannels === 2) {\n            var right = e.inputBuffer.getChannelData(1);\n            var chRight = new Float32Array(right);\n            rightchannel.push(chRight);\n        }\n\n        recordingLength += bufferSize;\n\n        // export raw PCM\n        self.recordingLength = recordingLength;\n\n        if (typeof config.timeSlice !== 'undefined') {\n            intervalsBasedBuffers.recordingLength += bufferSize;\n            intervalsBasedBuffers.left.push(chLeft);\n\n            if (numberOfAudioChannels === 2) {\n                intervalsBasedBuffers.right.push(chRight);\n            }\n        }\n    }\n\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\n\n    // to prevent self audio to be connected with speakers\n    if (context.createMediaStreamDestination) {\n        jsAudioNode.connect(context.createMediaStreamDestination());\n    } else {\n        jsAudioNode.connect(context.destination);\n    }\n\n    // export raw PCM\n    this.leftchannel = leftchannel;\n    this.rightchannel = rightchannel;\n    this.numberOfAudioChannels = numberOfAudioChannels;\n    this.desiredSampRate = desiredSampRate;\n    this.sampleRate = sampleRate;\n    self.recordingLength = recordingLength;\n\n    // helper for intervals based blobs\n    var intervalsBasedBuffers = {\n        left: [],\n        right: [],\n        recordingLength: 0\n    };\n\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\n    function looper() {\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\n            return;\n        }\n\n        if (intervalsBasedBuffers.left.length) {\n            mergeLeftRightBuffers({\n                desiredSampRate: desiredSampRate,\n                sampleRate: sampleRate,\n                numberOfAudioChannels: numberOfAudioChannels,\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\n                leftBuffers: intervalsBasedBuffers.left,\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\n            }, function(buffer, view) {\n                var blob = new Blob([view], {\n                    type: 'audio/wav'\n                });\n                config.ondataavailable(blob);\n\n                setTimeout(looper, config.timeSlice);\n            });\n\n            intervalsBasedBuffers = {\n                left: [],\n                right: [],\n                recordingLength: 0\n            };\n        } else {\n            setTimeout(looper, config.timeSlice);\n        }\n    }\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\n}\n\n// _________________\n// CanvasRecorder.js\n\n/**\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\n * @summary HTML2Canvas recording into video WebM.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef CanvasRecorder\n * @class\n * @example\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\n * @param {object} config - {disableLogs:true, initCallback: function}\n */\n\nfunction CanvasRecorder(htmlElement, config) {\n    if (typeof html2canvas === 'undefined') {\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\n    }\n\n    config = config || {};\n    if (!config.frameInterval) {\n        config.frameInterval = 10;\n    }\n\n    // via DetectRTC.js\n    var isCanvasSupportsStreamCapturing = false;\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\n        if (item in document.createElement('canvas')) {\n            isCanvasSupportsStreamCapturing = true;\n        }\n    });\n\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\n\n    var chromeVersion = 50;\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (_isChrome && matchArray && matchArray[2]) {\n        chromeVersion = parseInt(matchArray[2], 10);\n    }\n\n    if (_isChrome && chromeVersion < 52) {\n        isCanvasSupportsStreamCapturing = false;\n    }\n\n    if (config.useWhammyRecorder) {\n        isCanvasSupportsStreamCapturing = false;\n    }\n\n    var globalCanvas, mediaStreamRecorder;\n\n    if (isCanvasSupportsStreamCapturing) {\n        if (!config.disableLogs) {\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\n        }\n\n        if (htmlElement instanceof HTMLCanvasElement) {\n            globalCanvas = htmlElement;\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\n            globalCanvas = htmlElement.canvas;\n        } else {\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\n        }\n    } else if (!!navigator.mozGetUserMedia) {\n        if (!config.disableLogs) {\n            console.error('Canvas recording is NOT supported in Firefox.');\n        }\n    }\n\n    var isRecording;\n\n    /**\n     * This method records Canvas.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        isRecording = true;\n\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\n            // CanvasCaptureMediaStream\n            var canvasMediaStream;\n            if ('captureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\n            } else if ('mozCaptureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\n            } else if ('webkitCaptureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\n            }\n\n            try {\n                var mdStream = new MediaStream();\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\n                canvasMediaStream = mdStream;\n            } catch (e) {}\n\n            if (!canvasMediaStream) {\n                throw 'captureStream API are NOT available.';\n            }\n\n            // Note: Jan 18, 2016 status is that, \n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\n                mimeType: config.mimeType || 'video/webm'\n            });\n            mediaStreamRecorder.record();\n        } else {\n            whammy.frames = [];\n            lastTime = new Date().getTime();\n            drawCanvasFrame();\n        }\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    this.getWebPImages = function(callback) {\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\n            callback();\n            return;\n        }\n\n        var framesLength = whammy.frames.length;\n        whammy.frames.forEach(function(frame, idx) {\n            var framesRemaining = framesLength - idx;\n            if (!config.disableLogs) {\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\n            }\n\n            if (config.onEncodingCallback) {\n                config.onEncodingCallback(framesRemaining, framesLength);\n            }\n\n            var webp = frame.image.toDataURL('image/webp', 1);\n            whammy.frames[idx].image = webp;\n        });\n\n        if (!config.disableLogs) {\n            console.log('Generating WebM');\n        }\n\n        callback();\n    };\n\n    /**\n     * This method stops recording Canvas.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        isRecording = false;\n\n        var that = this;\n\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\n            mediaStreamRecorder.stop(callback);\n            return;\n        }\n\n        this.getWebPImages(function() {\n            /**\n             * @property {Blob} blob - Recorded frames in video/webm blob.\n             * @memberof CanvasRecorder\n             * @example\n             * recorder.stop(function() {\n             *     var blob = recorder.blob;\n             * });\n             */\n            whammy.compile(function(blob) {\n                if (!config.disableLogs) {\n                    console.log('Recording finished!');\n                }\n\n                that.blob = blob;\n\n                if (that.blob.forEach) {\n                    that.blob = new Blob([], {\n                        type: 'video/webm'\n                    });\n                }\n\n                if (callback) {\n                    callback(that.blob);\n                }\n\n                whammy.frames = [];\n            });\n        });\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\n            mediaStreamRecorder.pause();\n            return;\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\n            mediaStreamRecorder.resume();\n            return;\n        }\n\n        if (!isRecording) {\n            this.record();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (isRecording) {\n            this.stop(clearRecordedDataCB);\n        }\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        whammy.frames = [];\n        isRecording = false;\n        isPausedRecording = false;\n    }\n\n    // for debugging\n    this.name = 'CanvasRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    function cloneCanvas() {\n        //create a new canvas\n        var newCanvas = document.createElement('canvas');\n        var context = newCanvas.getContext('2d');\n\n        //set dimensions\n        newCanvas.width = htmlElement.width;\n        newCanvas.height = htmlElement.height;\n\n        //apply the old canvas to the new one\n        context.drawImage(htmlElement, 0, 0);\n\n        //return the new canvas\n        return newCanvas;\n    }\n\n    function drawCanvasFrame() {\n        if (isPausedRecording) {\n            lastTime = new Date().getTime();\n            return setTimeout(drawCanvasFrame, 500);\n        }\n\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\n            var duration = new Date().getTime() - lastTime;\n            // via #206, by Jack i.e. @Seymourr\n            lastTime = new Date().getTime();\n\n            whammy.frames.push({\n                image: cloneCanvas(),\n                duration: duration\n            });\n\n            if (isRecording) {\n                setTimeout(drawCanvasFrame, config.frameInterval);\n            }\n            return;\n        }\n\n        html2canvas(htmlElement, {\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\n            onrendered: function(canvas) {\n                var duration = new Date().getTime() - lastTime;\n                if (!duration) {\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\n                }\n\n                // via #206, by Jack i.e. @Seymourr\n                lastTime = new Date().getTime();\n\n                whammy.frames.push({\n                    image: canvas.toDataURL('image/webp', 1),\n                    duration: duration\n                });\n\n                if (isRecording) {\n                    setTimeout(drawCanvasFrame, config.frameInterval);\n                }\n            }\n        });\n    }\n\n    var lastTime = new Date().getTime();\n\n    var whammy = new Whammy.Video(100);\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.CanvasRecorder = CanvasRecorder;\n}\n\n// _________________\n// WhammyRecorder.js\n\n/**\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\n * @summary Video recording feature in Chrome.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef WhammyRecorder\n * @class\n * @example\n * var recorder = new WhammyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\n */\n\nfunction WhammyRecorder(mediaStream, config) {\n\n    config = config || {};\n\n    if (!config.frameInterval) {\n        config.frameInterval = 10;\n    }\n\n    if (!config.disableLogs) {\n        console.log('Using frames-interval:', config.frameInterval);\n    }\n\n    /**\n     * This method records video.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (!config.width) {\n            config.width = 320;\n        }\n\n        if (!config.height) {\n            config.height = 240;\n        }\n\n        if (!config.video) {\n            config.video = {\n                width: config.width,\n                height: config.height\n            };\n        }\n\n        if (!config.canvas) {\n            config.canvas = {\n                width: config.width,\n                height: config.height\n            };\n        }\n\n        canvas.width = config.canvas.width || 320;\n        canvas.height = config.canvas.height || 240;\n\n        context = canvas.getContext('2d');\n\n        // setting defaults\n        if (config.video && config.video instanceof HTMLVideoElement) {\n            video = config.video.cloneNode();\n\n            if (config.initCallback) {\n                config.initCallback();\n            }\n        } else {\n            video = document.createElement('video');\n\n            setSrcObject(mediaStream, video);\n\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\n                if (config.initCallback) {\n                    config.initCallback();\n                }\n            };\n\n            video.width = config.video.width;\n            video.height = config.video.height;\n        }\n\n        video.muted = true;\n        video.play();\n\n        lastTime = new Date().getTime();\n        whammy = new Whammy.Video();\n\n        if (!config.disableLogs) {\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\n        }\n\n        drawFrames(config.frameInterval);\n    };\n\n    /**\n     * Draw and push frames to Whammy\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\n     */\n    function drawFrames(frameInterval) {\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\n\n        var duration = new Date().getTime() - lastTime;\n        if (!duration) {\n            return setTimeout(drawFrames, frameInterval, frameInterval);\n        }\n\n        if (isPausedRecording) {\n            lastTime = new Date().getTime();\n            return setTimeout(drawFrames, 100);\n        }\n\n        // via #206, by Jack i.e. @Seymourr\n        lastTime = new Date().getTime();\n\n        if (video.paused) {\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n            // Tweak for Android Chrome\n            video.play();\n        }\n\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        whammy.frames.push({\n            duration: duration,\n            image: canvas.toDataURL('image/webp')\n        });\n\n        if (!isStopDrawing) {\n            setTimeout(drawFrames, frameInterval, frameInterval);\n        }\n    }\n\n    function asyncLoop(o) {\n        var i = -1,\n            length = o.length;\n\n        (function loop() {\n            i++;\n            if (i === length) {\n                o.callback();\n                return;\n            }\n\n            // \"setTimeout\" added by Jim McLeod\n            setTimeout(function() {\n                o.functionToLoop(loop, i);\n            }, 1);\n        })();\n    }\n\n\n    /**\n     * remove black frames from the beginning to the specified frame\n     * @param {Array} _frames - array of frames to be checked\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\n     * @returns {Array} - array of frames\n     */\n    // pull#293 by @volodalexey\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n        var resultFrames = [];\n\n        var checkUntilNotBlack = _framesToCheck === -1;\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\n            _framesToCheck : _frames.length;\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n        var doNotCheckNext = false;\n\n        asyncLoop({\n            length: endCheckFrame,\n            functionToLoop: function(loop, f) {\n                var matchPixCount, endPixCheck, maxPixCount;\n\n                var finishImage = function() {\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\n                    } else {\n                        // console.log('frame is passed : ' + f);\n                        if (checkUntilNotBlack) {\n                            doNotCheckNext = true;\n                        }\n                        resultFrames.push(_frames[f]);\n                    }\n                    loop();\n                };\n\n                if (!doNotCheckNext) {\n                    var image = new Image();\n                    image.onload = function() {\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n                        matchPixCount = 0;\n                        endPixCheck = imageData.data.length;\n                        maxPixCount = imageData.data.length / 4;\n\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\n                            var currentColor = {\n                                r: imageData.data[pix],\n                                g: imageData.data[pix + 1],\n                                b: imageData.data[pix + 2]\n                            };\n                            var colorDifference = Math.sqrt(\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\n                                Math.pow(currentColor.b - sampleColor.b, 2)\n                            );\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\n                                matchPixCount++;\n                            }\n                        }\n                        finishImage();\n                    };\n                    image.src = _frames[f].image;\n                } else {\n                    finishImage();\n                }\n            },\n            callback: function() {\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n\n                if (resultFrames.length <= 0) {\n                    // at least one last frame should be available for next manipulation\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\n                    resultFrames.push(_frames[_frames.length - 1]);\n                }\n                callback(resultFrames);\n            }\n        });\n    }\n\n    var isStopDrawing = false;\n\n    /**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        isStopDrawing = true;\n\n        var _this = this;\n        // analyse of all frames takes some time!\n        setTimeout(function() {\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\n                whammy.frames = frames;\n\n                // to display advertisement images!\n                if (config.advertisement && config.advertisement.length) {\n                    whammy.frames = config.advertisement.concat(whammy.frames);\n                }\n\n                /**\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\n                 * @memberof WhammyRecorder\n                 * @example\n                 * recorder.stop(function() {\n                 *     var blob = recorder.blob;\n                 * });\n                 */\n                whammy.compile(function(blob) {\n                    _this.blob = blob;\n\n                    if (_this.blob.forEach) {\n                        _this.blob = new Blob([], {\n                            type: 'video/webm'\n                        });\n                    }\n\n                    if (callback) {\n                        callback(_this.blob);\n                    }\n                });\n            });\n        }, 10);\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n\n        if (isStopDrawing) {\n            this.record();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (!isStopDrawing) {\n            this.stop(clearRecordedDataCB);\n        }\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        whammy.frames = [];\n        isStopDrawing = true;\n        isPausedRecording = false;\n    }\n\n    // for debugging\n    this.name = 'WhammyRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video;\n    var lastTime;\n    var whammy;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.WhammyRecorder = WhammyRecorder;\n}\n\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n\n/**\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n * @summary A real time javascript webm encoder based on a canvas hack.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef Whammy\n * @class\n * @example\n * var recorder = new Whammy().Video(15);\n * recorder.add(context || canvas || dataURL);\n * var output = recorder.compile();\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\nvar Whammy = (function() {\n    // a more abstract-ish API\n\n    function WhammyVideo(duration) {\n        this.frames = [];\n        this.duration = duration || 1;\n        this.quality = 0.8;\n    }\n\n    /**\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.add(canvas || context || 'image/webp');\n     * @param {string} frame - Canvas || Context || image/webp\n     * @param {number} duration - Stick a duration (in milliseconds)\n     */\n    WhammyVideo.prototype.add = function(frame, duration) {\n        if ('canvas' in frame) { //CanvasRenderingContext2D\n            frame = frame.canvas;\n        }\n\n        if ('toDataURL' in frame) {\n            frame = frame.toDataURL('image/webp', this.quality);\n        }\n\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\n        }\n        this.frames.push({\n            image: frame,\n            duration: duration || this.duration\n        });\n    };\n\n    function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(blob);\n        URL.revokeObjectURL(blob);\n        return worker;\n    }\n\n    function whammyInWebWorker(frames) {\n        function ArrayToWebM(frames) {\n            var info = checkFrames(frames);\n            if (!info) {\n                return [];\n            }\n\n            var clusterMaxDuration = 30000;\n\n            var EBML = [{\n                'id': 0x1a45dfa3, // EBML\n                'data': [{\n                    'data': 1,\n                    'id': 0x4286 // EBMLVersion\n                }, {\n                    'data': 1,\n                    'id': 0x42f7 // EBMLReadVersion\n                }, {\n                    'data': 4,\n                    'id': 0x42f2 // EBMLMaxIDLength\n                }, {\n                    'data': 8,\n                    'id': 0x42f3 // EBMLMaxSizeLength\n                }, {\n                    'data': 'webm',\n                    'id': 0x4282 // DocType\n                }, {\n                    'data': 2,\n                    'id': 0x4287 // DocTypeVersion\n                }, {\n                    'data': 2,\n                    'id': 0x4285 // DocTypeReadVersion\n                }]\n            }, {\n                'id': 0x18538067, // Segment\n                'data': [{\n                    'id': 0x1549a966, // Info\n                    'data': [{\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\n                        'id': 0x2ad7b1 // TimecodeScale\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x4d80 // MuxingApp\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x5741 // WritingApp\n                    }, {\n                        'data': doubleToString(info.duration),\n                        'id': 0x4489 // Duration\n                    }]\n                }, {\n                    'id': 0x1654ae6b, // Tracks\n                    'data': [{\n                        'id': 0xae, // TrackEntry\n                        'data': [{\n                            'data': 1,\n                            'id': 0xd7 // TrackNumber\n                        }, {\n                            'data': 1,\n                            'id': 0x73c5 // TrackUID\n                        }, {\n                            'data': 0,\n                            'id': 0x9c // FlagLacing\n                        }, {\n                            'data': 'und',\n                            'id': 0x22b59c // Language\n                        }, {\n                            'data': 'V_VP8',\n                            'id': 0x86 // CodecID\n                        }, {\n                            'data': 'VP8',\n                            'id': 0x258688 // CodecName\n                        }, {\n                            'data': 1,\n                            'id': 0x83 // TrackType\n                        }, {\n                            'id': 0xe0, // Video\n                            'data': [{\n                                'data': info.width,\n                                'id': 0xb0 // PixelWidth\n                            }, {\n                                'data': info.height,\n                                'id': 0xba // PixelHeight\n                            }]\n                        }]\n                    }]\n                }]\n            }];\n\n            //Generate clusters (max duration)\n            var frameNumber = 0;\n            var clusterTimecode = 0;\n            while (frameNumber < frames.length) {\n\n                var clusterFrames = [];\n                var clusterDuration = 0;\n                do {\n                    clusterFrames.push(frames[frameNumber]);\n                    clusterDuration += frames[frameNumber].duration;\n                    frameNumber++;\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\n\n                var clusterCounter = 0;\n                var cluster = {\n                    'id': 0x1f43b675, // Cluster\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n                }; //Add cluster to segment\n                EBML[1].data.push(cluster);\n                clusterTimecode += clusterDuration;\n            }\n\n            return generateEBML(EBML);\n        }\n\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n            return [{\n                'data': clusterTimecode,\n                'id': 0xe7 // Timecode\n            }].concat(clusterFrames.map(function(webp) {\n                var block = makeSimpleBlock({\n                    discardable: 0,\n                    frame: webp.data.slice(4),\n                    invisible: 0,\n                    keyframe: 1,\n                    lacing: 0,\n                    trackNum: 1,\n                    timecode: Math.round(clusterCounter)\n                });\n                clusterCounter += webp.duration;\n                return {\n                    data: block,\n                    id: 0xa3\n                };\n            }));\n        }\n\n        // sums the lengths of all the frames and gets the duration\n\n        function checkFrames(frames) {\n            if (!frames[0]) {\n                postMessage({\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\n                });\n                return;\n            }\n\n            var width = frames[0].width,\n                height = frames[0].height,\n                duration = frames[0].duration;\n\n            for (var i = 1; i < frames.length; i++) {\n                duration += frames[i].duration;\n            }\n            return {\n                duration: duration,\n                width: width,\n                height: height\n            };\n        }\n\n        function numToBuffer(num) {\n            var parts = [];\n            while (num > 0) {\n                parts.push(num & 0xff);\n                num = num >> 8;\n            }\n            return new Uint8Array(parts.reverse());\n        }\n\n        function strToBuffer(str) {\n            return new Uint8Array(str.split('').map(function(e) {\n                return e.charCodeAt(0);\n            }));\n        }\n\n        function bitsToBuffer(bits) {\n            var data = [];\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data.push(parseInt(bits.substr(i, 8), 2));\n            }\n            return new Uint8Array(data);\n        }\n\n        function generateEBML(json) {\n            var ebml = [];\n            for (var i = 0; i < json.length; i++) {\n                var data = json[i].data;\n\n                if (typeof data === 'object') {\n                    data = generateEBML(data);\n                }\n\n                if (typeof data === 'number') {\n                    data = bitsToBuffer(data.toString(2));\n                }\n\n                if (typeof data === 'string') {\n                    data = strToBuffer(data);\n                }\n\n                var len = data.size || data.byteLength || data.length;\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n                var sizeToString = len.toString(2);\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\n\n                ebml.push(numToBuffer(json[i].id));\n                ebml.push(bitsToBuffer(size));\n                ebml.push(data);\n            }\n\n            return new Blob(ebml, {\n                type: 'video/webm'\n            });\n        }\n\n        function toBinStrOld(bits) {\n            var data = '';\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\n            }\n            return data;\n        }\n\n        function makeSimpleBlock(data) {\n            var flags = 0;\n\n            if (data.keyframe) {\n                flags |= 128;\n            }\n\n            if (data.invisible) {\n                flags |= 8;\n            }\n\n            if (data.lacing) {\n                flags |= (data.lacing << 1);\n            }\n\n            if (data.discardable) {\n                flags |= 1;\n            }\n\n            if (data.trackNum > 127) {\n                throw 'TrackNumber > 127 not supported';\n            }\n\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\n                return String.fromCharCode(e);\n            }).join('') + data.frame;\n\n            return out;\n        }\n\n        function parseWebP(riff) {\n            var VP8 = riff.RIFF[0].WEBP[0];\n\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\n            for (var i = 0, c = []; i < 4; i++) {\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\n            }\n\n            var width, height, tmp;\n\n            //the code below is literally copied verbatim from the bitstream spec\n            tmp = (c[1] << 8) | c[0];\n            width = tmp & 0x3FFF;\n            tmp = (c[3] << 8) | c[2];\n            height = tmp & 0x3FFF;\n            return {\n                width: width,\n                height: height,\n                data: VP8,\n                riff: riff\n            };\n        }\n\n        function getStrLength(string, offset) {\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\n                var unpadded = i.charCodeAt(0).toString(2);\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\n            }).join(''), 2);\n        }\n\n        function parseRIFF(string) {\n            var offset = 0;\n            var chunks = {};\n\n            while (offset < string.length) {\n                var id = string.substr(offset, 4);\n                var len = getStrLength(string, offset);\n                var data = string.substr(offset + 4 + 4, len);\n                offset += 4 + 4 + len;\n                chunks[id] = chunks[id] || [];\n\n                if (id === 'RIFF' || id === 'LIST') {\n                    chunks[id].push(parseRIFF(data));\n                } else {\n                    chunks[id].push(data);\n                }\n            }\n            return chunks;\n        }\n\n        function doubleToString(num) {\n            return [].slice.call(\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\n                return String.fromCharCode(e);\n            }).reverse().join('');\n        }\n\n        var webm = new ArrayToWebM(frames.map(function(frame) {\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n            webp.duration = frame.duration;\n            return webp;\n        }));\n\n        postMessage(webm);\n    }\n\n    /**\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.compile(function(blob) {\n     *    // blob.size - blob.type\n     * });\n     */\n    WhammyVideo.prototype.compile = function(callback) {\n        var webWorker = processInWebWorker(whammyInWebWorker);\n\n        webWorker.onmessage = function(event) {\n            if (event.data.error) {\n                console.error(event.data.error);\n                return;\n            }\n            callback(event.data);\n        };\n\n        webWorker.postMessage(this.frames);\n    };\n\n    return {\n        /**\n         * A more abstract-ish API.\n         * @method\n         * @memberof Whammy\n         * @example\n         * recorder = new Whammy().Video(0.8, 100);\n         * @param {?number} speed - 0.8\n         * @param {?number} quality - 100\n         */\n        Video: WhammyVideo\n    };\n})();\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.Whammy = Whammy;\n}\n\n// ______________ (indexed-db)\n// DiskStorage.js\n\n/**\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\n * @summary Writing blobs into IndexedDB.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @example\n * DiskStorage.Store({\n *     audioBlob: yourAudioBlob,\n *     videoBlob: yourVideoBlob,\n *     gifBlob  : yourGifBlob\n * });\n * DiskStorage.Fetch(function(dataURL, type) {\n *     if(type === 'audioBlob') { }\n *     if(type === 'videoBlob') { }\n *     if(type === 'gifBlob')   { }\n * });\n * // DiskStorage.dataStoreName = 'recordRTC';\n * // DiskStorage.onError = function(error) { };\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\n * @property {function} Store - This method stores blobs in IndexedDB.\n * @property {function} onError - This function is invoked for any known/unknown error.\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\n\nvar DiskStorage = {\n    /**\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.init();\n     */\n    init: function() {\n        var self = this;\n\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\n            console.error('IndexedDB API are not available in this browser.');\n            return;\n        }\n\n        var dbVersion = 1;\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\n            db;\n        var request = indexedDB.open(dbName, dbVersion);\n\n        function createObjectStore(dataBase) {\n            dataBase.createObjectStore(self.dataStoreName);\n        }\n\n        function putInDB() {\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\n\n            if (self.videoBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\n            }\n\n            if (self.gifBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\n            }\n\n            if (self.audioBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\n            }\n\n            function getFromStore(portionName) {\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\n                    if (self.callback) {\n                        self.callback(event.target.result, portionName);\n                    }\n                };\n            }\n\n            getFromStore('audioBlob');\n            getFromStore('videoBlob');\n            getFromStore('gifBlob');\n        }\n\n        request.onerror = self.onError;\n\n        request.onsuccess = function() {\n            db = request.result;\n            db.onerror = self.onError;\n\n            if (db.setVersion) {\n                if (db.version !== dbVersion) {\n                    var setVersion = db.setVersion(dbVersion);\n                    setVersion.onsuccess = function() {\n                        createObjectStore(db);\n                        putInDB();\n                    };\n                } else {\n                    putInDB();\n                }\n            } else {\n                putInDB();\n            }\n        };\n        request.onupgradeneeded = function(event) {\n            createObjectStore(event.target.result);\n        };\n    },\n    /**\n     * This method fetches stored blobs from IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Fetch(function(dataURL, type) {\n     *     if(type === 'audioBlob') { }\n     *     if(type === 'videoBlob') { }\n     *     if(type === 'gifBlob')   { }\n     * });\n     */\n    Fetch: function(callback) {\n        this.callback = callback;\n        this.init();\n\n        return this;\n    },\n    /**\n     * This method stores blobs in IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Store({\n     *     audioBlob: yourAudioBlob,\n     *     videoBlob: yourVideoBlob,\n     *     gifBlob  : yourGifBlob\n     * });\n     */\n    Store: function(config) {\n        this.audioBlob = config.audioBlob;\n        this.videoBlob = config.videoBlob;\n        this.gifBlob = config.gifBlob;\n\n        this.init();\n\n        return this;\n    },\n    /**\n     * This function is invoked for any known/unknown error.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.onError = function(error){\n     *     alerot( JSON.stringify(error) );\n     * };\n     */\n    onError: function(error) {\n        console.error(JSON.stringify(error, null, '\\t'));\n    },\n\n    /**\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.dataStoreName = 'recordRTC';\n     */\n    dataStoreName: 'recordRTC',\n    dbName: null\n};\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.DiskStorage = DiskStorage;\n}\n\n// ______________\n// GifRecorder.js\n\n/**\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef GifRecorder\n * @class\n * @example\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     img.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\n */\n\nfunction GifRecorder(mediaStream, config) {\n    if (typeof GIFEncoder === 'undefined') {\n        var script = document.createElement('script');\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\n        (document.body || document.documentElement).appendChild(script);\n    }\n\n    config = config || {};\n\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (typeof GIFEncoder === 'undefined') {\n            setTimeout(self.record, 1000);\n            return;\n        }\n\n        if (!isLoadedMetaData) {\n            setTimeout(self.record, 1000);\n            return;\n        }\n\n        if (!isHTMLObject) {\n            if (!config.width) {\n                config.width = video.offsetWidth || 320;\n            }\n\n            if (!config.height) {\n                config.height = video.offsetHeight || 240;\n            }\n\n            if (!config.video) {\n                config.video = {\n                    width: config.width,\n                    height: config.height\n                };\n            }\n\n            if (!config.canvas) {\n                config.canvas = {\n                    width: config.width,\n                    height: config.height\n                };\n            }\n\n            canvas.width = config.canvas.width || 320;\n            canvas.height = config.canvas.height || 240;\n\n            video.width = config.video.width || 320;\n            video.height = config.video.height || 240;\n        }\n\n        // external library to record as GIF images\n        gifEncoder = new GIFEncoder();\n\n        // void setRepeat(int iter) \n        // Sets the number of times the set of GIF frames should be played. \n        // Default is 1; 0 means play indefinitely.\n        gifEncoder.setRepeat(0);\n\n        // void setFrameRate(Number fps) \n        // Sets frame rate in frames per second. \n        // Equivalent to setDelay(1000/fps).\n        // Using \"setDelay\" instead of \"setFrameRate\"\n        gifEncoder.setDelay(config.frameRate || 200);\n\n        // void setQuality(int quality) \n        // Sets quality of color quantization (conversion of images to the \n        // maximum 256 colors allowed by the GIF specification). \n        // Lower values (minimum = 1) produce better colors, \n        // but slow processing significantly. 10 is the default, \n        // and produces good color mapping at reasonable speeds. \n        // Values greater than 20 do not yield significant improvements in speed.\n        gifEncoder.setQuality(config.quality || 10);\n\n        // Boolean start() \n        // This writes the GIF Header and returns false if it fails.\n        gifEncoder.start();\n\n        if (typeof config.onGifRecordingStarted === 'function') {\n            config.onGifRecordingStarted();\n        }\n\n        startTime = Date.now();\n\n        function drawVideoFrame(time) {\n            if (self.clearedRecordedData === true) {\n                return;\n            }\n\n            if (isPausedRecording) {\n                return setTimeout(function() {\n                    drawVideoFrame(time);\n                }, 100);\n            }\n\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n            if (typeof lastFrameTime === undefined) {\n                lastFrameTime = time;\n            }\n\n            // ~10 fps\n            if (time - lastFrameTime < 90) {\n                return;\n            }\n\n            if (!isHTMLObject && video.paused) {\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n                // Tweak for Android Chrome\n                video.play();\n            }\n\n            if (!isHTMLObject) {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            }\n\n            if (config.onGifPreview) {\n                config.onGifPreview(canvas.toDataURL('image/png'));\n            }\n\n            gifEncoder.addFrame(context);\n            lastFrameTime = time;\n        }\n\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     img.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        if (lastAnimationFrame) {\n            cancelAnimationFrame(lastAnimationFrame);\n        }\n\n        endTime = Date.now();\n\n        /**\n         * @property {Blob} blob - The recorded blob object.\n         * @memberof GifRecorder\n         * @example\n         * recorder.stop(function(){\n         *     var blob = recorder.blob;\n         * });\n         */\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n            type: 'image/gif'\n        });\n\n        callback(this.blob);\n\n        // bug: find a way to clear old recorded blobs\n        gifEncoder.stream().bin = [];\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        self.clearedRecordedData = true;\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        if (gifEncoder) {\n            gifEncoder.stream().bin = [];\n        }\n    }\n\n    // for debugging\n    this.name = 'GifRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    if (isHTMLObject) {\n        if (mediaStream instanceof CanvasRenderingContext2D) {\n            context = mediaStream;\n            canvas = context.canvas;\n        } else if (mediaStream instanceof HTMLCanvasElement) {\n            context = mediaStream.getContext('2d');\n            canvas = mediaStream;\n        }\n    }\n\n    var isLoadedMetaData = true;\n\n    if (!isHTMLObject) {\n        var video = document.createElement('video');\n        video.muted = true;\n        video.autoplay = true;\n        video.playsInline = true;\n\n        isLoadedMetaData = false;\n        video.onloadedmetadata = function() {\n            isLoadedMetaData = true;\n        };\n\n        setSrcObject(mediaStream, video);\n\n        video.play();\n    }\n\n    var lastAnimationFrame = null;\n    var startTime, endTime, lastFrameTime;\n\n    var gifEncoder;\n\n    var self = this;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.GifRecorder = GifRecorder;\n}\n\n// Last time updated: 2019-06-21 4:09:42 AM UTC\n\n// ________________________\n// MultiStreamsMixer v1.2.2\n\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\n\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n    (function(that) {\n        if (typeof RecordRTC !== 'undefined') {\n            return;\n        }\n\n        if (!that) {\n            return;\n        }\n\n        if (typeof window !== 'undefined') {\n            return;\n        }\n\n        if (typeof global === 'undefined') {\n            return;\n        }\n\n        global.navigator = {\n            userAgent: browserFakeUserAgent,\n            getUserMedia: function() {}\n        };\n\n        if (!global.console) {\n            global.console = {};\n        }\n\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\n            global.console.error = global.console.log = global.console.log || function() {\n                console.log(arguments);\n            };\n        }\n\n        if (typeof document === 'undefined') {\n            /*global document:true */\n            that.document = {\n                documentElement: {\n                    appendChild: function() {\n                        return '';\n                    }\n                }\n            };\n\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\n                var obj = {\n                    getContext: function() {\n                        return obj;\n                    },\n                    play: function() {},\n                    pause: function() {},\n                    drawImage: function() {},\n                    toDataURL: function() {\n                        return '';\n                    },\n                    style: {}\n                };\n                return obj;\n            };\n\n            that.HTMLVideoElement = function() {};\n        }\n\n        if (typeof location === 'undefined') {\n            /*global location:true */\n            that.location = {\n                protocol: 'file:',\n                href: '',\n                hash: ''\n            };\n        }\n\n        if (typeof screen === 'undefined') {\n            /*global screen:true */\n            that.screen = {\n                width: 0,\n                height: 0\n            };\n        }\n\n        if (typeof URL === 'undefined') {\n            /*global screen:true */\n            that.URL = {\n                createObjectURL: function() {\n                    return '';\n                },\n                revokeObjectURL: function() {\n                    return '';\n                }\n            };\n        }\n\n        /*global window:true */\n        that.window = global;\n    })(typeof global !== 'undefined' ? global : null);\n\n    // requires: chrome://flags/#enable-experimental-web-platform-features\n\n    elementClass = elementClass || 'multi-streams-mixer';\n\n    var videos = [];\n    var isStopDrawingFrames = false;\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.style.opacity = 0;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = -1;\n    canvas.style.top = '-1000em';\n    canvas.style.left = '-1000em';\n    canvas.className = elementClass;\n    (document.body || document.documentElement).appendChild(canvas);\n\n    this.disableLogs = false;\n    this.frameInterval = 10;\n\n    this.width = 360;\n    this.height = 240;\n\n    // use gain node to prevent echo\n    this.useGainNode = true;\n\n    var self = this;\n\n    // _____________________________\n    // Cross-Browser-Declarations.js\n\n    // WebAudio API representer\n    var AudioContext = window.AudioContext;\n\n    if (typeof AudioContext === 'undefined') {\n        if (typeof webkitAudioContext !== 'undefined') {\n            /*global AudioContext:true */\n            AudioContext = webkitAudioContext;\n        }\n\n        if (typeof mozAudioContext !== 'undefined') {\n            /*global AudioContext:true */\n            AudioContext = mozAudioContext;\n        }\n    }\n\n    /*jshint -W079 */\n    var URL = window.URL;\n\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n        /*global URL:true */\n        URL = webkitURL;\n    }\n\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\n        }\n\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\n            navigator.getUserMedia = navigator.mozGetUserMedia;\n        }\n    }\n\n    var MediaStream = window.MediaStream;\n\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n        MediaStream = webkitMediaStream;\n    }\n\n    /*global MediaStream:true */\n    if (typeof MediaStream !== 'undefined') {\n        // override \"stop\" method for all browsers\n        if (typeof MediaStream.prototype.stop === 'undefined') {\n            MediaStream.prototype.stop = function() {\n                this.getTracks().forEach(function(track) {\n                    track.stop();\n                });\n            };\n        }\n    }\n\n    var Storage = {};\n\n    if (typeof AudioContext !== 'undefined') {\n        Storage.AudioContext = AudioContext;\n    } else if (typeof webkitAudioContext !== 'undefined') {\n        Storage.AudioContext = webkitAudioContext;\n    }\n\n    function setSrcObject(stream, element) {\n        if ('srcObject' in element) {\n            element.srcObject = stream;\n        } else if ('mozSrcObject' in element) {\n            element.mozSrcObject = stream;\n        } else {\n            element.srcObject = stream;\n        }\n    }\n\n    this.startDrawingFrames = function() {\n        drawVideosToCanvas();\n    };\n\n    function drawVideosToCanvas() {\n        if (isStopDrawingFrames) {\n            return;\n        }\n\n        var videosLength = videos.length;\n\n        var fullcanvas = false;\n        var remaining = [];\n        videos.forEach(function(video) {\n            if (!video.stream) {\n                video.stream = {};\n            }\n\n            if (video.stream.fullcanvas) {\n                fullcanvas = video;\n            } else {\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\n                remaining.push(video);\n            }\n        });\n\n        if (fullcanvas) {\n            canvas.width = fullcanvas.stream.width;\n            canvas.height = fullcanvas.stream.height;\n        } else if (remaining.length) {\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\n\n            var height = 1;\n            if (videosLength === 3 || videosLength === 4) {\n                height = 2;\n            }\n            if (videosLength === 5 || videosLength === 6) {\n                height = 3;\n            }\n            if (videosLength === 7 || videosLength === 8) {\n                height = 4;\n            }\n            if (videosLength === 9 || videosLength === 10) {\n                height = 5;\n            }\n            canvas.height = remaining[0].height * height;\n        } else {\n            canvas.width = self.width || 360;\n            canvas.height = self.height || 240;\n        }\n\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\n            drawImage(fullcanvas);\n        }\n\n        remaining.forEach(function(video, idx) {\n            drawImage(video, idx);\n        });\n\n        setTimeout(drawVideosToCanvas, self.frameInterval);\n    }\n\n    function drawImage(video, idx) {\n        if (isStopDrawingFrames) {\n            return;\n        }\n\n        var x = 0;\n        var y = 0;\n        var width = video.width;\n        var height = video.height;\n\n        if (idx === 1) {\n            x = video.width;\n        }\n\n        if (idx === 2) {\n            y = video.height;\n        }\n\n        if (idx === 3) {\n            x = video.width;\n            y = video.height;\n        }\n\n        if (idx === 4) {\n            y = video.height * 2;\n        }\n\n        if (idx === 5) {\n            x = video.width;\n            y = video.height * 2;\n        }\n\n        if (idx === 6) {\n            y = video.height * 3;\n        }\n\n        if (idx === 7) {\n            x = video.width;\n            y = video.height * 3;\n        }\n\n        if (typeof video.stream.left !== 'undefined') {\n            x = video.stream.left;\n        }\n\n        if (typeof video.stream.top !== 'undefined') {\n            y = video.stream.top;\n        }\n\n        if (typeof video.stream.width !== 'undefined') {\n            width = video.stream.width;\n        }\n\n        if (typeof video.stream.height !== 'undefined') {\n            height = video.stream.height;\n        }\n\n        context.drawImage(video, x, y, width, height);\n\n        if (typeof video.stream.onRender === 'function') {\n            video.stream.onRender(context, x, y, width, height, idx);\n        }\n    }\n\n    function getMixedStream() {\n        isStopDrawingFrames = false;\n        var mixedVideoStream = getMixedVideoStream();\n\n        var mixedAudioStream = getMixedAudioStream();\n        if (mixedAudioStream) {\n            mixedAudioStream.getTracks().filter(function(t) {\n                return t.kind === 'audio';\n            }).forEach(function(track) {\n                mixedVideoStream.addTrack(track);\n            });\n        }\n\n        var fullcanvas;\n        arrayOfMediaStreams.forEach(function(stream) {\n            if (stream.fullcanvas) {\n                fullcanvas = true;\n            }\n        });\n\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\n\n        return mixedVideoStream;\n    }\n\n    function getMixedVideoStream() {\n        resetVideoStreams();\n\n        var capturedStream;\n\n        if ('captureStream' in canvas) {\n            capturedStream = canvas.captureStream();\n        } else if ('mozCaptureStream' in canvas) {\n            capturedStream = canvas.mozCaptureStream();\n        } else if (!self.disableLogs) {\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\n        }\n\n        var videoStream = new MediaStream();\n\n        capturedStream.getTracks().filter(function(t) {\n            return t.kind === 'video';\n        }).forEach(function(track) {\n            videoStream.addTrack(track);\n        });\n\n        canvas.stream = videoStream;\n\n        return videoStream;\n    }\n\n    function getMixedAudioStream() {\n        // via: @pehrsons\n        if (!Storage.AudioContextConstructor) {\n            Storage.AudioContextConstructor = new Storage.AudioContext();\n        }\n\n        self.audioContext = Storage.AudioContextConstructor;\n\n        self.audioSources = [];\n\n        if (self.useGainNode === true) {\n            self.gainNode = self.audioContext.createGain();\n            self.gainNode.connect(self.audioContext.destination);\n            self.gainNode.gain.value = 0; // don't hear self\n        }\n\n        var audioTracksLength = 0;\n        arrayOfMediaStreams.forEach(function(stream) {\n            if (!stream.getTracks().filter(function(t) {\n                    return t.kind === 'audio';\n                }).length) {\n                return;\n            }\n\n            audioTracksLength++;\n\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\n\n            if (self.useGainNode === true) {\n                audioSource.connect(self.gainNode);\n            }\n\n            self.audioSources.push(audioSource);\n        });\n\n        if (!audioTracksLength) {\n            // because \"self.audioContext\" is not initialized\n            // that's why we've to ignore rest of the code\n            return;\n        }\n\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\n        self.audioSources.forEach(function(audioSource) {\n            audioSource.connect(self.audioDestination);\n        });\n        return self.audioDestination.stream;\n    }\n\n    function getVideo(stream) {\n        var video = document.createElement('video');\n\n        setSrcObject(stream, video);\n\n        video.className = elementClass;\n\n        video.muted = true;\n        video.volume = 0;\n\n        video.width = stream.width || self.width || 360;\n        video.height = stream.height || self.height || 240;\n\n        video.play();\n\n        return video;\n    }\n\n    this.appendStreams = function(streams) {\n        if (!streams) {\n            throw 'First parameter is required.';\n        }\n\n        if (!(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        streams.forEach(function(stream) {\n            var newStream = new MediaStream();\n\n            if (stream.getTracks().filter(function(t) {\n                    return t.kind === 'video';\n                }).length) {\n                var video = getVideo(stream);\n                video.stream = stream;\n                videos.push(video);\n\n                newStream.addTrack(stream.getTracks().filter(function(t) {\n                    return t.kind === 'video';\n                })[0]);\n            }\n\n            if (stream.getTracks().filter(function(t) {\n                    return t.kind === 'audio';\n                }).length) {\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\n                audioSource.connect(self.audioDestination);\n\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\n                    return t.kind === 'audio';\n                })[0]);\n            }\n\n            arrayOfMediaStreams.push(newStream);\n        });\n    };\n\n    this.releaseStreams = function() {\n        videos = [];\n        isStopDrawingFrames = true;\n\n        if (self.gainNode) {\n            self.gainNode.disconnect();\n            self.gainNode = null;\n        }\n\n        if (self.audioSources.length) {\n            self.audioSources.forEach(function(source) {\n                source.disconnect();\n            });\n            self.audioSources = [];\n        }\n\n        if (self.audioDestination) {\n            self.audioDestination.disconnect();\n            self.audioDestination = null;\n        }\n\n        if (self.audioContext) {\n            self.audioContext.close();\n        }\n\n        self.audioContext = null;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (canvas.stream) {\n            canvas.stream.stop();\n            canvas.stream = null;\n        }\n    };\n\n    this.resetVideoStreams = function(streams) {\n        if (streams && !(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        resetVideoStreams(streams);\n    };\n\n    function resetVideoStreams(streams) {\n        videos = [];\n        streams = streams || arrayOfMediaStreams;\n\n        // via: @adrian-ber\n        streams.forEach(function(stream) {\n            if (!stream.getTracks().filter(function(t) {\n                    return t.kind === 'video';\n                }).length) {\n                return;\n            }\n\n            var video = getVideo(stream);\n            video.stream = stream;\n            videos.push(video);\n        });\n    }\n\n    // for debugging\n    this.name = 'MultiStreamsMixer';\n    this.toString = function() {\n        return this.name;\n    };\n\n    this.getMixedStream = getMixedStream;\n\n}\n\nif (typeof RecordRTC === 'undefined') {\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\n        module.exports = MultiStreamsMixer;\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('MultiStreamsMixer', [], function() {\n            return MultiStreamsMixer;\n        });\n    }\n}\n\n// ______________________\n// MultiStreamRecorder.js\n\n/*\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\n */\n\n/**\n * MultiStreamRecorder can record multiple videos in single container.\n * @summary Multi-videos recorder.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef MultiStreamRecorder\n * @class\n * @example\n * var options = {\n *     mimeType: 'video/webm'\n * }\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\n */\n\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\n    var self = this;\n\n    var mixer;\n    var mediaRecorder;\n\n    options = options || {\n        elementClass: 'multi-streams-mixer',\n        mimeType: 'video/webm',\n        video: {\n            width: 360,\n            height: 240\n        }\n    };\n\n    if (!options.frameInterval) {\n        options.frameInterval = 10;\n    }\n\n    if (!options.video) {\n        options.video = {};\n    }\n\n    if (!options.video.width) {\n        options.video.width = 360;\n    }\n\n    if (!options.video.height) {\n        options.video.height = 240;\n    }\n\n    /**\n     * This method records all MediaStreams.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        // github/muaz-khan/MultiStreamsMixer\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\n\n        if (getAllVideoTracks().length) {\n            mixer.frameInterval = options.frameInterval || 10;\n            mixer.width = options.video.width || 360;\n            mixer.height = options.video.height || 240;\n            mixer.startDrawingFrames();\n        }\n\n        if (options.previewStream && typeof options.previewStream === 'function') {\n            options.previewStream(mixer.getMixedStream());\n        }\n\n        // record using MediaRecorder API\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\n        mediaRecorder.record();\n    };\n\n    function getAllVideoTracks() {\n        var tracks = [];\n        arrayOfMediaStreams.forEach(function(stream) {\n            getTracks(stream, 'video').forEach(function(track) {\n                tracks.push(track);\n            });\n        });\n        return tracks;\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.stop(function(blob) {\n            self.blob = blob;\n\n            callback(blob);\n\n            self.clearRecordedData();\n        });\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (mediaRecorder) {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (mediaRecorder) {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n            mediaRecorder = null;\n        }\n\n        if (mixer) {\n            mixer.releaseStreams();\n            mixer = null;\n        }\n    };\n\n    /**\n     * Add extra media-streams to existing recordings.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\n     * @example\n     * recorder.addStreams([newAudioStream, newVideoStream]);\n     */\n    this.addStreams = function(streams) {\n        if (!streams) {\n            throw 'First parameter is required.';\n        }\n\n        if (!(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        arrayOfMediaStreams.concat(streams);\n\n        if (!mediaRecorder || !mixer) {\n            return;\n        }\n\n        mixer.appendStreams(streams);\n\n        if (options.previewStream && typeof options.previewStream === 'function') {\n            options.previewStream(mixer.getMixedStream());\n        }\n    };\n\n    /**\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\n     * @example\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\n     */\n    this.resetVideoStreams = function(streams) {\n        if (!mixer) {\n            return;\n        }\n\n        if (streams && !(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        mixer.resetVideoStreams(streams);\n    };\n\n    /**\n     * Returns MultiStreamsMixer\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * let mixer = recorder.getMixer();\n     * mixer.appendStreams([newStream]);\n     */\n    this.getMixer = function() {\n        return mixer;\n    };\n\n    // for debugging\n    this.name = 'MultiStreamRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\n}\n\n// _____________________\n// RecordRTC.promises.js\n\n/**\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\n * @summary Promises for {@link RecordRTC}\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCPromisesHandler\n * @class\n * @example\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\n * recorder.startRecording()\n *         .then(successCB)\n *         .catch(errorCB);\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \n * recorder.recordRTC.onStateChanged = function(state) {};\n * recorder.recordRTC.setRecordingDuration(5000);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\n * @requires {@link RecordRTC}\n */\n\nfunction RecordRTCPromisesHandler(mediaStream, options) {\n    if (!this) {\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\n    }\n\n    if (typeof mediaStream === 'undefined') {\n        throw 'First argument \"MediaStream\" is required.';\n    }\n\n    var self = this;\n\n    /**\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let internal = recorder.recordRTC.getInternalRecorder();\n     * alert(internal instanceof MediaStreamRecorder);\n     * recorder.recordRTC.onStateChanged = function(state) {};\n     */\n    self.recordRTC = new RecordRTC(mediaStream, options);\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.startRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */\n    this.startRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.startRecording();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method stops the recording.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     var blob = recorder.getBlob();\n     * }).catch(errorCB);\n     */\n    this.stopRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.stopRecording(function(url) {\n                    self.blob = self.recordRTC.getBlob();\n\n                    if (!self.blob || !self.blob.size) {\n                        reject('Empty blob.', self.blob);\n                        return;\n                    }\n\n                    resolve(url);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.pauseRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */\n    this.pauseRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.pauseRecording();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method resumes the recording.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.resumeRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */\n    this.resumeRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.resumeRecording();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method returns data-url for the recorded blob.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     recorder.getDataURL().then(function(dataURL) {\n     *         window.open(dataURL);\n     *     }).catch(errorCB);;\n     * }).catch(errorCB);\n     */\n    this.getDataURL = function(callback) {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.getDataURL(function(dataURL) {\n                    resolve(dataURL);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method returns the recorded blob.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     recorder.getBlob().then(function(blob) {})\n     * }).catch(errorCB);\n     */\n    this.getBlob = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.getBlob());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method returns the internal recording object.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let internalRecorder = await recorder.getInternalRecorder();\n     * if(internalRecorder instanceof MultiStreamRecorder) {\n     *     internalRecorder.addStreams([newAudioStream]);\n     *     internalRecorder.resetVideoStreams([screenStream]);\n     * }\n     * @returns {Object} \n     */\n    this.getInternalRecorder = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.getInternalRecorder());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * await recorder.reset();\n     * recorder.startRecording(); // record again\n     */\n    this.reset = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.reset());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * Destroy RecordRTC instance. Clear all recorders and objects.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.destroy().then(successCB).catch(errorCB);\n     */\n    this.destroy = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.destroy());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * Get recorder's readonly state.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let state = await recorder.getState();\n     * // or\n     * recorder.getState().then(state => { console.log(state); })\n     * @returns {String} Returns recording state.\n     */\n    this.getState = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.getState());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * await recorder.stopRecording();\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\n     * invokeSaveAsDialog(blob);\n     */\n    this.blob = null;\n\n    /**\n     * RecordRTC version number\n     * @property {String} version - Release version number.\n     * @memberof RecordRTCPromisesHandler\n     * @static\n     * @readonly\n     * @example\n     * alert(recorder.version);\n     */\n    this.version = '5.6.1';\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\n}\n\n// ______________________\n// WebAssemblyRecorder.js\n\n/**\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef WebAssemblyRecorder\n * @class\n * @example\n * var recorder = new WebAssemblyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\n */\nfunction WebAssemblyRecorder(stream, config) {\n    // based on: github.com/GoogleChromeLabs/webm-wasm\n\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\n        // because it fixes readable/writable streams issues\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\n    }\n\n    config = config || {};\n\n    config.width = config.width || 640;\n    config.height = config.height || 480;\n    config.frameRate = config.frameRate || 30;\n    config.bitrate = config.bitrate || 1200;\n    config.realtime = config.realtime || true;\n\n    function createBufferURL(buffer, type) {\n        return URL.createObjectURL(new Blob([buffer], {\n            type: type || ''\n        }));\n    }\n\n    var finished;\n\n    function cameraStream() {\n        return new ReadableStream({\n            start: function(controller) {\n                var cvs = document.createElement('canvas');\n                var video = document.createElement('video');\n                var first = true;\n                video.srcObject = stream;\n                video.muted = true;\n                video.height = config.height;\n                video.width = config.width;\n                video.volume = 0;\n                video.onplaying = function() {\n                    cvs.width = config.width;\n                    cvs.height = config.height;\n                    var ctx = cvs.getContext('2d');\n                    var frameTimeout = 1000 / config.frameRate;\n                    var cameraTimer = setInterval(function f() {\n                        if (finished) {\n                            clearInterval(cameraTimer);\n                            controller.close();\n                        }\n\n                        if (first) {\n                            first = false;\n                            if (config.onVideoProcessStarted) {\n                                config.onVideoProcessStarted();\n                            }\n                        }\n\n                        ctx.drawImage(video, 0, 0);\n                        if (controller._controlledReadableStream.state !== 'closed') {\n                            try {\n                                controller.enqueue(\n                                    ctx.getImageData(0, 0, config.width, config.height)\n                                );\n                            } catch (e) {}\n                        }\n                    }, frameTimeout);\n                };\n                video.play();\n            }\n        });\n    }\n\n    var worker;\n\n    function startRecording(stream, buffer) {\n        if (!config.workerPath && !buffer) {\n            finished = false;\n\n            // is it safe to use @latest ?\n\n            fetch(\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\n            ).then(function(r) {\n                r.arrayBuffer().then(function(buffer) {\n                    startRecording(stream, buffer);\n                });\n            });\n            return;\n        }\n\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\n            var blob = new Blob([buffer], {\n                type: 'text/javascript'\n            });\n            config.workerPath = URL.createObjectURL(blob);\n        }\n\n        if (!config.workerPath) {\n            console.error('workerPath parameter is missing.');\n        }\n\n        worker = new Worker(config.workerPath);\n\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\n        worker.addEventListener('message', function(event) {\n            if (event.data === 'READY') {\n                worker.postMessage({\n                    width: config.width,\n                    height: config.height,\n                    bitrate: config.bitrate || 1200,\n                    timebaseDen: config.frameRate || 30,\n                    realtime: config.realtime\n                });\n\n                cameraStream().pipeTo(new WritableStream({\n                    write: function(image) {\n                        if (finished) {\n                            console.error('Got image, but recorder is finished!');\n                            return;\n                        }\n\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\n                    }\n                }));\n            } else if (!!event.data) {\n                if (!isPaused) {\n                    arrayOfBuffers.push(event.data);\n                }\n            }\n        });\n    }\n\n    /**\n     * This method records video.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        arrayOfBuffers = [];\n        isPaused = false;\n        this.blob = null;\n        startRecording(stream);\n\n        if (typeof config.initCallback === 'function') {\n            config.initCallback();\n        }\n    };\n\n    var isPaused;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPaused = false;\n    };\n\n    function terminate(callback) {\n        if (!worker) {\n            if (callback) {\n                callback();\n            }\n\n            return;\n        }\n\n        // Wait for null event data to indicate that the encoding is complete\n        worker.addEventListener('message', function(event) {\n            if (event.data === null) {\n                worker.terminate();\n                worker = null;\n\n                if (callback) {\n                    callback();\n                }\n            }\n        });\n\n        worker.postMessage(null);\n    }\n\n    var arrayOfBuffers = [];\n\n    /**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        finished = true;\n\n        var recorder = this;\n\n        terminate(function() {\n            recorder.blob = new Blob(arrayOfBuffers, {\n                type: 'video/webm'\n            });\n\n            callback(recorder.blob);\n        });\n    };\n\n    // for debugging\n    this.name = 'WebAssemblyRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        arrayOfBuffers = [];\n        isPaused = false;\n        this.blob = null;\n\n        // todo: if recording-ON then STOP it first\n    };\n\n    /**\n     * @property {Blob} blob - The recorded blob object.\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.stop(function(){\n     *     var blob = recorder.blob;\n     * });\n     */\n    this.blob = null;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\n}\n\n\n\n\n\nAWS.config.region = 'us-east-1'; // 1. Enter your region\n\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-1:7ea26b5d-926b-44fd-8936-f8bec3c89452' // 2. Enter your identity pool\n});\n\nAWS.config.credentials.get(function(err) {\n    if (err) alert(err);\n    console.log(AWS.config.credentials);\n});\n\nvar bucketName = 'immortify-videos'; // Enter your bucket name+\n\nvar bucket = new AWS.S3({\n    params: {\n        Bucket: bucketName\n    }\n});\n\nvar fileChooser = document.getElementById('file-chooser');\nvar button = document.getElementById('upload-button');\nvar results = document.getElementById('results');\nvar percentage = document.getElementById('percentage');\nvar cancelUpload = document.getElementById('cancel-button');\n\nfunction dataURLtoFile(dataurl, filename) {\n\nvar arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\nbstr = atob(arr[2]), n = bstr.length, u8arr = new Uint8Array(n);\nwhile(n--){\n    u8arr[n] = bstr.charCodeAt(n);\n}\nreturn new File([u8arr], filename, {type:mime});\n}\n// Store a reference of the preview video element and a global reference to the recorder instance\nvar video = document.getElementById('my-preview');\nvar recorder;\n\n// When the user clicks on start video recording\ndocument.getElementById('btn-start-recording').addEventListener(\"click\", function(){\n// Disable start recording button\nthis.disabled = true;\n\nconst audioSource = audioInputSelect.value;\nconst videoSource = videoSelect.value;\nconst constraints = {\n  audio: {deviceId: audioSource ? {exact: audioSource} : undefined},\n  video: {deviceId: videoSource ? {exact: videoSource} : undefined}\n};\n\n// Request access to the media devices\nnavigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n// Display a live preview on the video element of the page\nsetSrcObject(stream, video);\n\n// Start to display the preview on the video element\n// and mute the video to disable the echo issue !\nvideo.play();\nvideo.muted = true;\n\n// Initialize the recorder\nrecorder = new RecordRTCPromisesHandler(stream, {\n    mimeType: 'video/webm',\n    bitsPerSecond: 1280000\n});\n\n// Start recording the video\nrecorder.startRecording().then(function() {\n    console.info('Recording video ...');\n}).catch(function(error) {\n    console.log(error);\n    console.error('Cannot start video recording: ', error);\n});\n\n// release stream on stopRecording\nrecorder.stream = stream;\n\n// Enable stop recording button\ndocument.getElementById('btn-stop-recording').disabled = false;\n}).catch(function(error) {\n       console.log(error);\nconsole.error(\"Cannot access media devices: \", error);\n});\n}, false);\n\n// When the user clicks on Stop video recording\ndocument.getElementById('btn-stop-recording').addEventListener(\"click\", function(){\nthis.disabled = true;\n\nrecorder.stopRecording().then(function() {\nconsole.info('stopRecording success');\n\nvar DataUrl = recorder.getDataURL();\nvar random = Math.random( ); \nDataUrl.then(function(result) {\n\nvar url_file = dataURLtoFile(result, random +'.webm');\n\nvar objKey = url_file.name;\nvar params = {\n    Key: objKey,\n    ContentType: url_file.type,\n    Body: url_file,\n    ACL: 'public-read'\n};\n\n// bucket.putObject(params, function(err, data) {\n//     if (err) {\n//         results.innerHTML = 'ERROR: ' + err;\n//     } else {\n//         listObjs();\n//     }\n// });\nvar request = bucket.putObject(params);\n\nrequest.on('httpUploadProgress', function (progress) {\n    percentage.innerHTML = parseInt((progress.loaded * 100) / progress.total)+'%'; \n    console.log(\"Uploaded :: \" + parseInt((progress.loaded * 100) / progress.total)+'%');\n   // console.log(progress.loaded + \" of \" + progress.total + \" bytes\");\n}).send(function(err, data){\n    percentage.innerHTML = \"File has been uploaded successfully.\";\n//                listObjs();\n});\n\n\n  cancelUpload.addEventListener('click', function() {\n        if(request.abort()){\n            percentage.innerHTML = \"Uploading has been canceled.\";\n        }\n    });\n\n\n\n// here you can use the result of promiseB\n});\n\n// Retrieve recorded video as blob and display in the preview element\n/*           var videoBlob = recorder.getBlob();\n\nvar blobUrl = URL.createObjectURL(videoBlob);\n\nconsole.log(\"Blob url\" + blobUrl);\n\nvideo.srcObject = videoBlob;\nvideo.src = URL.createObjectURL(videoBlob);\nvideo.play();\n\n// Unmute video on preview\nvideo.muted = false;\n\n// Stop the device streaming\nrecorder.stream.stop();\n*/\n// Enable record button again !\ndocument.getElementById('btn-start-recording').disabled = false;\n}).catch(function(error) {\nconsole.error('stopRecording failure', error);\n});\n}, false);\n         \nfunction listObjs() {\nvar prefix = '';\nbucket.listObjects({\nPrefix: prefix\n}, function(err, data) {\nif (err) {\n    results.innerHTML = 'ERROR: ' + err;\n} else {\n    var objKeys = \"\";\n    data.Contents.forEach(function(obj) {\n        objKeys += obj.Key + \"<br>\";\n    });\n    results.innerHTML = objKeys;\n}\n});\n}\n// Get the modal\nvar modal = document.getElementById(\"myModal\");\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}\nfunction myFunction() {\n    modal.style.display = \"block\";\n}\n  \n'use strict';\n\nconst videoElement = document.querySelector('video');\nconst audioInputSelect = document.querySelector('select#audioSource');\nconst audioOutputSelect = document.querySelector('select#audioOutput');\nconst videoSelect = document.querySelector('select#videoSource');\nconst selectors = [audioInputSelect, audioOutputSelect, videoSelect];\n\naudioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\n\nfunction gotDevices(deviceInfos) {\n  // Handles being called several times to update labels. Preserve values.\n  const values = selectors.map(select => select.value);\n  selectors.forEach(select => {\n    while (select.firstChild) {\n      select.removeChild(select.firstChild);\n    }\n  });\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    const option = document.createElement('option');\n    option.value = deviceInfo.deviceId;\n    if (deviceInfo.kind === 'audioinput') {\n      option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\n      audioInputSelect.appendChild(option);\n    } else if (deviceInfo.kind === 'audiooutput') {\n      option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\n      audioOutputSelect.appendChild(option);\n    } else if (deviceInfo.kind === 'videoinput') {\n      option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n      videoSelect.appendChild(option);\n    } else {\n      console.log('Some other kind of source/device: ', deviceInfo);\n    }\n  }\n  selectors.forEach((select, selectorIndex) => {\n    if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n      select.value = values[selectorIndex];\n    }\n  });\n}\n\nnavigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\n\n// Attach audio output device to video element using device/sink ID.\nfunction attachSinkId(element, sinkId) {\n  if (typeof element.sinkId !== 'undefined') {\n    element.setSinkId(sinkId)\n        .then(() => {\n          console.log(`Success, audio output device attached: ${sinkId}`);\n        })\n        .catch(error => {\n          let errorMessage = error;\n          if (error.name === 'SecurityError') {\n            errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n          }\n          console.error(errorMessage);\n          // Jump back to first output device in the list as it's the default.\n          audioOutputSelect.selectedIndex = 0;\n        });\n  } else {\n    console.warn('Browser does not support output device selection.');\n  }\n}\n\nfunction handleError(error) {\n    console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n  }\n/*  \n  // Request access to the media devices\n  navigator.mediaDevices.getUserMedia({\n    audio: true, \n    video: true\n    }).then(function(stream) {\n    // Display a live preview on the video element of the page\n    setSrcObject(stream, video);\n    \n    // Start to display the preview on the video element\n    // and mute the video to disable the echo issue !\n    video.play();\n    video.muted = true;\n    })\n */ \n\nfunction start() {\n  if (window.stream) {\n    window.stream.getTracks().forEach(track => {\n      track.stop();\n    });\n  }\n  const audioSource = audioInputSelect.value;\n  const videoSource = videoSelect.value;\n  const constraints = {\n    audio: {deviceId: audioSource ? {exact: audioSource} : undefined},\n    video: {deviceId: videoSource ? {exact: videoSource} : undefined}\n  };\n  navigator.mediaDevices.getUserMedia(constraints).then(function(stream){\n\n    setSrcObject(stream, video);\n    \n    // Start to display the preview on the video element\n    // and mute the video to disable the echo issue !\n    video.play();   \n  });\n}\n\naudioInputSelect.onchange = start;\nvideoSelect.onchange = start;\nstart();\n\n\n\n\nexport default function Record() {\nreturn (\n  <div className=\"Notes\">\n  <PageHeader>Record</PageHeader>\n  <button id=\"btn-start-recording\">\n      Start Recording\n  </button>\n  <button disabled=\"disabled\" id=\"btn-stop-recording\">\n      Stop Recording\n  </button>\n  <button id=\"cancel-button\">\n      Cancel Upload\n  </button>\n  <hr/>\n  <video autoplay=\"\" controls=\"\" id=\"my-preview\">\n  </video>\n  <p id=\"percentage\">\n  </p>\n</div>\n);\n}"]},"metadata":{},"sourceType":"module"}