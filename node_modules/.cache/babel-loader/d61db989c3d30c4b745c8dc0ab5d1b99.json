{"ast":null,"code":"import _regeneratorRuntime from\"/Users/randyadams/IMMORTIFYV2/immortify-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/randyadams/IMMORTIFYV2/immortify-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/randyadams/IMMORTIFYV2/immortify-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";//import { useHistory } from \"react-router-dom\";\nimport{Button}from\"react-bootstrap\";import VideoRecorder from'react-video-recorder';import{API}from\"aws-amplify\";import{s3UploadBlob}from\"../libs/awsLib\";import{onError}from\"../libs/errorLib\";import\"./Record.css\";export default function Record(props){//   const history = useHistory();\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,1),content=_useState2[0];var disabled=true;function createNote(note){return API.post(\"notes\",\"/notes\",{body:note});}function uploadVideo(_x){return _uploadVideo.apply(this,arguments);}function _uploadVideo(){_uploadVideo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(videoBlob){var attachment;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return s3UploadBlob(\"video.mp4\",videoBlob);case 3:attachment=_context.sent;_context.next=6;return createNote({content:content,attachment:attachment});case 6:_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);onError(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return _uploadVideo.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{className:\"Record\"},/*#__PURE__*/React.createElement(Button,{disabled:disabled},\"SAVE RECORDING\"),/*#__PURE__*/React.createElement(VideoRecorder,{isOnInitially:true,showReplayControls:true,replayVideoAutoplayAndLoopOff:true,onRecordingComplete:function onRecordingComplete(videoBlob){uploadVideo(videoBlob);console.log(\"recording complete\");}}));}","map":{"version":3,"sources":["/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/containers/Record.js"],"names":["React","useState","Button","VideoRecorder","API","s3UploadBlob","onError","Record","props","content","disabled","createNote","note","post","body","uploadVideo","videoBlob","attachment","console","log"],"mappings":"wfAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA;AACA,OAASC,MAAT,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,CACA,OAASC,GAAT,KAAoB,aAApB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAO,cAAP,CAGA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACrC;AADqC,cAEhBP,QAAQ,CAAC,EAAD,CAFQ,wCAE3BQ,OAF2B,eAGlC,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CAEA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CACtB,MAAOR,CAAAA,GAAG,CAACS,IAAJ,CAAS,OAAT,CAAkB,QAAlB,CAA4B,CACjCC,IAAI,CAAEF,IAD2B,CAA5B,CAAP,CAGD,CAT+B,QAWnBG,CAAAA,WAXmB,6IAWlC,iBAA2BC,SAA3B,uKAEiCX,CAAAA,YAAY,CAAC,WAAD,CAAaW,SAAb,CAF7C,QAEcC,UAFd,qCAGcN,CAAAA,UAAU,CAAC,CAAEF,OAAO,CAAPA,OAAF,CAAWQ,UAAU,CAAVA,UAAX,CAAD,CAHxB,uFAMQX,OAAO,aAAP,CANR,oEAXkC,8CAsBlC,mBACI,2BAAK,SAAS,CAAC,QAAf,eACA,oBAAC,MAAD,EACI,QAAQ,CAAEI,QADd,mBADA,cAIA,oBAAC,aAAD,EACI,aAAa,KADjB,CAEI,kBAAkB,KAFtB,CAGI,6BAA6B,KAHjC,CAII,mBAAmB,CAAE,6BAACM,SAAD,CAAe,CAChCD,WAAW,CAACC,SAAD,CAAX,CACAE,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACH,CAPL,EAJA,CADJ,CAiBH","sourcesContent":["import React, { useState } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Button         } from \"react-bootstrap\";\nimport VideoRecorder from 'react-video-recorder'\nimport { API } from \"aws-amplify\";\nimport { s3UploadBlob } from \"../libs/awsLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Record.css\";\n\n\nexport default function Record(props) {\n //   const history = useHistory();\n    const [content] = useState(\"\");\n    var disabled = true;\n\n    function createNote(note) {\n        return API.post(\"notes\", \"/notes\", {\n          body: note\n        });\n      }\n\n    async function uploadVideo(videoBlob) {\n        try {\n            const attachment = await s3UploadBlob(\"video.mp4\",videoBlob);\n            await createNote({ content, attachment });\n//            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n        }\n\n    }\n        \n    return (\n        <div className=\"Record\">\n        <Button\n            disabled={disabled}\n            >SAVE RECORDING</Button>\n        <VideoRecorder \n            isOnInitially\n            showReplayControls\n            replayVideoAutoplayAndLoopOff\n            onRecordingComplete={(videoBlob) => {\n                uploadVideo(videoBlob);\n                console.log(\"recording complete\");\n            }        \n            }\n        />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}