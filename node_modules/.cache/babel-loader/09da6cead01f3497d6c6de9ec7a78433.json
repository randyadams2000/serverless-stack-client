{"ast":null,"code":"// https://github.com/themasch/node-ebml/blob/master/lib/ebml/tools.js\nmodule.exports=function(buffer,start,signed){start=start||0;for(var length=1;length<=8;length++){if(buffer[start]>=Math.pow(2,8-length)){break;}}if(length>8){throw new Error('Unrepresentable length: '+length+' '+buffer.toString('hex',start,start+length));}if(start+length>buffer.length){return null;}var i;var value=buffer[start]&(1<<8-length)-1;for(i=1;i<length;i++){if(i===7){if(value>=Math.pow(2,53-8)&&buffer[start+7]>0){return{length:length,value:-1};}}value*=Math.pow(2,8);value+=buffer[start+i];}if(signed){value-=Math.pow(2,length*7-1)-1;}return{length:length,value:value};};","map":{"version":3,"sources":["/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/react-video-recorder-master/node_modules/ebml-block/lib/vint.js"],"names":["module","exports","buffer","start","signed","length","Math","pow","Error","toString","i","value"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAP,CAAiB,SAAUC,MAAV,CAAkBC,KAAlB,CAAyBC,MAAzB,CAAiC,CAChDD,KAAK,CAAGA,KAAK,EAAI,CAAjB,CACA,IAAK,GAAIE,CAAAA,MAAM,CAAG,CAAlB,CAAqBA,MAAM,EAAI,CAA/B,CAAkCA,MAAM,EAAxC,CAA4C,CAC1C,GAAIH,MAAM,CAACC,KAAD,CAAN,EAAiBG,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,EAAIF,MAAhB,CAArB,CAA8C,CAC5C,MACD,CACF,CACD,GAAIA,MAAM,CAAG,CAAb,CAAgB,CACd,KAAM,IAAIG,CAAAA,KAAJ,CAAU,2BAA6BH,MAA7B,CAAsC,GAAtC,CACdH,MAAM,CAACO,QAAP,CAAgB,KAAhB,CAAuBN,KAAvB,CAA8BA,KAAK,CAAGE,MAAtC,CADI,CAAN,CAED,CACD,GAAIF,KAAK,CAAGE,MAAR,CAAiBH,MAAM,CAACG,MAA5B,CAAoC,CAClC,MAAO,KAAP,CACD,CACD,GAAIK,CAAAA,CAAJ,CACA,GAAIC,CAAAA,KAAK,CAAGT,MAAM,CAACC,KAAD,CAAN,CAAgB,CAAC,GAAM,EAAIE,MAAX,EAAsB,CAAlD,CACA,IAAKK,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGL,MAAhB,CAAwBK,CAAC,EAAzB,CAA6B,CAC3B,GAAIA,CAAC,GAAK,CAAV,CAAa,CACX,GAAIC,KAAK,EAAIL,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,GAAK,CAAjB,CAAT,EAAgCL,MAAM,CAACC,KAAK,CAAG,CAAT,CAAN,CAAoB,CAAxD,CAA2D,CACzD,MAAO,CACLE,MAAM,CAAEA,MADH,CAELM,KAAK,CAAE,CAAC,CAFH,CAAP,CAID,CACF,CACDA,KAAK,EAAIL,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,CAAZ,CAAT,CACAI,KAAK,EAAIT,MAAM,CAACC,KAAK,CAAGO,CAAT,CAAf,CACD,CACD,GAAIN,MAAJ,CAAY,CACVO,KAAK,EAAIL,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYF,MAAM,CAAG,CAAT,CAAa,CAAzB,EAA8B,CAAvC,CACD,CACD,MAAO,CACLA,MAAM,CAAEA,MADH,CAELM,KAAK,CAAEA,KAFF,CAAP,CAID,CAnCD","sourcesContent":["// https://github.com/themasch/node-ebml/blob/master/lib/ebml/tools.js\nmodule.exports = function (buffer, start, signed) {\n  start = start || 0\n  for (var length = 1; length <= 8; length++) {\n    if (buffer[start] >= Math.pow(2, 8 - length)) {\n      break\n    }\n  }\n  if (length > 8) {\n    throw new Error('Unrepresentable length: ' + length + ' ' +\n      buffer.toString('hex', start, start + length))\n  }\n  if (start + length > buffer.length) {\n    return null\n  }\n  var i\n  var value = buffer[start] & (1 << (8 - length)) - 1\n  for (i = 1; i < length; i++) {\n    if (i === 7) {\n      if (value >= Math.pow(2, 53 - 8) && buffer[start + 7] > 0) {\n        return {\n          length: length,\n          value: -1\n        }\n      }\n    }\n    value *= Math.pow(2, 8)\n    value += buffer[start + i]\n  }\n  if (signed) {\n    value -= Math.pow(2, length * 7 - 1) - 1\n  }\n  return {\n    length: length,\n    value: value\n  }\n}\n"]},"metadata":{},"sourceType":"module"}