{"ast":null,"code":"function areInputsEqual(newInputs,lastInputs){if(newInputs.length!==lastInputs.length){return false;}for(var i=0;i<newInputs.length;i++){if(newInputs[i]!==lastInputs[i]){return false;}}return true;}function memoizeOne(resultFn,isEqual){if(isEqual===void 0){isEqual=areInputsEqual;}var lastThis;var lastArgs=[];var lastResult;var calledOnce=false;function memoized(){var newArgs=[];for(var _i=0;_i<arguments.length;_i++){newArgs[_i]=arguments[_i];}if(calledOnce&&lastThis===this&&isEqual(newArgs,lastArgs)){return lastResult;}lastResult=resultFn.apply(this,newArgs);calledOnce=true;lastThis=this;lastArgs=newArgs;return lastResult;}return memoized;}export default memoizeOne;","map":{"version":3,"sources":["/Users/randyadams/IMMORTIFYV2/immortify-app-client/src/react-video-recorder-master/node_modules/memoize-one/dist/memoize-one.esm.js"],"names":["areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","_i","arguments","apply"],"mappings":"AAAA,QAASA,CAAAA,cAAT,CAAwBC,SAAxB,CAAmCC,UAAnC,CAA+C,CAC3C,GAAID,SAAS,CAACE,MAAV,GAAqBD,UAAU,CAACC,MAApC,CAA4C,CACxC,MAAO,MAAP,CACH,CACD,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,SAAS,CAACE,MAA9B,CAAsCC,CAAC,EAAvC,CAA2C,CACvC,GAAIH,SAAS,CAACG,CAAD,CAAT,GAAiBF,UAAU,CAACE,CAAD,CAA/B,CAAoC,CAChC,MAAO,MAAP,CACH,CACJ,CACD,MAAO,KAAP,CACH,CAED,QAASC,CAAAA,UAAT,CAAoBC,QAApB,CAA8BC,OAA9B,CAAuC,CACnC,GAAIA,OAAO,GAAK,IAAK,EAArB,CAAwB,CAAEA,OAAO,CAAGP,cAAV,CAA2B,CACrD,GAAIQ,CAAAA,QAAJ,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,UAAJ,CACA,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CACA,QAASC,CAAAA,QAAT,EAAoB,CAChB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,IAAK,GAAIC,CAAAA,EAAE,CAAG,CAAd,CAAiBA,EAAE,CAAGC,SAAS,CAACZ,MAAhC,CAAwCW,EAAE,EAA1C,CAA8C,CAC1CD,OAAO,CAACC,EAAD,CAAP,CAAcC,SAAS,CAACD,EAAD,CAAvB,CACH,CACD,GAAIH,UAAU,EAAIH,QAAQ,GAAK,IAA3B,EAAmCD,OAAO,CAACM,OAAD,CAAUJ,QAAV,CAA9C,CAAmE,CAC/D,MAAOC,CAAAA,UAAP,CACH,CACDA,UAAU,CAAGJ,QAAQ,CAACU,KAAT,CAAe,IAAf,CAAqBH,OAArB,CAAb,CACAF,UAAU,CAAG,IAAb,CACAH,QAAQ,CAAG,IAAX,CACAC,QAAQ,CAAGI,OAAX,CACA,MAAOH,CAAAA,UAAP,CACH,CACD,MAAOE,CAAAA,QAAP,CACH,CAED,cAAeP,CAAAA,UAAf","sourcesContent":["function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n"]},"metadata":{},"sourceType":"module"}