{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport function serializeAws_restXmlAbortMultipartUploadCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"AbortMultipartUpload\"\n      };\n\n      if (input.UploadId !== undefined) {\n        query[\"uploadId\"] = input.UploadId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlCompleteMultipartUploadCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {};\n\n      if (input.UploadId !== undefined) {\n        query[\"uploadId\"] = input.UploadId;\n      }\n\n      if (input.MultipartUpload !== undefined) {\n        contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlCopyObjectCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.ACL !== undefined) {\n        headers[\"x-amz-acl\"] = input.ACL;\n      }\n\n      if (input.CacheControl !== undefined) {\n        headers[\"Cache-Control\"] = input.CacheControl;\n      }\n\n      if (input.ContentDisposition !== undefined) {\n        headers[\"Content-Disposition\"] = input.ContentDisposition;\n      }\n\n      if (input.ContentEncoding !== undefined) {\n        headers[\"Content-Encoding\"] = input.ContentEncoding;\n      }\n\n      if (input.ContentLanguage !== undefined) {\n        headers[\"Content-Language\"] = input.ContentLanguage;\n      }\n\n      if (input.ContentType !== undefined) {\n        headers[\"Content-Type\"] = input.ContentType;\n      }\n\n      if (input.CopySource !== undefined) {\n        headers[\"x-amz-copy-source\"] = input.CopySource;\n      }\n\n      if (input.CopySourceIfMatch !== undefined) {\n        headers[\"x-amz-copy-source-if-match\"] = input.CopySourceIfMatch;\n      }\n\n      if (input.CopySourceIfModifiedSince !== undefined) {\n        headers[\"x-amz-copy-source-if-modified-since\"] = __dateToUtcString(input.CopySourceIfModifiedSince).toString();\n      }\n\n      if (input.CopySourceIfNoneMatch !== undefined) {\n        headers[\"x-amz-copy-source-if-none-match\"] = input.CopySourceIfNoneMatch;\n      }\n\n      if (input.CopySourceIfUnmodifiedSince !== undefined) {\n        headers[\"x-amz-copy-source-if-unmodified-since\"] = __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString();\n      }\n\n      if (input.CopySourceSSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-copy-source-server-side-encryption-customer-algorithm\"] = input.CopySourceSSECustomerAlgorithm;\n      }\n\n      if (input.CopySourceSSECustomerKey !== undefined) {\n        headers[\"x-amz-copy-source-server-side-encryption-customer-key\"] = input.CopySourceSSECustomerKey;\n      }\n\n      if (input.CopySourceSSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-copy-source-server-side-encryption-customer-key-MD5\"] = input.CopySourceSSECustomerKeyMD5;\n      }\n\n      if (input.Expires !== undefined) {\n        headers[\"Expires\"] = __dateToUtcString(input.Expires).toString();\n      }\n\n      if (input.GrantFullControl !== undefined) {\n        headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n      }\n\n      if (input.GrantRead !== undefined) {\n        headers[\"x-amz-grant-read\"] = input.GrantRead;\n      }\n\n      if (input.GrantReadACP !== undefined) {\n        headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n      }\n\n      if (input.GrantWriteACP !== undefined) {\n        headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n      }\n\n      if (input.MetadataDirective !== undefined) {\n        headers[\"x-amz-metadata-directive\"] = input.MetadataDirective;\n      }\n\n      if (input.ObjectLockLegalHoldStatus !== undefined) {\n        headers[\"x-amz-object-lock-legal-hold\"] = input.ObjectLockLegalHoldStatus;\n      }\n\n      if (input.ObjectLockMode !== undefined) {\n        headers[\"x-amz-object-lock-mode\"] = input.ObjectLockMode;\n      }\n\n      if (input.ObjectLockRetainUntilDate !== undefined) {\n        headers[\"x-amz-object-lock-retain-until-date\"] = (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      if (input.SSEKMSEncryptionContext !== undefined) {\n        headers[\"x-amz-server-side-encryption-context\"] = input.SSEKMSEncryptionContext;\n      }\n\n      if (input.SSEKMSKeyId !== undefined) {\n        headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] = input.SSEKMSKeyId;\n      }\n\n      if (input.ServerSideEncryption !== undefined) {\n        headers[\"x-amz-server-side-encryption\"] = input.ServerSideEncryption;\n      }\n\n      if (input.StorageClass !== undefined) {\n        headers[\"x-amz-storage-class\"] = input.StorageClass;\n      }\n\n      if (input.Tagging !== undefined) {\n        headers[\"x-amz-tagging\"] = input.Tagging;\n      }\n\n      if (input.TaggingDirective !== undefined) {\n        headers[\"x-amz-tagging-directive\"] = input.TaggingDirective;\n      }\n\n      if (input.WebsiteRedirectLocation !== undefined) {\n        headers[\"x-amz-website-redirect-location\"] = input.WebsiteRedirectLocation;\n      }\n\n      if (input.Metadata !== undefined) {\n        Object.keys(input.Metadata).forEach(function (suffix) {\n          headers[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n        });\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"CopyObject\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlCreateBucketCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ACL !== undefined) {\n        headers[\"x-amz-acl\"] = input.ACL;\n      }\n\n      if (input.GrantFullControl !== undefined) {\n        headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n      }\n\n      if (input.GrantRead !== undefined) {\n        headers[\"x-amz-grant-read\"] = input.GrantRead;\n      }\n\n      if (input.GrantReadACP !== undefined) {\n        headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n      }\n\n      if (input.GrantWrite !== undefined) {\n        headers[\"x-amz-grant-write\"] = input.GrantWrite;\n      }\n\n      if (input.GrantWriteACP !== undefined) {\n        headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n      }\n\n      if (input.ObjectLockEnabledForBucket !== undefined) {\n        headers[\"x-amz-bucket-object-lock-enabled\"] = input.ObjectLockEnabledForBucket.toString();\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.CreateBucketConfiguration !== undefined) {\n        contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlCreateMultipartUploadCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.ACL !== undefined) {\n        headers[\"x-amz-acl\"] = input.ACL;\n      }\n\n      if (input.CacheControl !== undefined) {\n        headers[\"Cache-Control\"] = input.CacheControl;\n      }\n\n      if (input.ContentDisposition !== undefined) {\n        headers[\"Content-Disposition\"] = input.ContentDisposition;\n      }\n\n      if (input.ContentEncoding !== undefined) {\n        headers[\"Content-Encoding\"] = input.ContentEncoding;\n      }\n\n      if (input.ContentLanguage !== undefined) {\n        headers[\"Content-Language\"] = input.ContentLanguage;\n      }\n\n      if (input.ContentType !== undefined) {\n        headers[\"Content-Type\"] = input.ContentType;\n      }\n\n      if (input.Expires !== undefined) {\n        headers[\"Expires\"] = __dateToUtcString(input.Expires).toString();\n      }\n\n      if (input.GrantFullControl !== undefined) {\n        headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n      }\n\n      if (input.GrantRead !== undefined) {\n        headers[\"x-amz-grant-read\"] = input.GrantRead;\n      }\n\n      if (input.GrantReadACP !== undefined) {\n        headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n      }\n\n      if (input.GrantWriteACP !== undefined) {\n        headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n      }\n\n      if (input.ObjectLockLegalHoldStatus !== undefined) {\n        headers[\"x-amz-object-lock-legal-hold\"] = input.ObjectLockLegalHoldStatus;\n      }\n\n      if (input.ObjectLockMode !== undefined) {\n        headers[\"x-amz-object-lock-mode\"] = input.ObjectLockMode;\n      }\n\n      if (input.ObjectLockRetainUntilDate !== undefined) {\n        headers[\"x-amz-object-lock-retain-until-date\"] = (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      if (input.SSEKMSEncryptionContext !== undefined) {\n        headers[\"x-amz-server-side-encryption-context\"] = input.SSEKMSEncryptionContext;\n      }\n\n      if (input.SSEKMSKeyId !== undefined) {\n        headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] = input.SSEKMSKeyId;\n      }\n\n      if (input.ServerSideEncryption !== undefined) {\n        headers[\"x-amz-server-side-encryption\"] = input.ServerSideEncryption;\n      }\n\n      if (input.StorageClass !== undefined) {\n        headers[\"x-amz-storage-class\"] = input.StorageClass;\n      }\n\n      if (input.Tagging !== undefined) {\n        headers[\"x-amz-tagging\"] = input.Tagging;\n      }\n\n      if (input.WebsiteRedirectLocation !== undefined) {\n        headers[\"x-amz-website-redirect-location\"] = input.WebsiteRedirectLocation;\n      }\n\n      if (input.Metadata !== undefined) {\n        Object.keys(input.Metadata).forEach(function (suffix) {\n          headers[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n        });\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        uploads: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        analytics: \"\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketCorsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        cors: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketEncryptionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        encryption: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        inventory: \"\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketLifecycleCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        lifecycle: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        metrics: \"\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketPolicyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        policy: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketReplicationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        replication: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketTaggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        tagging: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteBucketWebsiteCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        website: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteObjectCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.BypassGovernanceRetention !== undefined) {\n        headers[\"x-amz-bypass-governance-retention\"] = input.BypassGovernanceRetention.toString();\n      }\n\n      if (input.MFA !== undefined) {\n        headers[\"x-amz-mfa\"] = input.MFA;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"DeleteObject\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteObjectTaggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        tagging: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeleteObjectsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.BypassGovernanceRetention !== undefined) {\n        headers[\"x-amz-bypass-governance-retention\"] = input.BypassGovernanceRetention.toString();\n      }\n\n      if (input.MFA !== undefined) {\n        headers[\"x-amz-mfa\"] = input.MFA;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        delete: \"\"\n      };\n\n      if (input.Delete !== undefined) {\n        contents = serializeAws_restXmlDelete(input.Delete, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlDeletePublicAccessBlockCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        publicAccessBlock: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        accelerate: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketAclCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        acl: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        analytics: \"\",\n        \"x-id\": \"GetBucketAnalyticsConfiguration\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketCorsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        cors: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketEncryptionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        encryption: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        inventory: \"\",\n        \"x-id\": \"GetBucketInventoryConfiguration\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketLifecycleConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        lifecycle: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketLocationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        location: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketLoggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        logging: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        metrics: \"\",\n        \"x-id\": \"GetBucketMetricsConfiguration\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketNotificationConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        notification: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketPolicyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        policy: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketPolicyStatusCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        policyStatus: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketReplicationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        replication: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketRequestPaymentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        requestPayment: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketTaggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        tagging: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketVersioningCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        versioning: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetBucketWebsiteCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        website: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.IfMatch !== undefined) {\n        headers[\"If-Match\"] = input.IfMatch;\n      }\n\n      if (input.IfModifiedSince !== undefined) {\n        headers[\"If-Modified-Since\"] = __dateToUtcString(input.IfModifiedSince).toString();\n      }\n\n      if (input.IfNoneMatch !== undefined) {\n        headers[\"If-None-Match\"] = input.IfNoneMatch;\n      }\n\n      if (input.IfUnmodifiedSince !== undefined) {\n        headers[\"If-Unmodified-Since\"] = __dateToUtcString(input.IfUnmodifiedSince).toString();\n      }\n\n      if (input.Range !== undefined) {\n        headers[\"Range\"] = input.Range;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"GetObject\"\n      };\n\n      if (input.PartNumber !== undefined) {\n        query[\"partNumber\"] = input.PartNumber.toString();\n      }\n\n      if (input.ResponseCacheControl !== undefined) {\n        query[\"response-cache-control\"] = input.ResponseCacheControl;\n      }\n\n      if (input.ResponseContentDisposition !== undefined) {\n        query[\"response-content-disposition\"] = input.ResponseContentDisposition;\n      }\n\n      if (input.ResponseContentEncoding !== undefined) {\n        query[\"response-content-encoding\"] = input.ResponseContentEncoding;\n      }\n\n      if (input.ResponseContentLanguage !== undefined) {\n        query[\"response-content-language\"] = input.ResponseContentLanguage;\n      }\n\n      if (input.ResponseContentType !== undefined) {\n        query[\"response-content-type\"] = input.ResponseContentType;\n      }\n\n      if (input.ResponseExpires !== undefined) {\n        query[\"response-expires\"] = (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectAclCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        acl: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectLegalHoldCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"legal-hold\": \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectLockConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        \"object-lock\": \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectRetentionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        retention: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectTaggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        tagging: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetObjectTorrentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        torrent: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlGetPublicAccessBlockCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        publicAccessBlock: \"\"\n      };\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlHeadBucketCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"HEAD\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlHeadObjectCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.IfMatch !== undefined) {\n        headers[\"If-Match\"] = input.IfMatch;\n      }\n\n      if (input.IfModifiedSince !== undefined) {\n        headers[\"If-Modified-Since\"] = __dateToUtcString(input.IfModifiedSince).toString();\n      }\n\n      if (input.IfNoneMatch !== undefined) {\n        headers[\"If-None-Match\"] = input.IfNoneMatch;\n      }\n\n      if (input.IfUnmodifiedSince !== undefined) {\n        headers[\"If-Unmodified-Since\"] = __dateToUtcString(input.IfUnmodifiedSince).toString();\n      }\n\n      if (input.Range !== undefined) {\n        headers[\"Range\"] = input.Range;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {};\n\n      if (input.PartNumber !== undefined) {\n        query[\"partNumber\"] = input.PartNumber.toString();\n      }\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"HEAD\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        analytics: \"\",\n        \"x-id\": \"ListBucketAnalyticsConfigurations\"\n      };\n\n      if (input.ContinuationToken !== undefined) {\n        query[\"continuation-token\"] = input.ContinuationToken;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        inventory: \"\",\n        \"x-id\": \"ListBucketInventoryConfigurations\"\n      };\n\n      if (input.ContinuationToken !== undefined) {\n        query[\"continuation-token\"] = input.ContinuationToken;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListBucketMetricsConfigurationsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        metrics: \"\",\n        \"x-id\": \"ListBucketMetricsConfigurations\"\n      };\n\n      if (input.ContinuationToken !== undefined) {\n        query[\"continuation-token\"] = input.ContinuationToken;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListBucketsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/\";\n      body = \"\";\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListMultipartUploadsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        uploads: \"\"\n      };\n\n      if (input.Delimiter !== undefined) {\n        query[\"delimiter\"] = input.Delimiter;\n      }\n\n      if (input.EncodingType !== undefined) {\n        query[\"encoding-type\"] = input.EncodingType;\n      }\n\n      if (input.KeyMarker !== undefined) {\n        query[\"key-marker\"] = input.KeyMarker;\n      }\n\n      if (input.MaxUploads !== undefined) {\n        query[\"max-uploads\"] = input.MaxUploads.toString();\n      }\n\n      if (input.Prefix !== undefined) {\n        query[\"prefix\"] = input.Prefix;\n      }\n\n      if (input.UploadIdMarker !== undefined) {\n        query[\"upload-id-marker\"] = input.UploadIdMarker;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListObjectVersionsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        versions: \"\"\n      };\n\n      if (input.Delimiter !== undefined) {\n        query[\"delimiter\"] = input.Delimiter;\n      }\n\n      if (input.EncodingType !== undefined) {\n        query[\"encoding-type\"] = input.EncodingType;\n      }\n\n      if (input.KeyMarker !== undefined) {\n        query[\"key-marker\"] = input.KeyMarker;\n      }\n\n      if (input.MaxKeys !== undefined) {\n        query[\"max-keys\"] = input.MaxKeys.toString();\n      }\n\n      if (input.Prefix !== undefined) {\n        query[\"prefix\"] = input.Prefix;\n      }\n\n      if (input.VersionIdMarker !== undefined) {\n        query[\"version-id-marker\"] = input.VersionIdMarker;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListObjectsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {};\n\n      if (input.Delimiter !== undefined) {\n        query[\"delimiter\"] = input.Delimiter;\n      }\n\n      if (input.EncodingType !== undefined) {\n        query[\"encoding-type\"] = input.EncodingType;\n      }\n\n      if (input.Marker !== undefined) {\n        query[\"marker\"] = input.Marker;\n      }\n\n      if (input.MaxKeys !== undefined) {\n        query[\"max-keys\"] = input.MaxKeys.toString();\n      }\n\n      if (input.Prefix !== undefined) {\n        query[\"prefix\"] = input.Prefix;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListObjectsV2Command(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        \"list-type\": \"2\"\n      };\n\n      if (input.ContinuationToken !== undefined) {\n        query[\"continuation-token\"] = input.ContinuationToken;\n      }\n\n      if (input.Delimiter !== undefined) {\n        query[\"delimiter\"] = input.Delimiter;\n      }\n\n      if (input.EncodingType !== undefined) {\n        query[\"encoding-type\"] = input.EncodingType;\n      }\n\n      if (input.FetchOwner !== undefined) {\n        query[\"fetch-owner\"] = input.FetchOwner.toString();\n      }\n\n      if (input.MaxKeys !== undefined) {\n        query[\"max-keys\"] = input.MaxKeys.toString();\n      }\n\n      if (input.Prefix !== undefined) {\n        query[\"prefix\"] = input.Prefix;\n      }\n\n      if (input.StartAfter !== undefined) {\n        query[\"start-after\"] = input.StartAfter;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlListPartsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"ListParts\"\n      };\n\n      if (input.MaxParts !== undefined) {\n        query[\"max-parts\"] = input.MaxParts.toString();\n      }\n\n      if (input.PartNumberMarker !== undefined) {\n        query[\"part-number-marker\"] = input.PartNumberMarker.toString();\n      }\n\n      if (input.UploadId !== undefined) {\n        query[\"uploadId\"] = input.UploadId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        accelerate: \"\"\n      };\n\n      if (input.AccelerateConfiguration !== undefined) {\n        contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketAclCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ACL !== undefined) {\n        headers[\"x-amz-acl\"] = input.ACL;\n      }\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.GrantFullControl !== undefined) {\n        headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n      }\n\n      if (input.GrantRead !== undefined) {\n        headers[\"x-amz-grant-read\"] = input.GrantRead;\n      }\n\n      if (input.GrantReadACP !== undefined) {\n        headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n      }\n\n      if (input.GrantWrite !== undefined) {\n        headers[\"x-amz-grant-write\"] = input.GrantWrite;\n      }\n\n      if (input.GrantWriteACP !== undefined) {\n        headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        acl: \"\"\n      };\n\n      if (input.AccessControlPolicy !== undefined) {\n        contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        analytics: \"\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      if (input.AnalyticsConfiguration !== undefined) {\n        contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketCorsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        cors: \"\"\n      };\n\n      if (input.CORSConfiguration !== undefined) {\n        contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketEncryptionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        encryption: \"\"\n      };\n\n      if (input.ServerSideEncryptionConfiguration !== undefined) {\n        contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        inventory: \"\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      if (input.InventoryConfiguration !== undefined) {\n        contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        lifecycle: \"\"\n      };\n\n      if (input.LifecycleConfiguration !== undefined) {\n        contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketLoggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        logging: \"\"\n      };\n\n      if (input.BucketLoggingStatus !== undefined) {\n        contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        metrics: \"\"\n      };\n\n      if (input.Id !== undefined) {\n        query[\"id\"] = input.Id;\n      }\n\n      if (input.MetricsConfiguration !== undefined) {\n        contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketNotificationConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        notification: \"\"\n      };\n\n      if (input.NotificationConfiguration !== undefined) {\n        contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketPolicyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, bodyNode;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ConfirmRemoveSelfBucketAccess !== undefined) {\n        headers[\"x-amz-confirm-remove-self-bucket-access\"] = input.ConfirmRemoveSelfBucketAccess.toString();\n      }\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        policy: \"\"\n      };\n      body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n      bodyNode = new __XmlNode(\"PutBucketPolicyRequest\");\n      bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n      if (input.Policy !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Policy\").addChildNode(new __XmlText(input.Policy)).withName(\"Policy\"));\n      }\n\n      body += bodyNode.toString();\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketReplicationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.Token !== undefined) {\n        headers[\"x-amz-bucket-object-lock-token\"] = input.Token;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        replication: \"\"\n      };\n\n      if (input.ReplicationConfiguration !== undefined) {\n        contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketRequestPaymentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        requestPayment: \"\"\n      };\n\n      if (input.RequestPaymentConfiguration !== undefined) {\n        contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketTaggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        tagging: \"\"\n      };\n\n      if (input.Tagging !== undefined) {\n        contents = serializeAws_restXmlTagging(input.Tagging, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketVersioningCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.MFA !== undefined) {\n        headers[\"x-amz-mfa\"] = input.MFA;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        versioning: \"\"\n      };\n\n      if (input.VersioningConfiguration !== undefined) {\n        contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutBucketWebsiteCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        website: \"\"\n      };\n\n      if (input.WebsiteConfiguration !== undefined) {\n        contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutObjectCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/octet-stream\";\n\n      if (input.ACL !== undefined) {\n        headers[\"x-amz-acl\"] = input.ACL;\n      }\n\n      if (input.CacheControl !== undefined) {\n        headers[\"Cache-Control\"] = input.CacheControl;\n      }\n\n      if (input.ContentDisposition !== undefined) {\n        headers[\"Content-Disposition\"] = input.ContentDisposition;\n      }\n\n      if (input.ContentEncoding !== undefined) {\n        headers[\"Content-Encoding\"] = input.ContentEncoding;\n      }\n\n      if (input.ContentLanguage !== undefined) {\n        headers[\"Content-Language\"] = input.ContentLanguage;\n      }\n\n      if (input.ContentLength !== undefined) {\n        headers[\"Content-Length\"] = input.ContentLength.toString();\n      }\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.ContentType !== undefined) {\n        headers[\"Content-Type\"] = input.ContentType;\n      }\n\n      if (input.Expires !== undefined) {\n        headers[\"Expires\"] = __dateToUtcString(input.Expires).toString();\n      }\n\n      if (input.GrantFullControl !== undefined) {\n        headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n      }\n\n      if (input.GrantRead !== undefined) {\n        headers[\"x-amz-grant-read\"] = input.GrantRead;\n      }\n\n      if (input.GrantReadACP !== undefined) {\n        headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n      }\n\n      if (input.GrantWriteACP !== undefined) {\n        headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n      }\n\n      if (input.ObjectLockLegalHoldStatus !== undefined) {\n        headers[\"x-amz-object-lock-legal-hold\"] = input.ObjectLockLegalHoldStatus;\n      }\n\n      if (input.ObjectLockMode !== undefined) {\n        headers[\"x-amz-object-lock-mode\"] = input.ObjectLockMode;\n      }\n\n      if (input.ObjectLockRetainUntilDate !== undefined) {\n        headers[\"x-amz-object-lock-retain-until-date\"] = (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      if (input.SSEKMSEncryptionContext !== undefined) {\n        headers[\"x-amz-server-side-encryption-context\"] = input.SSEKMSEncryptionContext;\n      }\n\n      if (input.SSEKMSKeyId !== undefined) {\n        headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] = input.SSEKMSKeyId;\n      }\n\n      if (input.ServerSideEncryption !== undefined) {\n        headers[\"x-amz-server-side-encryption\"] = input.ServerSideEncryption;\n      }\n\n      if (input.StorageClass !== undefined) {\n        headers[\"x-amz-storage-class\"] = input.StorageClass;\n      }\n\n      if (input.Tagging !== undefined) {\n        headers[\"x-amz-tagging\"] = input.Tagging;\n      }\n\n      if (input.WebsiteRedirectLocation !== undefined) {\n        headers[\"x-amz-website-redirect-location\"] = input.WebsiteRedirectLocation;\n      }\n\n      if (input.Metadata !== undefined) {\n        Object.keys(input.Metadata).forEach(function (suffix) {\n          headers[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n        });\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"PutObject\"\n      };\n\n      if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutObjectAclCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ACL !== undefined) {\n        headers[\"x-amz-acl\"] = input.ACL;\n      }\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.GrantFullControl !== undefined) {\n        headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n      }\n\n      if (input.GrantRead !== undefined) {\n        headers[\"x-amz-grant-read\"] = input.GrantRead;\n      }\n\n      if (input.GrantReadACP !== undefined) {\n        headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n      }\n\n      if (input.GrantWrite !== undefined) {\n        headers[\"x-amz-grant-write\"] = input.GrantWrite;\n      }\n\n      if (input.GrantWriteACP !== undefined) {\n        headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        acl: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      if (input.AccessControlPolicy !== undefined) {\n        contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutObjectLegalHoldCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"legal-hold\": \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      if (input.LegalHold !== undefined) {\n        contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutObjectLockConfigurationCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.Token !== undefined) {\n        headers[\"x-amz-bucket-object-lock-token\"] = input.Token;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        \"object-lock\": \"\"\n      };\n\n      if (input.ObjectLockConfiguration !== undefined) {\n        contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutObjectRetentionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.BypassGovernanceRetention !== undefined) {\n        headers[\"x-amz-bypass-governance-retention\"] = input.BypassGovernanceRetention.toString();\n      }\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        retention: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      if (input.Retention !== undefined) {\n        contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutObjectTaggingCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        tagging: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      if (input.Tagging !== undefined) {\n        contents = serializeAws_restXmlTagging(input.Tagging, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlPutPublicAccessBlockCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      resolvedPath = \"/{Bucket}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      query = {\n        publicAccessBlock: \"\"\n      };\n\n      if (input.PublicAccessBlockConfiguration !== undefined) {\n        contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlRestoreObjectCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        restore: \"\"\n      };\n\n      if (input.VersionId !== undefined) {\n        query[\"versionId\"] = input.VersionId;\n      }\n\n      if (input.RestoreRequest !== undefined) {\n        contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlSelectObjectContentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/xml\";\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        select: \"\",\n        \"select-type\": \"2\"\n      };\n      body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n      bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n      bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n      if (input.Expression !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\"));\n      }\n\n      if (input.ExpressionType !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\"));\n      }\n\n      if (input.InputSerialization !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\"));\n      }\n\n      if (input.OutputSerialization !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\"));\n      }\n\n      if (input.RequestProgress !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\"));\n      }\n\n      if (input.ScanRange !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\"));\n      }\n\n      body += bodyNode.toString();\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlUploadPartCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/octet-stream\";\n\n      if (input.ContentLength !== undefined) {\n        headers[\"Content-Length\"] = input.ContentLength.toString();\n      }\n\n      if (input.ContentMD5 !== undefined) {\n        headers[\"Content-MD5\"] = input.ContentMD5;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"UploadPart\"\n      };\n\n      if (input.PartNumber !== undefined) {\n        query[\"partNumber\"] = input.PartNumber.toString();\n      }\n\n      if (input.UploadId !== undefined) {\n        query[\"uploadId\"] = input.UploadId;\n      }\n\n      if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restXmlUploadPartCopyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n\n      if (input.CopySource !== undefined) {\n        headers[\"x-amz-copy-source\"] = input.CopySource;\n      }\n\n      if (input.CopySourceIfMatch !== undefined) {\n        headers[\"x-amz-copy-source-if-match\"] = input.CopySourceIfMatch;\n      }\n\n      if (input.CopySourceIfModifiedSince !== undefined) {\n        headers[\"x-amz-copy-source-if-modified-since\"] = __dateToUtcString(input.CopySourceIfModifiedSince).toString();\n      }\n\n      if (input.CopySourceIfNoneMatch !== undefined) {\n        headers[\"x-amz-copy-source-if-none-match\"] = input.CopySourceIfNoneMatch;\n      }\n\n      if (input.CopySourceIfUnmodifiedSince !== undefined) {\n        headers[\"x-amz-copy-source-if-unmodified-since\"] = __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString();\n      }\n\n      if (input.CopySourceRange !== undefined) {\n        headers[\"x-amz-copy-source-range\"] = input.CopySourceRange;\n      }\n\n      if (input.CopySourceSSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-copy-source-server-side-encryption-customer-algorithm\"] = input.CopySourceSSECustomerAlgorithm;\n      }\n\n      if (input.CopySourceSSECustomerKey !== undefined) {\n        headers[\"x-amz-copy-source-server-side-encryption-customer-key\"] = input.CopySourceSSECustomerKey;\n      }\n\n      if (input.CopySourceSSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-copy-source-server-side-encryption-customer-key-MD5\"] = input.CopySourceSSECustomerKeyMD5;\n      }\n\n      if (input.RequestPayer !== undefined) {\n        headers[\"x-amz-request-payer\"] = input.RequestPayer;\n      }\n\n      if (input.SSECustomerAlgorithm !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-algorithm\"] = input.SSECustomerAlgorithm;\n      }\n\n      if (input.SSECustomerKey !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n      }\n\n      if (input.SSECustomerKeyMD5 !== undefined) {\n        headers[\"x-amz-server-side-encryption-customer-key-MD5\"] = input.SSECustomerKeyMD5;\n      }\n\n      resolvedPath = \"/{Bucket}/{Key+}\";\n\n      if (input.Bucket !== undefined) {\n        labelValue = input.Bucket;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Bucket.\");\n      }\n\n      if (input.Key !== undefined) {\n        labelValue = input.Key;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Key.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n          return __extendedEncodeURIComponent(segment);\n        }).join(\"/\"));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Key.\");\n      }\n\n      query = {\n        \"x-id\": \"UploadPartCopy\"\n      };\n\n      if (input.PartNumber !== undefined) {\n        query[\"partNumber\"] = input.PartNumber.toString();\n      }\n\n      if (input.UploadId !== undefined) {\n        query[\"uploadId\"] = input.UploadId;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function deserializeAws_restXmlAbortMultipartUploadCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"AbortMultipartUploadOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlAbortMultipartUploadCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlCompleteMultipartUploadCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CompleteMultipartUploadOutput\",\n            Bucket: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = data[\"ETag\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = data[\"Location\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlCopyObjectCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CopyObjectOutput\",\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlCopyObjectCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlCreateBucketCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateBucketOutput\",\n            Location: undefined\n          };\n\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlCreateBucketCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, parsedBody, message;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlCreateMultipartUploadCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateMultipartUploadOutput\",\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlCreateMultipartUploadCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketCorsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketCorsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketLifecycleCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketPolicyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketReplicationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketTaggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteObjectCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteObjectOutput\",\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteObjectCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteObjectTaggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteObjectTaggingOutput\",\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeleteObjectsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteObjectsOutput\",\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          }\n\n          if (data[\"Deleted\"] !== undefined) {\n            wrappedItem = data[\"Deleted\"] instanceof Array ? data[\"Deleted\"] : [data[\"Deleted\"]];\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(wrappedItem, context);\n          }\n\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          }\n\n          if (data[\"Error\"] !== undefined) {\n            wrappedItem = data[\"Error\"] instanceof Array ? data[\"Error\"] : [data[\"Error\"]];\n            contents.Errors = deserializeAws_restXmlErrors(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeleteObjectsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlDeletePublicAccessBlockCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketAccelerateConfigurationOutput\",\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketAclCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketAclOutput\",\n            Grants: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            wrappedItem = data[\"AccessControlList\"][\"Grant\"] instanceof Array ? data[\"AccessControlList\"][\"Grant\"] : [data[\"AccessControlList\"][\"Grant\"]];\n            contents.Grants = deserializeAws_restXmlGrants(wrappedItem, context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketAclCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketAnalyticsConfigurationOutput\",\n            AnalyticsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketCorsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketCorsOutput\",\n            CORSRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          }\n\n          if (data[\"CORSRule\"] !== undefined) {\n            wrappedItem = data[\"CORSRule\"] instanceof Array ? data[\"CORSRule\"] : [data[\"CORSRule\"]];\n            contents.CORSRules = deserializeAws_restXmlCORSRules(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketCorsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketEncryptionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketEncryptionOutput\",\n            ServerSideEncryptionConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketEncryptionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketInventoryConfigurationOutput\",\n            InventoryConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketLifecycleConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketLifecycleConfigurationOutput\",\n            Rules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          }\n\n          if (data[\"Rule\"] !== undefined) {\n            wrappedItem = data[\"Rule\"] instanceof Array ? data[\"Rule\"] : [data[\"Rule\"]];\n            contents.Rules = deserializeAws_restXmlLifecycleRules(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketLocationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketLocationOutput\",\n            LocationConstraint: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = data[\"LocationConstraint\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketLocationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketLoggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketLoggingOutput\",\n            LoggingEnabled: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketLoggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketMetricsConfigurationOutput\",\n            MetricsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketNotificationConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem, wrappedItem, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"NotificationConfiguration\",\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          }\n\n          if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            wrappedItem = data[\"CloudFunctionConfiguration\"] instanceof Array ? data[\"CloudFunctionConfiguration\"] : [data[\"CloudFunctionConfiguration\"]];\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(wrappedItem, context);\n          }\n\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          }\n\n          if (data[\"QueueConfiguration\"] !== undefined) {\n            wrappedItem = data[\"QueueConfiguration\"] instanceof Array ? data[\"QueueConfiguration\"] : [data[\"QueueConfiguration\"]];\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(wrappedItem, context);\n          }\n\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          }\n\n          if (data[\"TopicConfiguration\"] !== undefined) {\n            wrappedItem = data[\"TopicConfiguration\"] instanceof Array ? data[\"TopicConfiguration\"] : [data[\"TopicConfiguration\"]];\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketPolicyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketPolicyOutput\",\n            Policy: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Policy\"] !== undefined) {\n            contents.Policy = data[\"Policy\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketPolicyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketPolicyStatusOutput\",\n            PolicyStatus: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketReplicationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketReplicationOutput\",\n            ReplicationConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketReplicationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketRequestPaymentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketRequestPaymentOutput\",\n            Payer: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = data[\"Payer\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketTaggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketTaggingOutput\",\n            TagSet: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            wrappedItem = data[\"TagSet\"][\"Tag\"] instanceof Array ? data[\"TagSet\"][\"Tag\"] : [data[\"TagSet\"][\"Tag\"]];\n            contents.TagSet = deserializeAws_restXmlTagSet(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketTaggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketVersioningCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketVersioningOutput\",\n            MFADelete: undefined,\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = data[\"MfaDelete\"];\n          }\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketVersioningCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetBucketWebsiteCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketWebsiteOutput\",\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          }\n\n          if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            wrappedItem = data[\"RoutingRules\"][\"RoutingRule\"] instanceof Array ? data[\"RoutingRules\"][\"RoutingRule\"] : [data[\"RoutingRules\"][\"RoutingRule\"]];\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetBucketWebsiteCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 400) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        __type: \"GetObjectOutput\",\n        AcceptRanges: undefined,\n        Body: undefined,\n        CacheControl: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n      }\n\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n      }\n\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = new Date(output.headers[\"expires\"]);\n      }\n\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = new Date(output.headers[\"last-modified\"]);\n      }\n\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n      }\n\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n      }\n\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectAclCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectAclOutput\",\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            wrappedItem = data[\"AccessControlList\"][\"Grant\"] instanceof Array ? data[\"AccessControlList\"][\"Grant\"] : [data[\"AccessControlList\"][\"Grant\"]];\n            contents.Grants = deserializeAws_restXmlGrants(wrappedItem, context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectAclCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectLegalHoldCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectLegalHoldOutput\",\n            LegalHold: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectLockConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectLockConfigurationOutput\",\n            ObjectLockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectRetentionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectRetentionOutput\",\n            Retention: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectRetentionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectTaggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectTaggingOutput\",\n            TagSet: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            wrappedItem = data[\"TagSet\"][\"Tag\"] instanceof Array ? data[\"TagSet\"][\"Tag\"] : [data[\"TagSet\"][\"Tag\"]];\n            contents.TagSet = deserializeAws_restXmlTagSet(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectTaggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetObjectTorrentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 400) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        __type: \"GetObjectTorrentOutput\",\n        Body: undefined,\n        RequestCharged: undefined\n      };\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetObjectTorrentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlGetPublicAccessBlockCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetPublicAccessBlockOutput\",\n            PublicAccessBlockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlHeadBucketCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlHeadBucketCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlHeadObjectCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"HeadObjectOutput\",\n            AcceptRanges: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n          }\n\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = new Date(output.headers[\"expires\"]);\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\n          }\n\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n          }\n\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n          }\n\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n          }\n\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlHeadObjectCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketAnalyticsConfigurationsOutput\",\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          }\n\n          if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            wrappedItem = data[\"AnalyticsConfiguration\"] instanceof Array ? data[\"AnalyticsConfiguration\"] : [data[\"AnalyticsConfiguration\"]];\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(wrappedItem, context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketInventoryConfigurationsOutput\",\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          }\n\n          if (data[\"InventoryConfiguration\"] !== undefined) {\n            wrappedItem = data[\"InventoryConfiguration\"] instanceof Array ? data[\"InventoryConfiguration\"] : [data[\"InventoryConfiguration\"]];\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(wrappedItem, context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListBucketMetricsConfigurationsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketMetricsConfigurationsOutput\",\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          }\n\n          if (data[\"MetricsConfiguration\"] !== undefined) {\n            wrappedItem = data[\"MetricsConfiguration\"] instanceof Array ? data[\"MetricsConfiguration\"] : [data[\"MetricsConfiguration\"]];\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(wrappedItem, context);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListBucketsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketsOutput\",\n            Buckets: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          }\n\n          if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            wrappedItem = data[\"Buckets\"][\"Bucket\"] instanceof Array ? data[\"Buckets\"][\"Bucket\"] : [data[\"Buckets\"][\"Bucket\"]];\n            contents.Buckets = deserializeAws_restXmlBuckets(wrappedItem, context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListBucketsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListMultipartUploadsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListMultipartUploadsOutput\",\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            wrappedItem = data[\"CommonPrefixes\"] instanceof Array ? data[\"CommonPrefixes\"] : [data[\"CommonPrefixes\"]];\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = data[\"UploadIdMarker\"];\n          }\n\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          }\n\n          if (data[\"Upload\"] !== undefined) {\n            wrappedItem = data[\"Upload\"] instanceof Array ? data[\"Upload\"] : [data[\"Upload\"]];\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListMultipartUploadsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListObjectVersionsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem, wrappedItem, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListObjectVersionsOutput\",\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            wrappedItem = data[\"CommonPrefixes\"] instanceof Array ? data[\"CommonPrefixes\"] : [data[\"CommonPrefixes\"]];\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n          }\n\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          }\n\n          if (data[\"DeleteMarker\"] !== undefined) {\n            wrappedItem = data[\"DeleteMarker\"] instanceof Array ? data[\"DeleteMarker\"] : [data[\"DeleteMarker\"]];\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(wrappedItem, context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = data[\"VersionIdMarker\"];\n          }\n\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          }\n\n          if (data[\"Version\"] !== undefined) {\n            wrappedItem = data[\"Version\"] instanceof Array ? data[\"Version\"] : [data[\"Version\"]];\n            contents.Versions = deserializeAws_restXmlObjectVersionList(wrappedItem, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListObjectVersionsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListObjectsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListObjectsOutput\",\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            wrappedItem = data[\"CommonPrefixes\"] instanceof Array ? data[\"CommonPrefixes\"] : [data[\"CommonPrefixes\"]];\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            wrappedItem = data[\"Contents\"] instanceof Array ? data[\"Contents\"] : [data[\"Contents\"]];\n            contents.Contents = deserializeAws_restXmlObjectList(wrappedItem, context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = data[\"Marker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = data[\"NextMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListObjectsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListObjectsV2Command(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListObjectsV2Output\",\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            wrappedItem = data[\"CommonPrefixes\"] instanceof Array ? data[\"CommonPrefixes\"] : [data[\"CommonPrefixes\"]];\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            wrappedItem = data[\"Contents\"] instanceof Array ? data[\"Contents\"] : [data[\"Contents\"]];\n            contents.Contents = deserializeAws_restXmlObjectList(wrappedItem, context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = parseInt(data[\"KeyCount\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = data[\"StartAfter\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListObjectsV2CommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlListPartsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data, wrappedItem;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListPartsOutput\",\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = parseInt(data[\"MaxParts\"]);\n          }\n\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = parseInt(data[\"NextPartNumberMarker\"]);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = parseInt(data[\"PartNumberMarker\"]);\n          }\n\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          }\n\n          if (data[\"Part\"] !== undefined) {\n            wrappedItem = data[\"Part\"] instanceof Array ? data[\"Part\"] : [data[\"Part\"]];\n            contents.Parts = deserializeAws_restXmlParts(wrappedItem, context);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = data[\"StorageClass\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlListPartsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketAclCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketAclCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketCorsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketCorsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketEncryptionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketEncryptionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketLoggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketLoggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketNotificationConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketPolicyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketPolicyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketReplicationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketReplicationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketRequestPaymentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketTaggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketTaggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketVersioningCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketVersioningCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutBucketWebsiteCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutBucketWebsiteCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutObjectCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectOutput\",\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutObjectCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutObjectAclCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectAclOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutObjectAclCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutObjectLegalHoldCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectLegalHoldOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectLockConfigurationOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutObjectRetentionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectRetentionOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutObjectRetentionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutObjectTaggingCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectTaggingOutput\",\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutObjectTaggingCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlPutPublicAccessBlockCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlRestoreObjectCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"RestoreObjectOutput\",\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlRestoreObjectCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlSelectObjectContentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 400) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        __type: \"SelectObjectContentOutput\",\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4\n                /*yield*/\n                , deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n}\n\nfunction deserializeAws_restXmlSelectObjectContentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlUploadPartCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UploadPartOutput\",\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlUploadPartCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restXmlUploadPartCopyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UploadPartCopyOutput\",\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restXmlUploadPartCopyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Cont\"] !== undefined)) return [3\n          /*break*/\n          , 2];\n          _a = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.Cont = _f.sent(), _a)];\n\n        case 2:\n          if (!(output[\"End\"] !== undefined)) return [3\n          /*break*/\n          , 4];\n          _b = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n\n        case 3:\n          return [2\n          /*return*/\n          , (_b.End = _f.sent(), _b)];\n\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3\n          /*break*/\n          , 6];\n          _c = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n\n        case 5:\n          return [2\n          /*return*/\n          , (_c.Progress = _f.sent(), _c)];\n\n        case 6:\n          if (!(output[\"Records\"] !== undefined)) return [3\n          /*break*/\n          , 8];\n          _d = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n\n        case 7:\n          return [2\n          /*return*/\n          , (_d.Records = _f.sent(), _d)];\n\n        case 8:\n          if (!(output[\"Stats\"] !== undefined)) return [3\n          /*break*/\n          , 10];\n          _e = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n\n        case 9:\n          return [2\n          /*return*/\n          , (_e.Stats = _f.sent(), _e)];\n\n        case 10:\n          return [2\n          /*return*/\n          , {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlEndEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {\n            __type: \"ProgressEvent\"\n          };\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {\n        __type: \"RecordsEvent\"\n      };\n      contents.Payload = output.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {\n            __type: \"StatsEvent\"\n          };\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyExists\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyOwnedByYou\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchBucket\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchKey\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchUpload\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectAlreadyInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectNotInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n\n  if (input.DaysAfterInitiation !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n\n  if (input.Grants !== undefined) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n\n  if (input.Owner !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n\n  if (input.Owner !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n  var e_1, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n      var entry = input_1_1.value;\n      var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n  var e_2, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {\n      var entry = input_2_1.value;\n      var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n  var e_3, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {\n      var entry = input_3_1.value;\n      var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.Id !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\"));\n  }\n\n  if (input.StorageClassAnalysis !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n\n  if (input.S3BucketDestination !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n\n  if (input.And !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlAnalyticsAndOperator(input.And, context).withName(\"And\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tag !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n\n  if (input.Bucket !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\"));\n  }\n\n  if (input.BucketAccountId !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\"));\n  }\n\n  if (input.Format !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n\n  if (input.Rules !== undefined) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n\n  if (input.LoggingEnabled !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n\n  if (input.CORSRules !== undefined) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n\n  if (input.AllowedHeaders !== undefined) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedMethods !== undefined) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedOrigins !== undefined) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ExposeHeaders !== undefined) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.MaxAgeSeconds !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRules = function (input, context) {\n  var e_4, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_4 = __values(input), input_4_1 = input_4.next(); !input_4_1.done; input_4_1 = input_4.next()) {\n      var entry = input_4_1.value;\n      var node = serializeAws_restXmlCORSRule(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (input_4_1 && !input_4_1.done && (_a = input_4.return)) _a.call(input_4);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlCSVInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n\n  if (input.AllowQuotedRecordDelimiter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\"));\n  }\n\n  if (input.Comments !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\"));\n  }\n\n  if (input.FieldDelimiter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\"));\n  }\n\n  if (input.FileHeaderInfo !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\"));\n  }\n\n  if (input.QuoteCharacter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\"));\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\"));\n  }\n\n  if (input.RecordDelimiter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n\n  if (input.FieldDelimiter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\"));\n  }\n\n  if (input.QuoteCharacter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\"));\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\"));\n  }\n\n  if (input.QuoteFields !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\"));\n  }\n\n  if (input.RecordDelimiter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n\n  if (input.Parts !== undefined) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n\n  if (input.ETag !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\"));\n  }\n\n  if (input.PartNumber !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n  var e_5, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_5 = __values(input), input_5_1 = input_5.next(); !input_5_1.done; input_5_1 = input_5.next()) {\n      var entry = input_5_1.value;\n      var node = serializeAws_restXmlCompletedPart(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (input_5_1 && !input_5_1.done && (_a = input_5.return)) _a.call(input_5);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlCondition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n\n  if (input.HttpErrorCodeReturnedEquals !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\"));\n  }\n\n  if (input.KeyPrefixEquals !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n\n  if (input.LocationConstraint !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n\n  if (input.Days !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\"));\n  }\n\n  if (input.Mode !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\"));\n  }\n\n  if (input.Years !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDelete = function (input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n\n  if (input.Objects !== undefined) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Quiet !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n\n  if (input.AccessControlTranslation !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\"));\n  }\n\n  if (input.Account !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\"));\n  }\n\n  if (input.Bucket !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\"));\n  }\n\n  if (input.EncryptionConfiguration !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\"));\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\"));\n  }\n\n  if (input.ReplicationTime !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\"));\n  }\n\n  if (input.StorageClass !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n\n  if (input.EncryptionType !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\"));\n  }\n\n  if (input.KMSContext !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\"));\n  }\n\n  if (input.KMSKeyId !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n\n  if (input.ReplicaKmsKeyID !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n\n  if (input.Key !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventList = function (input, context) {\n  var e_6, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_6 = __values(input), input_6_1 = input_6.next(); !input_6_1.done; input_6_1 = input_6.next()) {\n      var entry = input_6_1.value;\n      var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_6_1) {\n    e_6 = {\n      error: e_6_1\n    };\n  } finally {\n    try {\n      if (input_6_1 && !input_6_1.done && (_a = input_6.return)) _a.call(input_6);\n    } finally {\n      if (e_6) throw e_6.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n  var e_7, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_7 = __values(input), input_7_1 = input_7.next(); !input_7_1.done; input_7_1 = input_7.next()) {\n      var entry = input_7_1.value;\n      var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_7_1) {\n    e_7 = {\n      error: e_7_1\n    };\n  } finally {\n    try {\n      if (input_7_1 && !input_7_1.done && (_a = input_7.return)) _a.call(input_7);\n    } finally {\n      if (e_7) throw e_7.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlFilterRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n\n  if (input.Name !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\"));\n  }\n\n  if (input.Value !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n  var e_8, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_8 = __values(input), input_8_1 = input_8.next(); !input_8_1.done; input_8_1 = input_8.next()) {\n      var entry = input_8_1.value;\n      var node = serializeAws_restXmlFilterRule(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_8_1) {\n    e_8 = {\n      error: e_8_1\n    };\n  } finally {\n    try {\n      if (input_8_1 && !input_8_1.done && (_a = input_8.return)) _a.call(input_8);\n    } finally {\n      if (e_8) throw e_8.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n\n  if (input.Tier !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n\n  if (input.Grantee !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\"));\n  }\n\n  if (input.Permission !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrantee = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n  bodyNode.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n\n  if (input.DisplayName !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\"));\n  }\n\n  if (input.EmailAddress !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\"));\n  }\n\n  if (input.ID !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n  }\n\n  if (input.Type !== undefined) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n\n  if (input.URI !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrants = function (input, context) {\n  var e_9, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_9 = __values(input), input_9_1 = input_9.next(); !input_9_1.done; input_9_1 = input_9.next()) {\n      var entry = input_9_1.value;\n      var node = serializeAws_restXmlGrant(entry, context);\n      collectedNodes.push(node.withName(\"Grant\"));\n    }\n  } catch (e_9_1) {\n    e_9 = {\n      error: e_9_1\n    };\n  } finally {\n    try {\n      if (input_9_1 && !input_9_1.done && (_a = input_9.return)) _a.call(input_9);\n    } finally {\n      if (e_9) throw e_9.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n\n  if (input.Suffix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n\n  if (input.CSV !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\"));\n  }\n\n  if (input.CompressionType !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\"));\n  }\n\n  if (input.JSON !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\"));\n  }\n\n  if (input.Parquet !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n\n  if (input.Destination !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\"));\n  }\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.Id !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\"));\n  }\n\n  if (input.IncludedObjectVersions !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\"));\n  }\n\n  if (input.IsEnabled !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\"));\n  }\n\n  if (input.OptionalFields !== undefined) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n\n  if (input.Schedule !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n\n  if (input.S3BucketDestination !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n\n  if (input.SSEKMS !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\"));\n  }\n\n  if (input.SSES3 !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n  var e_10, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_10 = __values(input), input_10_1 = input_10.next(); !input_10_1.done; input_10_1 = input_10.next()) {\n      var entry = input_10_1.value;\n      var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n      collectedNodes.push(node.withName(\"Field\"));\n    }\n  } catch (e_10_1) {\n    e_10 = {\n      error: e_10_1\n    };\n  } finally {\n    try {\n      if (input_10_1 && !input_10_1.done && (_a = input_10.return)) _a.call(input_10);\n    } finally {\n      if (e_10) throw e_10.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n\n  if (input.AccountId !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\"));\n  }\n\n  if (input.Bucket !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\"));\n  }\n\n  if (input.Encryption !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\"));\n  }\n\n  if (input.Format !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n\n  if (input.Frequency !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n\n  if (input.Type !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n\n  if (input.RecordDelimiter !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n\n  if (input.Events !== undefined) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.Id !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\"));\n  }\n\n  if (input.LambdaFunctionArn !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n  var e_11, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_11 = __values(input), input_11_1 = input_11.next(); !input_11_1.done; input_11_1 = input_11.next()) {\n      var entry = input_11_1.value;\n      var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_11_1) {\n    e_11 = {\n      error: e_11_1\n    };\n  } finally {\n    try {\n      if (input_11_1 && !input_11_1.done && (_a = input_11.return)) _a.call(input_11);\n    } finally {\n      if (e_11) throw e_11.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n\n  if (input.Date !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\"));\n  }\n\n  if (input.Days !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\"));\n  }\n\n  if (input.ExpiredObjectDeleteMarker !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n\n  if (input.AbortIncompleteMultipartUpload !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\"));\n  }\n\n  if (input.Expiration !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\"));\n  }\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.ID !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n  }\n\n  if (input.NoncurrentVersionExpiration !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\"));\n  }\n\n  if (input.NoncurrentVersionTransitions !== undefined) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  if (input.Transitions !== undefined) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n\n  if (input.And !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlLifecycleRuleAndOperator(input.And, context).withName(\"And\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tag !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n  var e_12, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_12 = __values(input), input_12_1 = input_12.next(); !input_12_1.done; input_12_1 = input_12.next()) {\n      var entry = input_12_1.value;\n      var node = serializeAws_restXmlLifecycleRule(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_12_1) {\n    e_12 = {\n      error: e_12_1\n    };\n  } finally {\n    try {\n      if (input_12_1 && !input_12_1.done && (_a = input_12.return)) _a.call(input_12);\n    } finally {\n      if (e_12) throw e_12.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n\n  if (input.TargetBucket !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\"));\n  }\n\n  if (input.TargetGrants !== undefined) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n\n  if (input.TargetPrefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n\n  if (input.Name !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\"));\n  }\n\n  if (input.Value !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetrics = function (input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n\n  if (input.EventThreshold !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\"));\n  }\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.Id !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n\n  if (input.And !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlMetricsAndOperator(input.And, context).withName(\"And\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tag !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n\n  if (input.NoncurrentDays !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n\n  if (input.NoncurrentDays !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\"));\n  }\n\n  if (input.StorageClass !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n  var e_13, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_13 = __values(input), input_13_1 = input_13.next(); !input_13_1.done; input_13_1 = input_13.next()) {\n      var entry = input_13_1.value;\n      var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_13_1) {\n    e_13 = {\n      error: e_13_1\n    };\n  } finally {\n    try {\n      if (input_13_1 && !input_13_1.done && (_a = input_13.return)) _a.call(input_13);\n    } finally {\n      if (e_13) throw e_13.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n\n  if (input.LambdaFunctionConfigurations !== undefined) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.QueueConfigurations !== undefined) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.TopicConfigurations !== undefined) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n\n  if (input.Key !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n\n  if (input.Key !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\"));\n  }\n\n  if (input.VersionId !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n  var e_14, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_14 = __values(input), input_14_1 = input_14.next(); !input_14_1.done; input_14_1 = input_14.next()) {\n      var entry = input_14_1.value;\n      var node = serializeAws_restXmlObjectIdentifier(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_14_1) {\n    e_14 = {\n      error: e_14_1\n    };\n  } finally {\n    try {\n      if (input_14_1 && !input_14_1.done && (_a = input_14.return)) _a.call(input_14);\n    } finally {\n      if (e_14) throw e_14.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n\n  if (input.ObjectLockEnabled !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\"));\n  }\n\n  if (input.Rule !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n\n  if (input.Mode !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\"));\n  }\n\n  if (input.RetainUntilDate !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n\n  if (input.DefaultRetention !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n\n  if (input.S3 !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n\n  if (input.CSV !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\"));\n  }\n\n  if (input.JSON !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwner = function (input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n\n  if (input.DisplayName !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\"));\n  }\n\n  if (input.ID !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlParquetInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n\n  if (input.BlockPublicAcls !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\"));\n  }\n\n  if (input.BlockPublicPolicy !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\"));\n  }\n\n  if (input.IgnorePublicAcls !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\"));\n  }\n\n  if (input.RestrictPublicBuckets !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n\n  if (input.Events !== undefined) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.Id !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\"));\n  }\n\n  if (input.QueueArn !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n  var e_15, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_15 = __values(input), input_15_1 = input_15.next(); !input_15_1.done; input_15_1 = input_15.next()) {\n      var entry = input_15_1.value;\n      var node = serializeAws_restXmlQueueConfiguration(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_15_1) {\n    e_15 = {\n      error: e_15_1\n    };\n  } finally {\n    try {\n      if (input_15_1 && !input_15_1.done && (_a = input_15.return)) _a.call(input_15);\n    } finally {\n      if (e_15) throw e_15.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlRedirect = function (input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n\n  if (input.HostName !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\"));\n  }\n\n  if (input.HttpRedirectCode !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\"));\n  }\n\n  if (input.Protocol !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\"));\n  }\n\n  if (input.ReplaceKeyPrefixWith !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\"));\n  }\n\n  if (input.ReplaceKeyWith !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n\n  if (input.HostName !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\"));\n  }\n\n  if (input.Protocol !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n\n  if (input.Role !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\"));\n  }\n\n  if (input.Rules !== undefined) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n\n  if (input.DeleteMarkerReplication !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\"));\n  }\n\n  if (input.Destination !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\"));\n  }\n\n  if (input.ExistingObjectReplication !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\"));\n  }\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.ID !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Priority !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\"));\n  }\n\n  if (input.SourceSelectionCriteria !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\"));\n  }\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n\n  if (input.And !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlReplicationRuleAndOperator(input.And, context).withName(\"And\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.Tag !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n  var e_16, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_16 = __values(input), input_16_1 = input_16.next(); !input_16_1.done; input_16_1 = input_16.next()) {\n      var entry = input_16_1.value;\n      var node = serializeAws_restXmlReplicationRule(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_16_1) {\n    e_16 = {\n      error: e_16_1\n    };\n  } finally {\n    try {\n      if (input_16_1 && !input_16_1.done && (_a = input_16.return)) _a.call(input_16);\n    } finally {\n      if (e_16) throw e_16.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  if (input.Time !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n\n  if (input.Minutes !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n\n  if (input.Payer !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n\n  if (input.Enabled !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n\n  if (input.Days !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\"));\n  }\n\n  if (input.Description !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\"));\n  }\n\n  if (input.GlacierJobParameters !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\"));\n  }\n\n  if (input.OutputLocation !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\"));\n  }\n\n  if (input.SelectParameters !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\"));\n  }\n\n  if (input.Tier !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\"));\n  }\n\n  if (input.Type !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n\n  if (input.Condition !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\"));\n  }\n\n  if (input.Redirect !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n  var e_17, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_17 = __values(input), input_17_1 = input_17.next(); !input_17_1.done; input_17_1 = input_17.next()) {\n      var entry = input_17_1.value;\n      var node = serializeAws_restXmlRoutingRule(entry, context);\n      collectedNodes.push(node.withName(\"RoutingRule\"));\n    }\n  } catch (e_17_1) {\n    e_17 = {\n      error: e_17_1\n    };\n  } finally {\n    try {\n      if (input_17_1 && !input_17_1.done && (_a = input_17.return)) _a.call(input_17);\n    } finally {\n      if (e_17) throw e_17.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n\n  if (input.FilterRules !== undefined) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlS3Location = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n\n  if (input.AccessControlList !== undefined) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n\n  if (input.BucketName !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\"));\n  }\n\n  if (input.CannedACL !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\"));\n  }\n\n  if (input.Encryption !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\"));\n  }\n\n  if (input.Prefix !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\"));\n  }\n\n  if (input.StorageClass !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\"));\n  }\n\n  if (input.Tagging !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\"));\n  }\n\n  if (input.UserMetadata !== undefined) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n\n  if (input.KeyId !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSES3 = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlScanRange = function (input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n\n  if (input.End !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\"));\n  }\n\n  if (input.Start !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n\n  if (input.Expression !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\"));\n  }\n\n  if (input.ExpressionType !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\"));\n  }\n\n  if (input.InputSerialization !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\"));\n  }\n\n  if (input.OutputSerialization !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n\n  if (input.KMSMasterKeyID !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\"));\n  }\n\n  if (input.SSEAlgorithm !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n\n  if (input.Rules !== undefined) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n\n  if (input.ApplyServerSideEncryptionByDefault !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n  var e_18, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_18 = __values(input), input_18_1 = input_18.next(); !input_18_1.done; input_18_1 = input_18.next()) {\n      var entry = input_18_1.value;\n      var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_18_1) {\n    e_18 = {\n      error: e_18_1\n    };\n  } finally {\n    try {\n      if (input_18_1 && !input_18_1.done && (_a = input_18.return)) _a.call(input_18);\n    } finally {\n      if (e_18) throw e_18.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n\n  if (input.SseKmsEncryptedObjects !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n\n  if (input.DataExport !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n\n  if (input.Destination !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\"));\n  }\n\n  if (input.OutputSchemaVersion !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTag = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n\n  if (input.Key !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\"));\n  }\n\n  if (input.Value !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagSet = function (input, context) {\n  var e_19, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_19 = __values(input), input_19_1 = input_19.next(); !input_19_1.done; input_19_1 = input_19.next()) {\n      var entry = input_19_1.value;\n      var node = serializeAws_restXmlTag(entry, context);\n      collectedNodes.push(node.withName(\"Tag\"));\n    }\n  } catch (e_19_1) {\n    e_19 = {\n      error: e_19_1\n    };\n  } finally {\n    try {\n      if (input_19_1 && !input_19_1.done && (_a = input_19.return)) _a.call(input_19);\n    } finally {\n      if (e_19) throw e_19.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlTagging = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n\n  if (input.TagSet !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n\n  if (input.Grantee !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\"));\n  }\n\n  if (input.Permission !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n  var e_20, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_20 = __values(input), input_20_1 = input_20.next(); !input_20_1.done; input_20_1 = input_20.next()) {\n      var entry = input_20_1.value;\n      var node = serializeAws_restXmlTargetGrant(entry, context);\n      collectedNodes.push(node.withName(\"Grant\"));\n    }\n  } catch (e_20_1) {\n    e_20 = {\n      error: e_20_1\n    };\n  } finally {\n    try {\n      if (input_20_1 && !input_20_1.done && (_a = input_20.return)) _a.call(input_20);\n    } finally {\n      if (e_20) throw e_20.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n\n  if (input.Events !== undefined) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\"));\n  }\n\n  if (input.Id !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\"));\n  }\n\n  if (input.TopicArn !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n  var e_21, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_21 = __values(input), input_21_1 = input_21.next(); !input_21_1.done; input_21_1 = input_21.next()) {\n      var entry = input_21_1.value;\n      var node = serializeAws_restXmlTopicConfiguration(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_21_1) {\n    e_21 = {\n      error: e_21_1\n    };\n  } finally {\n    try {\n      if (input_21_1 && !input_21_1.done && (_a = input_21.return)) _a.call(input_21);\n    } finally {\n      if (e_21) throw e_21.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n\n  if (input.Date !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\"));\n  }\n\n  if (input.Days !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\"));\n  }\n\n  if (input.StorageClass !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTransitionList = function (input, context) {\n  var e_22, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_22 = __values(input), input_22_1 = input_22.next(); !input_22_1.done; input_22_1 = input_22.next()) {\n      var entry = input_22_1.value;\n      var node = serializeAws_restXmlTransition(entry, context);\n      collectedNodes.push(node.withName(\"member\"));\n    }\n  } catch (e_22_1) {\n    e_22 = {\n      error: e_22_1\n    };\n  } finally {\n    try {\n      if (input_22_1 && !input_22_1.done && (_a = input_22.return)) _a.call(input_22);\n    } finally {\n      if (e_22) throw e_22.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n  var e_23, _a;\n\n  var collectedNodes = [];\n\n  try {\n    for (var input_23 = __values(input), input_23_1 = input_23.next(); !input_23_1.done; input_23_1 = input_23.next()) {\n      var entry = input_23_1.value;\n      var node = serializeAws_restXmlMetadataEntry(entry, context);\n      collectedNodes.push(node.withName(\"MetadataEntry\"));\n    }\n  } catch (e_23_1) {\n    e_23 = {\n      error: e_23_1\n    };\n  } finally {\n    try {\n      if (input_23_1 && !input_23_1.done && (_a = input_23.return)) _a.call(input_23);\n    } finally {\n      if (e_23) throw e_23.error;\n    }\n  }\n\n  return collectedNodes;\n};\n\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n\n  if (input.MFADelete !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\"));\n  }\n\n  if (input.Status !== undefined) {\n    bodyNode.addChildNode(new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\"));\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n\n  if (input.ErrorDocument !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\"));\n  }\n\n  if (input.IndexDocument !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\"));\n  }\n\n  if (input.RedirectAllRequestsTo !== undefined) {\n    bodyNode.addChildNode(serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\"));\n  }\n\n  if (input.RoutingRules !== undefined) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n\n  return bodyNode;\n};\n\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n  var contents = {\n    __type: \"AbortIncompleteMultipartUpload\",\n    DaysAfterInitiation: undefined\n  };\n\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n  var contents = {\n    __type: \"AccessControlTranslation\",\n    Owner: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = output[\"Owner\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(entry);\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(entry);\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(entry);\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n    contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsConfiguration\",\n    Filter: undefined,\n    Id: undefined,\n    StorageClassAnalysis: undefined\n  };\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlAnalyticsConfiguration(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsExportDestination\",\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsS3BucketDestination\",\n    Bucket: undefined,\n    BucketAccountId: undefined,\n    Format: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = output[\"BucketAccountId\"];\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBucket = function (output, context) {\n  var contents = {\n    __type: \"Bucket\",\n    CreationDate: undefined,\n    Name: undefined\n  };\n\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = new Date(output[\"CreationDate\"]);\n  }\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBuckets = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlBucket(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n  var contents = {\n    __type: \"CORSRule\",\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n\n  if (output[\"AllowedHeader\"] !== undefined) {\n    var wrappedItem = output[\"AllowedHeader\"] instanceof Array ? output[\"AllowedHeader\"] : [output[\"AllowedHeader\"]];\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(wrappedItem, context);\n  }\n\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n\n  if (output[\"AllowedMethod\"] !== undefined) {\n    var wrappedItem = output[\"AllowedMethod\"] instanceof Array ? output[\"AllowedMethod\"] : [output[\"AllowedMethod\"]];\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(wrappedItem, context);\n  }\n\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    var wrappedItem = output[\"AllowedOrigin\"] instanceof Array ? output[\"AllowedOrigin\"] : [output[\"AllowedOrigin\"]];\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(wrappedItem, context);\n  }\n\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n\n  if (output[\"ExposeHeader\"] !== undefined) {\n    var wrappedItem = output[\"ExposeHeader\"] instanceof Array ? output[\"ExposeHeader\"] : [output[\"ExposeHeader\"]];\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(wrappedItem, context);\n  }\n\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlCORSRule(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n  var contents = {\n    __type: \"CommonPrefix\",\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlCommonPrefix(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlCondition = function (output, context) {\n  var contents = {\n    __type: \"Condition\",\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n  }\n\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n  var contents = {\n    __type: \"CopyObjectResult\",\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n  var contents = {\n    __type: \"CopyPartResult\",\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n  var contents = {\n    __type: \"DefaultRetention\",\n    Days: undefined,\n    Mode: undefined,\n    Years: undefined\n  };\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = parseInt(output[\"Years\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n  var contents = {\n    __type: \"DeleteMarkerEntry\",\n    IsLatest: undefined,\n    Key: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n  var contents = {\n    __type: \"DeleteMarkerReplication\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlDeleteMarkerEntry(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n  var contents = {\n    __type: \"DeletedObject\",\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined,\n    Key: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n  }\n\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlDeletedObject(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlDestination = function (output, context) {\n  var contents = {\n    __type: \"Destination\",\n    AccessControlTranslation: undefined,\n    Account: undefined,\n    Bucket: undefined,\n    EncryptionConfiguration: undefined,\n    Metrics: undefined,\n    ReplicationTime: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = output[\"Account\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n  var contents = {\n    __type: \"EncryptionConfiguration\",\n    ReplicaKmsKeyID: undefined\n  };\n\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Error = function (output, context) {\n  var contents = {\n    __type: \"Error\",\n    Code: undefined,\n    Key: undefined,\n    Message: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = output[\"Code\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = output[\"Message\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n  var contents = {\n    __type: \"ErrorDocument\",\n    Key: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrors = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXml_Error(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlEventList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(entry);\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n  var contents = {\n    __type: \"ExistingObjectReplication\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(entry);\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n  var contents = {\n    __type: \"FilterRule\",\n    Name: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlFilterRule(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlGrant = function (output, context) {\n  var contents = {\n    __type: \"Grant\",\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrantee = function (output, context) {\n  var contents = {\n    __type: \"Grantee\",\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    Type: undefined,\n    URI: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = output[\"EmailAddress\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = output[\"xsi:type\"];\n  }\n\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = output[\"URI\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrants = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlGrant(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n  var contents = {\n    __type: \"IndexDocument\",\n    Suffix: undefined\n  };\n\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = output[\"Suffix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInitiator = function (output, context) {\n  var contents = {\n    __type: \"Initiator\",\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n  var contents = {\n    __type: \"InventoryConfiguration\",\n    Destination: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    IsEnabled: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n  }\n\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n  }\n\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    var wrappedItem = output[\"OptionalFields\"][\"Field\"] instanceof Array ? output[\"OptionalFields\"][\"Field\"] : [output[\"OptionalFields\"][\"Field\"]];\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(wrappedItem, context);\n  }\n\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlInventoryConfiguration(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n  var contents = {\n    __type: \"InventoryDestination\",\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n  var contents = {\n    __type: \"InventoryEncryption\",\n    SSEKMS: undefined,\n    SSES3: undefined\n  };\n\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n  var contents = {\n    __type: \"InventoryFilter\",\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(entry);\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n  var contents = {\n    __type: \"InventoryS3BucketDestination\",\n    AccountId: undefined,\n    Bucket: undefined,\n    Encryption: undefined,\n    Format: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = output[\"AccountId\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n  var contents = {\n    __type: \"InventorySchedule\",\n    Frequency: undefined\n  };\n\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = output[\"Frequency\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n  var contents = {\n    __type: \"LambdaFunctionConfiguration\",\n    Events: undefined,\n    Filter: undefined,\n    Id: undefined,\n    LambdaFunctionArn: undefined\n  };\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    var wrappedItem = output[\"Event\"] instanceof Array ? output[\"Event\"] : [output[\"Event\"]];\n    contents.Events = deserializeAws_restXmlEventList(wrappedItem, context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = output[\"CloudFunction\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlLambdaFunctionConfiguration(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n  var contents = {\n    __type: \"LifecycleExpiration\",\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n  var contents = {\n    __type: \"LifecycleRule\",\n    AbortIncompleteMultipartUpload: undefined,\n    Expiration: undefined,\n    Filter: undefined,\n    ID: undefined,\n    NoncurrentVersionExpiration: undefined,\n    NoncurrentVersionTransitions: undefined,\n    Prefix: undefined,\n    Status: undefined,\n    Transitions: undefined\n  };\n\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    var wrappedItem = output[\"NoncurrentVersionTransition\"] instanceof Array ? output[\"NoncurrentVersionTransition\"] : [output[\"NoncurrentVersionTransition\"]];\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(wrappedItem, context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n\n  if (output[\"Transition\"] !== undefined) {\n    var wrappedItem = output[\"Transition\"] instanceof Array ? output[\"Transition\"] : [output[\"Transition\"]];\n    contents.Transitions = deserializeAws_restXmlTransitionList(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n  var contents = {\n    __type: \"LifecycleRuleAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n    contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n  var contents = {\n    __type: \"LifecycleRuleFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlLifecycleRule(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n  var contents = {\n    __type: \"LoggingEnabled\",\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = output[\"TargetBucket\"];\n  }\n\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    var wrappedItem = output[\"TargetGrants\"][\"Grant\"] instanceof Array ? output[\"TargetGrants\"][\"Grant\"] : [output[\"TargetGrants\"][\"Grant\"]];\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(wrappedItem, context);\n  }\n\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = output[\"TargetPrefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetrics = function (output, context) {\n  var contents = {\n    __type: \"Metrics\",\n    EventThreshold: undefined,\n    Status: undefined\n  };\n\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n  var contents = {\n    __type: \"MetricsAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n    contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n  var contents = {\n    __type: \"MetricsConfiguration\",\n    Filter: undefined,\n    Id: undefined\n  };\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlMetricsConfiguration(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n  var contents = {\n    __type: \"MetricsFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n  var contents = {\n    __type: \"MultipartUpload\",\n    Initiated: undefined,\n    Initiator: undefined,\n    Key: undefined,\n    Owner: undefined,\n    StorageClass: undefined,\n    UploadId: undefined\n  };\n\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = new Date(output[\"Initiated\"]);\n  }\n\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = output[\"UploadId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlMultipartUpload(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n  var contents = {\n    __type: \"NoncurrentVersionExpiration\",\n    NoncurrentDays: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n  var contents = {\n    __type: \"NoncurrentVersionTransition\",\n    NoncurrentDays: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlNoncurrentVersionTransition(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n  var contents = {\n    __type: \"NotificationConfigurationFilter\",\n    Key: undefined\n  };\n\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Object = function (output, context) {\n  var contents = {\n    __type: \"Object\",\n    ETag: undefined,\n    Key: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n    Size: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXml_Object(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockConfiguration\",\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockLegalHold\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockRetention\",\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockRule\",\n    DefaultRetention: undefined\n  };\n\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n  var contents = {\n    __type: \"ObjectVersion\",\n    ETag: undefined,\n    IsLatest: undefined,\n    Key: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlObjectVersion(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlOwner = function (output, context) {\n  var contents = {\n    __type: \"Owner\",\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPart = function (output, context) {\n  var contents = {\n    __type: \"Part\",\n    ETag: undefined,\n    LastModified: undefined,\n    PartNumber: undefined,\n    Size: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = parseInt(output[\"PartNumber\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlParts = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlPart(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n  var contents = {\n    __type: \"PolicyStatus\",\n    IsPublic: undefined\n  };\n\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = output[\"IsPublic\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n  var contents = {\n    __type: \"PublicAccessBlockConfiguration\",\n    BlockPublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    IgnorePublicAcls: undefined,\n    RestrictPublicBuckets: undefined\n  };\n\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n  }\n\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n  }\n\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n  }\n\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n  var contents = {\n    __type: \"QueueConfiguration\",\n    Events: undefined,\n    Filter: undefined,\n    Id: undefined,\n    QueueArn: undefined\n  };\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    var wrappedItem = output[\"Event\"] instanceof Array ? output[\"Event\"] : [output[\"Event\"]];\n    contents.Events = deserializeAws_restXmlEventList(wrappedItem, context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = output[\"Queue\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlQueueConfiguration(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirect = function (output, context) {\n  var contents = {\n    __type: \"Redirect\",\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n  }\n\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n  var contents = {\n    __type: \"RedirectAllRequestsTo\",\n    HostName: undefined,\n    Protocol: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n  var contents = {\n    __type: \"ReplicationConfiguration\",\n    Role: undefined,\n    Rules: undefined\n  };\n\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = output[\"Role\"];\n  }\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    var wrappedItem = output[\"Rule\"] instanceof Array ? output[\"Rule\"] : [output[\"Rule\"]];\n    contents.Rules = deserializeAws_restXmlReplicationRules(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n  var contents = {\n    __type: \"ReplicationRule\",\n    DeleteMarkerReplication: undefined,\n    Destination: undefined,\n    ExistingObjectReplication: undefined,\n    Filter: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Priority: undefined,\n    SourceSelectionCriteria: undefined,\n    Status: undefined\n  };\n\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = parseInt(output[\"Priority\"]);\n  }\n\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n  var contents = {\n    __type: \"ReplicationRuleAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n    contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n  var contents = {\n    __type: \"ReplicationRuleFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlReplicationRule(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n  var contents = {\n    __type: \"ReplicationTime\",\n    Status: undefined,\n    Time: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n  var contents = {\n    __type: \"ReplicationTimeValue\",\n    Minutes: undefined\n  };\n\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = parseInt(output[\"Minutes\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n  var contents = {\n    __type: \"RoutingRule\",\n    Condition: undefined,\n    Redirect: undefined\n  };\n\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlRoutingRule(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n  var contents = {\n    __type: \"S3KeyFilter\",\n    FilterRules: undefined\n  };\n\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n\n  if (output[\"FilterRule\"] !== undefined) {\n    var wrappedItem = output[\"FilterRule\"] instanceof Array ? output[\"FilterRule\"] : [output[\"FilterRule\"]];\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n  var contents = {\n    __type: \"SSEKMS\",\n    KeyId: undefined\n  };\n\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = output[\"KeyId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n  var contents = {\n    __type: \"SSES3\"\n  };\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n  var contents = {\n    __type: \"ServerSideEncryptionByDefault\",\n    KMSMasterKeyID: undefined,\n    SSEAlgorithm: undefined\n  };\n\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n  }\n\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n  var contents = {\n    __type: \"ServerSideEncryptionConfiguration\",\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    var wrappedItem = output[\"Rule\"] instanceof Array ? output[\"Rule\"] : [output[\"Rule\"]];\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(wrappedItem, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n  var contents = {\n    __type: \"ServerSideEncryptionRule\",\n    ApplyServerSideEncryptionByDefault: undefined\n  };\n\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlServerSideEncryptionRule(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n  var contents = {\n    __type: \"SourceSelectionCriteria\",\n    SseKmsEncryptedObjects: undefined\n  };\n\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n  var contents = {\n    __type: \"SseKmsEncryptedObjects\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n  var contents = {\n    __type: \"StorageClassAnalysis\",\n    DataExport: undefined\n  };\n\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n  var contents = {\n    __type: \"StorageClassAnalysisDataExport\",\n    Destination: undefined,\n    OutputSchemaVersion: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTag = function (output, context) {\n  var contents = {\n    __type: \"Tag\",\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTagSet = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlTag(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n  var contents = {\n    __type: \"TargetGrant\",\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlTargetGrant(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n  var contents = {\n    __type: \"TopicConfiguration\",\n    Events: undefined,\n    Filter: undefined,\n    Id: undefined,\n    TopicArn: undefined\n  };\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    var wrappedItem = output[\"Event\"] instanceof Array ? output[\"Event\"] : [output[\"Event\"]];\n    contents.Events = deserializeAws_restXmlEventList(wrappedItem, context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = output[\"Topic\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlTopicConfiguration(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeAws_restXmlTransition = function (output, context) {\n  var contents = {\n    __type: \"Transition\",\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n  var contents = [];\n  (output || []).map(function (entry) {\n    contents.push(deserializeAws_restXmlTransition(entry, context));\n  });\n  return contents;\n};\n\nvar deserializeMetadata = function (output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar decodeEscapedXML = function (str) {\n  return str.replace(/&amp;/g, \"&\").replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"').replace(/&gt;/g, \">\").replace(/&lt;/g, \"<\");\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        tagValueProcessor: function (val, tagName) {\n          return decodeEscapedXML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n\n      return parsedObjToReturn;\n    }\n\n    return {};\n  });\n};\n\nvar loadRestXmlErrorCode = function (output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["../../../protocols/Aws_restXml.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport function serializeAws_restXmlAbortMultipartUploadCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"AbortMultipartUpload\"\n            };\n            if (input.UploadId !== undefined) {\n                query[\"uploadId\"] = input.UploadId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlCompleteMultipartUploadCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {};\n            if (input.UploadId !== undefined) {\n                query[\"uploadId\"] = input.UploadId;\n            }\n            if (input.MultipartUpload !== undefined) {\n                contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlCopyObjectCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.ACL !== undefined) {\n                headers[\"x-amz-acl\"] = input.ACL;\n            }\n            if (input.CacheControl !== undefined) {\n                headers[\"Cache-Control\"] = input.CacheControl;\n            }\n            if (input.ContentDisposition !== undefined) {\n                headers[\"Content-Disposition\"] = input.ContentDisposition;\n            }\n            if (input.ContentEncoding !== undefined) {\n                headers[\"Content-Encoding\"] = input.ContentEncoding;\n            }\n            if (input.ContentLanguage !== undefined) {\n                headers[\"Content-Language\"] = input.ContentLanguage;\n            }\n            if (input.ContentType !== undefined) {\n                headers[\"Content-Type\"] = input.ContentType;\n            }\n            if (input.CopySource !== undefined) {\n                headers[\"x-amz-copy-source\"] = input.CopySource;\n            }\n            if (input.CopySourceIfMatch !== undefined) {\n                headers[\"x-amz-copy-source-if-match\"] = input.CopySourceIfMatch;\n            }\n            if (input.CopySourceIfModifiedSince !== undefined) {\n                headers[\"x-amz-copy-source-if-modified-since\"] = __dateToUtcString(input.CopySourceIfModifiedSince).toString();\n            }\n            if (input.CopySourceIfNoneMatch !== undefined) {\n                headers[\"x-amz-copy-source-if-none-match\"] = input.CopySourceIfNoneMatch;\n            }\n            if (input.CopySourceIfUnmodifiedSince !== undefined) {\n                headers[\"x-amz-copy-source-if-unmodified-since\"] = __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString();\n            }\n            if (input.CopySourceSSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-copy-source-server-side-encryption-customer-algorithm\"] =\n                    input.CopySourceSSECustomerAlgorithm;\n            }\n            if (input.CopySourceSSECustomerKey !== undefined) {\n                headers[\"x-amz-copy-source-server-side-encryption-customer-key\"] =\n                    input.CopySourceSSECustomerKey;\n            }\n            if (input.CopySourceSSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-copy-source-server-side-encryption-customer-key-MD5\"] =\n                    input.CopySourceSSECustomerKeyMD5;\n            }\n            if (input.Expires !== undefined) {\n                headers[\"Expires\"] = __dateToUtcString(input.Expires).toString();\n            }\n            if (input.GrantFullControl !== undefined) {\n                headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n            }\n            if (input.GrantRead !== undefined) {\n                headers[\"x-amz-grant-read\"] = input.GrantRead;\n            }\n            if (input.GrantReadACP !== undefined) {\n                headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n            }\n            if (input.GrantWriteACP !== undefined) {\n                headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n            }\n            if (input.MetadataDirective !== undefined) {\n                headers[\"x-amz-metadata-directive\"] = input.MetadataDirective;\n            }\n            if (input.ObjectLockLegalHoldStatus !== undefined) {\n                headers[\"x-amz-object-lock-legal-hold\"] = input.ObjectLockLegalHoldStatus;\n            }\n            if (input.ObjectLockMode !== undefined) {\n                headers[\"x-amz-object-lock-mode\"] = input.ObjectLockMode;\n            }\n            if (input.ObjectLockRetainUntilDate !== undefined) {\n                headers[\"x-amz-object-lock-retain-until-date\"] = (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            if (input.SSEKMSEncryptionContext !== undefined) {\n                headers[\"x-amz-server-side-encryption-context\"] =\n                    input.SSEKMSEncryptionContext;\n            }\n            if (input.SSEKMSKeyId !== undefined) {\n                headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] = input.SSEKMSKeyId;\n            }\n            if (input.ServerSideEncryption !== undefined) {\n                headers[\"x-amz-server-side-encryption\"] = input.ServerSideEncryption;\n            }\n            if (input.StorageClass !== undefined) {\n                headers[\"x-amz-storage-class\"] = input.StorageClass;\n            }\n            if (input.Tagging !== undefined) {\n                headers[\"x-amz-tagging\"] = input.Tagging;\n            }\n            if (input.TaggingDirective !== undefined) {\n                headers[\"x-amz-tagging-directive\"] = input.TaggingDirective;\n            }\n            if (input.WebsiteRedirectLocation !== undefined) {\n                headers[\"x-amz-website-redirect-location\"] = input.WebsiteRedirectLocation;\n            }\n            if (input.Metadata !== undefined) {\n                Object.keys(input.Metadata).forEach(function (suffix) {\n                    headers[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n                });\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"CopyObject\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlCreateBucketCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ACL !== undefined) {\n                headers[\"x-amz-acl\"] = input.ACL;\n            }\n            if (input.GrantFullControl !== undefined) {\n                headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n            }\n            if (input.GrantRead !== undefined) {\n                headers[\"x-amz-grant-read\"] = input.GrantRead;\n            }\n            if (input.GrantReadACP !== undefined) {\n                headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n            }\n            if (input.GrantWrite !== undefined) {\n                headers[\"x-amz-grant-write\"] = input.GrantWrite;\n            }\n            if (input.GrantWriteACP !== undefined) {\n                headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n            }\n            if (input.ObjectLockEnabledForBucket !== undefined) {\n                headers[\"x-amz-bucket-object-lock-enabled\"] = input.ObjectLockEnabledForBucket.toString();\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.CreateBucketConfiguration !== undefined) {\n                contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlCreateMultipartUploadCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.ACL !== undefined) {\n                headers[\"x-amz-acl\"] = input.ACL;\n            }\n            if (input.CacheControl !== undefined) {\n                headers[\"Cache-Control\"] = input.CacheControl;\n            }\n            if (input.ContentDisposition !== undefined) {\n                headers[\"Content-Disposition\"] = input.ContentDisposition;\n            }\n            if (input.ContentEncoding !== undefined) {\n                headers[\"Content-Encoding\"] = input.ContentEncoding;\n            }\n            if (input.ContentLanguage !== undefined) {\n                headers[\"Content-Language\"] = input.ContentLanguage;\n            }\n            if (input.ContentType !== undefined) {\n                headers[\"Content-Type\"] = input.ContentType;\n            }\n            if (input.Expires !== undefined) {\n                headers[\"Expires\"] = __dateToUtcString(input.Expires).toString();\n            }\n            if (input.GrantFullControl !== undefined) {\n                headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n            }\n            if (input.GrantRead !== undefined) {\n                headers[\"x-amz-grant-read\"] = input.GrantRead;\n            }\n            if (input.GrantReadACP !== undefined) {\n                headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n            }\n            if (input.GrantWriteACP !== undefined) {\n                headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n            }\n            if (input.ObjectLockLegalHoldStatus !== undefined) {\n                headers[\"x-amz-object-lock-legal-hold\"] = input.ObjectLockLegalHoldStatus;\n            }\n            if (input.ObjectLockMode !== undefined) {\n                headers[\"x-amz-object-lock-mode\"] = input.ObjectLockMode;\n            }\n            if (input.ObjectLockRetainUntilDate !== undefined) {\n                headers[\"x-amz-object-lock-retain-until-date\"] = (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            if (input.SSEKMSEncryptionContext !== undefined) {\n                headers[\"x-amz-server-side-encryption-context\"] =\n                    input.SSEKMSEncryptionContext;\n            }\n            if (input.SSEKMSKeyId !== undefined) {\n                headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] = input.SSEKMSKeyId;\n            }\n            if (input.ServerSideEncryption !== undefined) {\n                headers[\"x-amz-server-side-encryption\"] = input.ServerSideEncryption;\n            }\n            if (input.StorageClass !== undefined) {\n                headers[\"x-amz-storage-class\"] = input.StorageClass;\n            }\n            if (input.Tagging !== undefined) {\n                headers[\"x-amz-tagging\"] = input.Tagging;\n            }\n            if (input.WebsiteRedirectLocation !== undefined) {\n                headers[\"x-amz-website-redirect-location\"] = input.WebsiteRedirectLocation;\n            }\n            if (input.Metadata !== undefined) {\n                Object.keys(input.Metadata).forEach(function (suffix) {\n                    headers[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n                });\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                uploads: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                analytics: \"\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketCorsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                cors: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketEncryptionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                encryption: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketInventoryConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                inventory: \"\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketLifecycleCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                lifecycle: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketMetricsConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                metrics: \"\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketPolicyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                policy: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketReplicationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                replication: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketTaggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                tagging: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteBucketWebsiteCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                website: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteObjectCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.BypassGovernanceRetention !== undefined) {\n                headers[\"x-amz-bypass-governance-retention\"] = input.BypassGovernanceRetention.toString();\n            }\n            if (input.MFA !== undefined) {\n                headers[\"x-amz-mfa\"] = input.MFA;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"DeleteObject\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteObjectTaggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                tagging: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeleteObjectsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.BypassGovernanceRetention !== undefined) {\n                headers[\"x-amz-bypass-governance-retention\"] = input.BypassGovernanceRetention.toString();\n            }\n            if (input.MFA !== undefined) {\n                headers[\"x-amz-mfa\"] = input.MFA;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                delete: \"\"\n            };\n            if (input.Delete !== undefined) {\n                contents = serializeAws_restXmlDelete(input.Delete, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlDeletePublicAccessBlockCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                publicAccessBlock: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                accelerate: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketAclCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                acl: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketAnalyticsConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                analytics: \"\",\n                \"x-id\": \"GetBucketAnalyticsConfiguration\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketCorsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                cors: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketEncryptionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                encryption: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                inventory: \"\",\n                \"x-id\": \"GetBucketInventoryConfiguration\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketLifecycleConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                lifecycle: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketLocationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                location: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketLoggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                logging: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketMetricsConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                metrics: \"\",\n                \"x-id\": \"GetBucketMetricsConfiguration\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketNotificationConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                notification: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketPolicyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                policy: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketPolicyStatusCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                policyStatus: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketReplicationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                replication: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketRequestPaymentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                requestPayment: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketTaggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                tagging: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketVersioningCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                versioning: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetBucketWebsiteCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                website: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.IfMatch !== undefined) {\n                headers[\"If-Match\"] = input.IfMatch;\n            }\n            if (input.IfModifiedSince !== undefined) {\n                headers[\"If-Modified-Since\"] = __dateToUtcString(input.IfModifiedSince).toString();\n            }\n            if (input.IfNoneMatch !== undefined) {\n                headers[\"If-None-Match\"] = input.IfNoneMatch;\n            }\n            if (input.IfUnmodifiedSince !== undefined) {\n                headers[\"If-Unmodified-Since\"] = __dateToUtcString(input.IfUnmodifiedSince).toString();\n            }\n            if (input.Range !== undefined) {\n                headers[\"Range\"] = input.Range;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"GetObject\"\n            };\n            if (input.PartNumber !== undefined) {\n                query[\"partNumber\"] = input.PartNumber.toString();\n            }\n            if (input.ResponseCacheControl !== undefined) {\n                query[\"response-cache-control\"] = input.ResponseCacheControl;\n            }\n            if (input.ResponseContentDisposition !== undefined) {\n                query[\"response-content-disposition\"] = input.ResponseContentDisposition;\n            }\n            if (input.ResponseContentEncoding !== undefined) {\n                query[\"response-content-encoding\"] = input.ResponseContentEncoding;\n            }\n            if (input.ResponseContentLanguage !== undefined) {\n                query[\"response-content-language\"] = input.ResponseContentLanguage;\n            }\n            if (input.ResponseContentType !== undefined) {\n                query[\"response-content-type\"] = input.ResponseContentType;\n            }\n            if (input.ResponseExpires !== undefined) {\n                query[\"response-expires\"] = (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectAclCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                acl: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectLegalHoldCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"legal-hold\": \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectLockConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                \"object-lock\": \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectRetentionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                retention: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectTaggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                tagging: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetObjectTorrentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                torrent: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlGetPublicAccessBlockCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                publicAccessBlock: \"\"\n            };\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlHeadBucketCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"HEAD\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlHeadObjectCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.IfMatch !== undefined) {\n                headers[\"If-Match\"] = input.IfMatch;\n            }\n            if (input.IfModifiedSince !== undefined) {\n                headers[\"If-Modified-Since\"] = __dateToUtcString(input.IfModifiedSince).toString();\n            }\n            if (input.IfNoneMatch !== undefined) {\n                headers[\"If-None-Match\"] = input.IfNoneMatch;\n            }\n            if (input.IfUnmodifiedSince !== undefined) {\n                headers[\"If-Unmodified-Since\"] = __dateToUtcString(input.IfUnmodifiedSince).toString();\n            }\n            if (input.Range !== undefined) {\n                headers[\"Range\"] = input.Range;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {};\n            if (input.PartNumber !== undefined) {\n                query[\"partNumber\"] = input.PartNumber.toString();\n            }\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"HEAD\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                analytics: \"\",\n                \"x-id\": \"ListBucketAnalyticsConfigurations\"\n            };\n            if (input.ContinuationToken !== undefined) {\n                query[\"continuation-token\"] = input.ContinuationToken;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                inventory: \"\",\n                \"x-id\": \"ListBucketInventoryConfigurations\"\n            };\n            if (input.ContinuationToken !== undefined) {\n                query[\"continuation-token\"] = input.ContinuationToken;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListBucketMetricsConfigurationsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                metrics: \"\",\n                \"x-id\": \"ListBucketMetricsConfigurations\"\n            };\n            if (input.ContinuationToken !== undefined) {\n                query[\"continuation-token\"] = input.ContinuationToken;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListBucketsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/\";\n            body = \"\";\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListMultipartUploadsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                uploads: \"\"\n            };\n            if (input.Delimiter !== undefined) {\n                query[\"delimiter\"] = input.Delimiter;\n            }\n            if (input.EncodingType !== undefined) {\n                query[\"encoding-type\"] = input.EncodingType;\n            }\n            if (input.KeyMarker !== undefined) {\n                query[\"key-marker\"] = input.KeyMarker;\n            }\n            if (input.MaxUploads !== undefined) {\n                query[\"max-uploads\"] = input.MaxUploads.toString();\n            }\n            if (input.Prefix !== undefined) {\n                query[\"prefix\"] = input.Prefix;\n            }\n            if (input.UploadIdMarker !== undefined) {\n                query[\"upload-id-marker\"] = input.UploadIdMarker;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListObjectVersionsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                versions: \"\"\n            };\n            if (input.Delimiter !== undefined) {\n                query[\"delimiter\"] = input.Delimiter;\n            }\n            if (input.EncodingType !== undefined) {\n                query[\"encoding-type\"] = input.EncodingType;\n            }\n            if (input.KeyMarker !== undefined) {\n                query[\"key-marker\"] = input.KeyMarker;\n            }\n            if (input.MaxKeys !== undefined) {\n                query[\"max-keys\"] = input.MaxKeys.toString();\n            }\n            if (input.Prefix !== undefined) {\n                query[\"prefix\"] = input.Prefix;\n            }\n            if (input.VersionIdMarker !== undefined) {\n                query[\"version-id-marker\"] = input.VersionIdMarker;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListObjectsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {};\n            if (input.Delimiter !== undefined) {\n                query[\"delimiter\"] = input.Delimiter;\n            }\n            if (input.EncodingType !== undefined) {\n                query[\"encoding-type\"] = input.EncodingType;\n            }\n            if (input.Marker !== undefined) {\n                query[\"marker\"] = input.Marker;\n            }\n            if (input.MaxKeys !== undefined) {\n                query[\"max-keys\"] = input.MaxKeys.toString();\n            }\n            if (input.Prefix !== undefined) {\n                query[\"prefix\"] = input.Prefix;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListObjectsV2Command(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                \"list-type\": \"2\"\n            };\n            if (input.ContinuationToken !== undefined) {\n                query[\"continuation-token\"] = input.ContinuationToken;\n            }\n            if (input.Delimiter !== undefined) {\n                query[\"delimiter\"] = input.Delimiter;\n            }\n            if (input.EncodingType !== undefined) {\n                query[\"encoding-type\"] = input.EncodingType;\n            }\n            if (input.FetchOwner !== undefined) {\n                query[\"fetch-owner\"] = input.FetchOwner.toString();\n            }\n            if (input.MaxKeys !== undefined) {\n                query[\"max-keys\"] = input.MaxKeys.toString();\n            }\n            if (input.Prefix !== undefined) {\n                query[\"prefix\"] = input.Prefix;\n            }\n            if (input.StartAfter !== undefined) {\n                query[\"start-after\"] = input.StartAfter;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlListPartsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"ListParts\"\n            };\n            if (input.MaxParts !== undefined) {\n                query[\"max-parts\"] = input.MaxParts.toString();\n            }\n            if (input.PartNumberMarker !== undefined) {\n                query[\"part-number-marker\"] = input.PartNumberMarker.toString();\n            }\n            if (input.UploadId !== undefined) {\n                query[\"uploadId\"] = input.UploadId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                accelerate: \"\"\n            };\n            if (input.AccelerateConfiguration !== undefined) {\n                contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketAclCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ACL !== undefined) {\n                headers[\"x-amz-acl\"] = input.ACL;\n            }\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.GrantFullControl !== undefined) {\n                headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n            }\n            if (input.GrantRead !== undefined) {\n                headers[\"x-amz-grant-read\"] = input.GrantRead;\n            }\n            if (input.GrantReadACP !== undefined) {\n                headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n            }\n            if (input.GrantWrite !== undefined) {\n                headers[\"x-amz-grant-write\"] = input.GrantWrite;\n            }\n            if (input.GrantWriteACP !== undefined) {\n                headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                acl: \"\"\n            };\n            if (input.AccessControlPolicy !== undefined) {\n                contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketAnalyticsConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                analytics: \"\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            if (input.AnalyticsConfiguration !== undefined) {\n                contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketCorsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                cors: \"\"\n            };\n            if (input.CORSConfiguration !== undefined) {\n                contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketEncryptionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                encryption: \"\"\n            };\n            if (input.ServerSideEncryptionConfiguration !== undefined) {\n                contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                inventory: \"\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            if (input.InventoryConfiguration !== undefined) {\n                contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                lifecycle: \"\"\n            };\n            if (input.LifecycleConfiguration !== undefined) {\n                contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketLoggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                logging: \"\"\n            };\n            if (input.BucketLoggingStatus !== undefined) {\n                contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketMetricsConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                metrics: \"\"\n            };\n            if (input.Id !== undefined) {\n                query[\"id\"] = input.Id;\n            }\n            if (input.MetricsConfiguration !== undefined) {\n                contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketNotificationConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                notification: \"\"\n            };\n            if (input.NotificationConfiguration !== undefined) {\n                contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketPolicyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, bodyNode;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ConfirmRemoveSelfBucketAccess !== undefined) {\n                headers[\"x-amz-confirm-remove-self-bucket-access\"] = input.ConfirmRemoveSelfBucketAccess.toString();\n            }\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                policy: \"\"\n            };\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            bodyNode = new __XmlNode(\"PutBucketPolicyRequest\");\n            bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            if (input.Policy !== undefined) {\n                bodyNode.addChildNode(new __XmlNode(\"Policy\")\n                    .addChildNode(new __XmlText(input.Policy))\n                    .withName(\"Policy\"));\n            }\n            body += bodyNode.toString();\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketReplicationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.Token !== undefined) {\n                headers[\"x-amz-bucket-object-lock-token\"] = input.Token;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                replication: \"\"\n            };\n            if (input.ReplicationConfiguration !== undefined) {\n                contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketRequestPaymentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                requestPayment: \"\"\n            };\n            if (input.RequestPaymentConfiguration !== undefined) {\n                contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketTaggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                tagging: \"\"\n            };\n            if (input.Tagging !== undefined) {\n                contents = serializeAws_restXmlTagging(input.Tagging, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketVersioningCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.MFA !== undefined) {\n                headers[\"x-amz-mfa\"] = input.MFA;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                versioning: \"\"\n            };\n            if (input.VersioningConfiguration !== undefined) {\n                contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutBucketWebsiteCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                website: \"\"\n            };\n            if (input.WebsiteConfiguration !== undefined) {\n                contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutObjectCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/octet-stream\";\n            if (input.ACL !== undefined) {\n                headers[\"x-amz-acl\"] = input.ACL;\n            }\n            if (input.CacheControl !== undefined) {\n                headers[\"Cache-Control\"] = input.CacheControl;\n            }\n            if (input.ContentDisposition !== undefined) {\n                headers[\"Content-Disposition\"] = input.ContentDisposition;\n            }\n            if (input.ContentEncoding !== undefined) {\n                headers[\"Content-Encoding\"] = input.ContentEncoding;\n            }\n            if (input.ContentLanguage !== undefined) {\n                headers[\"Content-Language\"] = input.ContentLanguage;\n            }\n            if (input.ContentLength !== undefined) {\n                headers[\"Content-Length\"] = input.ContentLength.toString();\n            }\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.ContentType !== undefined) {\n                headers[\"Content-Type\"] = input.ContentType;\n            }\n            if (input.Expires !== undefined) {\n                headers[\"Expires\"] = __dateToUtcString(input.Expires).toString();\n            }\n            if (input.GrantFullControl !== undefined) {\n                headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n            }\n            if (input.GrantRead !== undefined) {\n                headers[\"x-amz-grant-read\"] = input.GrantRead;\n            }\n            if (input.GrantReadACP !== undefined) {\n                headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n            }\n            if (input.GrantWriteACP !== undefined) {\n                headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n            }\n            if (input.ObjectLockLegalHoldStatus !== undefined) {\n                headers[\"x-amz-object-lock-legal-hold\"] = input.ObjectLockLegalHoldStatus;\n            }\n            if (input.ObjectLockMode !== undefined) {\n                headers[\"x-amz-object-lock-mode\"] = input.ObjectLockMode;\n            }\n            if (input.ObjectLockRetainUntilDate !== undefined) {\n                headers[\"x-amz-object-lock-retain-until-date\"] = (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            if (input.SSEKMSEncryptionContext !== undefined) {\n                headers[\"x-amz-server-side-encryption-context\"] =\n                    input.SSEKMSEncryptionContext;\n            }\n            if (input.SSEKMSKeyId !== undefined) {\n                headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] = input.SSEKMSKeyId;\n            }\n            if (input.ServerSideEncryption !== undefined) {\n                headers[\"x-amz-server-side-encryption\"] = input.ServerSideEncryption;\n            }\n            if (input.StorageClass !== undefined) {\n                headers[\"x-amz-storage-class\"] = input.StorageClass;\n            }\n            if (input.Tagging !== undefined) {\n                headers[\"x-amz-tagging\"] = input.Tagging;\n            }\n            if (input.WebsiteRedirectLocation !== undefined) {\n                headers[\"x-amz-website-redirect-location\"] = input.WebsiteRedirectLocation;\n            }\n            if (input.Metadata !== undefined) {\n                Object.keys(input.Metadata).forEach(function (suffix) {\n                    headers[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n                });\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"PutObject\"\n            };\n            if (input.Body !== undefined) {\n                contents = input.Body;\n                body = contents;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutObjectAclCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ACL !== undefined) {\n                headers[\"x-amz-acl\"] = input.ACL;\n            }\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.GrantFullControl !== undefined) {\n                headers[\"x-amz-grant-full-control\"] = input.GrantFullControl;\n            }\n            if (input.GrantRead !== undefined) {\n                headers[\"x-amz-grant-read\"] = input.GrantRead;\n            }\n            if (input.GrantReadACP !== undefined) {\n                headers[\"x-amz-grant-read-acp\"] = input.GrantReadACP;\n            }\n            if (input.GrantWrite !== undefined) {\n                headers[\"x-amz-grant-write\"] = input.GrantWrite;\n            }\n            if (input.GrantWriteACP !== undefined) {\n                headers[\"x-amz-grant-write-acp\"] = input.GrantWriteACP;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                acl: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            if (input.AccessControlPolicy !== undefined) {\n                contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutObjectLegalHoldCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"legal-hold\": \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            if (input.LegalHold !== undefined) {\n                contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutObjectLockConfigurationCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.Token !== undefined) {\n                headers[\"x-amz-bucket-object-lock-token\"] = input.Token;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                \"object-lock\": \"\"\n            };\n            if (input.ObjectLockConfiguration !== undefined) {\n                contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutObjectRetentionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.BypassGovernanceRetention !== undefined) {\n                headers[\"x-amz-bypass-governance-retention\"] = input.BypassGovernanceRetention.toString();\n            }\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                retention: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            if (input.Retention !== undefined) {\n                contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutObjectTaggingCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                tagging: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            if (input.Tagging !== undefined) {\n                contents = serializeAws_restXmlTagging(input.Tagging, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlPutPublicAccessBlockCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            resolvedPath = \"/{Bucket}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            query = {\n                publicAccessBlock: \"\"\n            };\n            if (input.PublicAccessBlockConfiguration !== undefined) {\n                contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlRestoreObjectCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                restore: \"\"\n            };\n            if (input.VersionId !== undefined) {\n                query[\"versionId\"] = input.VersionId;\n            }\n            if (input.RestoreRequest !== undefined) {\n                contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                body += contents.toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlSelectObjectContentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/xml\";\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                select: \"\",\n                \"select-type\": \"2\"\n            };\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n            bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            if (input.Expression !== undefined) {\n                bodyNode.addChildNode(new __XmlNode(\"Expression\")\n                    .addChildNode(new __XmlText(input.Expression))\n                    .withName(\"Expression\"));\n            }\n            if (input.ExpressionType !== undefined) {\n                bodyNode.addChildNode(new __XmlNode(\"ExpressionType\")\n                    .addChildNode(new __XmlText(input.ExpressionType))\n                    .withName(\"ExpressionType\"));\n            }\n            if (input.InputSerialization !== undefined) {\n                bodyNode.addChildNode(serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\"));\n            }\n            if (input.OutputSerialization !== undefined) {\n                bodyNode.addChildNode(serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\"));\n            }\n            if (input.RequestProgress !== undefined) {\n                bodyNode.addChildNode(serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\"));\n            }\n            if (input.ScanRange !== undefined) {\n                bodyNode.addChildNode(serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\"));\n            }\n            body += bodyNode.toString();\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlUploadPartCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body, contents;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/octet-stream\";\n            if (input.ContentLength !== undefined) {\n                headers[\"Content-Length\"] = input.ContentLength.toString();\n            }\n            if (input.ContentMD5 !== undefined) {\n                headers[\"Content-MD5\"] = input.ContentMD5;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"UploadPart\"\n            };\n            if (input.PartNumber !== undefined) {\n                query[\"partNumber\"] = input.PartNumber.toString();\n            }\n            if (input.UploadId !== undefined) {\n                query[\"uploadId\"] = input.UploadId;\n            }\n            if (input.Body !== undefined) {\n                contents = input.Body;\n                body = contents;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restXmlUploadPartCopyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            if (input.CopySource !== undefined) {\n                headers[\"x-amz-copy-source\"] = input.CopySource;\n            }\n            if (input.CopySourceIfMatch !== undefined) {\n                headers[\"x-amz-copy-source-if-match\"] = input.CopySourceIfMatch;\n            }\n            if (input.CopySourceIfModifiedSince !== undefined) {\n                headers[\"x-amz-copy-source-if-modified-since\"] = __dateToUtcString(input.CopySourceIfModifiedSince).toString();\n            }\n            if (input.CopySourceIfNoneMatch !== undefined) {\n                headers[\"x-amz-copy-source-if-none-match\"] = input.CopySourceIfNoneMatch;\n            }\n            if (input.CopySourceIfUnmodifiedSince !== undefined) {\n                headers[\"x-amz-copy-source-if-unmodified-since\"] = __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString();\n            }\n            if (input.CopySourceRange !== undefined) {\n                headers[\"x-amz-copy-source-range\"] = input.CopySourceRange;\n            }\n            if (input.CopySourceSSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-copy-source-server-side-encryption-customer-algorithm\"] =\n                    input.CopySourceSSECustomerAlgorithm;\n            }\n            if (input.CopySourceSSECustomerKey !== undefined) {\n                headers[\"x-amz-copy-source-server-side-encryption-customer-key\"] =\n                    input.CopySourceSSECustomerKey;\n            }\n            if (input.CopySourceSSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-copy-source-server-side-encryption-customer-key-MD5\"] =\n                    input.CopySourceSSECustomerKeyMD5;\n            }\n            if (input.RequestPayer !== undefined) {\n                headers[\"x-amz-request-payer\"] = input.RequestPayer;\n            }\n            if (input.SSECustomerAlgorithm !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-algorithm\"] =\n                    input.SSECustomerAlgorithm;\n            }\n            if (input.SSECustomerKey !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key\"] = input.SSECustomerKey;\n            }\n            if (input.SSECustomerKeyMD5 !== undefined) {\n                headers[\"x-amz-server-side-encryption-customer-key-MD5\"] =\n                    input.SSECustomerKeyMD5;\n            }\n            resolvedPath = \"/{Bucket}/{Key+}\";\n            if (input.Bucket !== undefined) {\n                labelValue = input.Bucket;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Bucket.\");\n            }\n            if (input.Key !== undefined) {\n                labelValue = input.Key;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                    .split(\"/\")\n                    .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                    .join(\"/\"));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Key.\");\n            }\n            query = {\n                \"x-id\": \"UploadPartCopy\"\n            };\n            if (input.PartNumber !== undefined) {\n                query[\"partNumber\"] = input.PartNumber.toString();\n            }\n            if (input.UploadId !== undefined) {\n                query[\"uploadId\"] = input.UploadId;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function deserializeAws_restXmlAbortMultipartUploadCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"AbortMultipartUploadOutput\",\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlAbortMultipartUploadCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchUpload\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchUpload\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlCompleteMultipartUploadCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CompleteMultipartUploadOutput\",\n                        Bucket: undefined,\n                        ETag: undefined,\n                        Expiration: undefined,\n                        Key: undefined,\n                        Location: undefined,\n                        RequestCharged: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined,\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                        contents.Expiration = output.headers[\"x-amz-expiration\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Bucket\"] !== undefined) {\n                        contents.Bucket = data[\"Bucket\"];\n                    }\n                    if (data[\"ETag\"] !== undefined) {\n                        contents.ETag = data[\"ETag\"];\n                    }\n                    if (data[\"Key\"] !== undefined) {\n                        contents.Key = data[\"Key\"];\n                    }\n                    if (data[\"Location\"] !== undefined) {\n                        contents.Location = data[\"Location\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlCopyObjectCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CopyObjectOutput\",\n                        CopyObjectResult: undefined,\n                        CopySourceVersionId: undefined,\n                        Expiration: undefined,\n                        RequestCharged: undefined,\n                        SSECustomerAlgorithm: undefined,\n                        SSECustomerKeyMD5: undefined,\n                        SSEKMSEncryptionContext: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined,\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                        contents.CopySourceVersionId =\n                            output.headers[\"x-amz-copy-source-version-id\"];\n                    }\n                    if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                        contents.Expiration = output.headers[\"x-amz-expiration\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                        undefined) {\n                        contents.SSECustomerAlgorithm =\n                            output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                        undefined) {\n                        contents.SSECustomerKeyMD5 =\n                            output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                        contents.SSEKMSEncryptionContext =\n                            output.headers[\"x-amz-server-side-encryption-context\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlCopyObjectCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"ObjectNotInActiveTierError\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#ObjectNotInActiveTierError\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlCreateBucketCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateBucketOutput\",\n                        Location: undefined\n                    };\n                    if (output.headers[\"location\"] !== undefined) {\n                        contents.Location = output.headers[\"location\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlCreateBucketCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, parsedBody, message;\n        return __generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BucketAlreadyExists\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#BucketAlreadyExists\": return [3 /*break*/, 2];\n                        case \"BucketAlreadyOwnedByYou\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\": return [3 /*break*/, 4];\n                    }\n                    return [3 /*break*/, 6];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 7];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 7];\n                case 6:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _f.label = 7;\n                case 7:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlCreateMultipartUploadCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateMultipartUploadOutput\",\n                        AbortDate: undefined,\n                        AbortRuleId: undefined,\n                        Bucket: undefined,\n                        Key: undefined,\n                        RequestCharged: undefined,\n                        SSECustomerAlgorithm: undefined,\n                        SSECustomerKeyMD5: undefined,\n                        SSEKMSEncryptionContext: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined,\n                        UploadId: undefined\n                    };\n                    if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                        contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n                    }\n                    if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                        contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                        undefined) {\n                        contents.SSECustomerAlgorithm =\n                            output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                        undefined) {\n                        contents.SSECustomerKeyMD5 =\n                            output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                        contents.SSEKMSEncryptionContext =\n                            output.headers[\"x-amz-server-side-encryption-context\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Bucket\"] !== undefined) {\n                        contents.Bucket = data[\"Bucket\"];\n                    }\n                    if (data[\"Key\"] !== undefined) {\n                        contents.Key = data[\"Key\"];\n                    }\n                    if (data[\"UploadId\"] !== undefined) {\n                        contents.UploadId = data[\"UploadId\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlCreateMultipartUploadCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketCorsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketCorsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketLifecycleCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketPolicyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketReplicationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketTaggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteObjectCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteObjectOutput\",\n                        DeleteMarker: undefined,\n                        RequestCharged: undefined,\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteObjectCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteObjectTaggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteObjectTaggingOutput\",\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeleteObjectsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteObjectsOutput\",\n                        Deleted: undefined,\n                        Errors: undefined,\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.Deleted === \"\") {\n                        contents.Deleted = [];\n                    }\n                    if (data[\"Deleted\"] !== undefined) {\n                        wrappedItem = data[\"Deleted\"] instanceof Array ? data[\"Deleted\"] : [data[\"Deleted\"]];\n                        contents.Deleted = deserializeAws_restXmlDeletedObjects(wrappedItem, context);\n                    }\n                    if (data.Error === \"\") {\n                        contents.Errors = [];\n                    }\n                    if (data[\"Error\"] !== undefined) {\n                        wrappedItem = data[\"Error\"] instanceof Array ? data[\"Error\"] : [data[\"Error\"]];\n                        contents.Errors = deserializeAws_restXmlErrors(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeleteObjectsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlDeletePublicAccessBlockCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketAccelerateConfigurationOutput\",\n                        Status: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Status\"] !== undefined) {\n                        contents.Status = data[\"Status\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketAclCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketAclOutput\",\n                        Grants: undefined,\n                        Owner: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.AccessControlList === \"\") {\n                        contents.Grants = [];\n                    }\n                    if (data[\"AccessControlList\"] !== undefined &&\n                        data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                        wrappedItem = data[\"AccessControlList\"][\"Grant\"] instanceof Array\n                            ? data[\"AccessControlList\"][\"Grant\"]\n                            : [data[\"AccessControlList\"][\"Grant\"]];\n                        contents.Grants = deserializeAws_restXmlGrants(wrappedItem, context);\n                    }\n                    if (data[\"Owner\"] !== undefined) {\n                        contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketAclCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketAnalyticsConfigurationOutput\",\n                        AnalyticsConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketCorsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketCorsOutput\",\n                        CORSRules: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.CORSRule === \"\") {\n                        contents.CORSRules = [];\n                    }\n                    if (data[\"CORSRule\"] !== undefined) {\n                        wrappedItem = data[\"CORSRule\"] instanceof Array ? data[\"CORSRule\"] : [data[\"CORSRule\"]];\n                        contents.CORSRules = deserializeAws_restXmlCORSRules(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketCorsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketEncryptionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketEncryptionOutput\",\n                        ServerSideEncryptionConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketEncryptionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketInventoryConfigurationOutput\",\n                        InventoryConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketLifecycleConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketLifecycleConfigurationOutput\",\n                        Rules: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.Rule === \"\") {\n                        contents.Rules = [];\n                    }\n                    if (data[\"Rule\"] !== undefined) {\n                        wrappedItem = data[\"Rule\"] instanceof Array ? data[\"Rule\"] : [data[\"Rule\"]];\n                        contents.Rules = deserializeAws_restXmlLifecycleRules(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketLocationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketLocationOutput\",\n                        LocationConstraint: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"LocationConstraint\"] !== undefined) {\n                        contents.LocationConstraint = data[\"LocationConstraint\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketLocationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketLoggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketLoggingOutput\",\n                        LoggingEnabled: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"LoggingEnabled\"] !== undefined) {\n                        contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketLoggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketMetricsConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketMetricsConfigurationOutput\",\n                        MetricsConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketNotificationConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem, wrappedItem, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"NotificationConfiguration\",\n                        LambdaFunctionConfigurations: undefined,\n                        QueueConfigurations: undefined,\n                        TopicConfigurations: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.CloudFunctionConfiguration === \"\") {\n                        contents.LambdaFunctionConfigurations = [];\n                    }\n                    if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n                        wrappedItem = data[\"CloudFunctionConfiguration\"] instanceof Array\n                            ? data[\"CloudFunctionConfiguration\"]\n                            : [data[\"CloudFunctionConfiguration\"]];\n                        contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(wrappedItem, context);\n                    }\n                    if (data.QueueConfiguration === \"\") {\n                        contents.QueueConfigurations = [];\n                    }\n                    if (data[\"QueueConfiguration\"] !== undefined) {\n                        wrappedItem = data[\"QueueConfiguration\"] instanceof Array\n                            ? data[\"QueueConfiguration\"]\n                            : [data[\"QueueConfiguration\"]];\n                        contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(wrappedItem, context);\n                    }\n                    if (data.TopicConfiguration === \"\") {\n                        contents.TopicConfigurations = [];\n                    }\n                    if (data[\"TopicConfiguration\"] !== undefined) {\n                        wrappedItem = data[\"TopicConfiguration\"] instanceof Array\n                            ? data[\"TopicConfiguration\"]\n                            : [data[\"TopicConfiguration\"]];\n                        contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketPolicyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketPolicyOutput\",\n                        Policy: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Policy\"] !== undefined) {\n                        contents.Policy = data[\"Policy\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketPolicyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketPolicyStatusOutput\",\n                        PolicyStatus: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketReplicationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketReplicationOutput\",\n                        ReplicationConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketReplicationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketRequestPaymentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketRequestPaymentOutput\",\n                        Payer: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Payer\"] !== undefined) {\n                        contents.Payer = data[\"Payer\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketTaggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketTaggingOutput\",\n                        TagSet: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.TagSet === \"\") {\n                        contents.TagSet = [];\n                    }\n                    if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                        wrappedItem = data[\"TagSet\"][\"Tag\"] instanceof Array\n                            ? data[\"TagSet\"][\"Tag\"]\n                            : [data[\"TagSet\"][\"Tag\"]];\n                        contents.TagSet = deserializeAws_restXmlTagSet(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketTaggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketVersioningCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketVersioningOutput\",\n                        MFADelete: undefined,\n                        Status: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"MfaDelete\"] !== undefined) {\n                        contents.MFADelete = data[\"MfaDelete\"];\n                    }\n                    if (data[\"Status\"] !== undefined) {\n                        contents.Status = data[\"Status\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketVersioningCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetBucketWebsiteCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBucketWebsiteOutput\",\n                        ErrorDocument: undefined,\n                        IndexDocument: undefined,\n                        RedirectAllRequestsTo: undefined,\n                        RoutingRules: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"ErrorDocument\"] !== undefined) {\n                        contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n                    }\n                    if (data[\"IndexDocument\"] !== undefined) {\n                        contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n                    }\n                    if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n                        contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n                    }\n                    if (data.RoutingRules === \"\") {\n                        contents.RoutingRules = [];\n                    }\n                    if (data[\"RoutingRules\"] !== undefined &&\n                        data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n                        wrappedItem = data[\"RoutingRules\"][\"RoutingRule\"] instanceof Array\n                            ? data[\"RoutingRules\"][\"RoutingRule\"]\n                            : [data[\"RoutingRules\"][\"RoutingRule\"]];\n                        contents.RoutingRules = deserializeAws_restXmlRoutingRules(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetBucketWebsiteCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            if (output.statusCode !== 200 && output.statusCode >= 400) {\n                return [2 /*return*/, deserializeAws_restXmlGetObjectCommandError(output, context)];\n            }\n            contents = {\n                $metadata: deserializeMetadata(output),\n                __type: \"GetObjectOutput\",\n                AcceptRanges: undefined,\n                Body: undefined,\n                CacheControl: undefined,\n                ContentDisposition: undefined,\n                ContentEncoding: undefined,\n                ContentLanguage: undefined,\n                ContentLength: undefined,\n                ContentRange: undefined,\n                ContentType: undefined,\n                DeleteMarker: undefined,\n                ETag: undefined,\n                Expiration: undefined,\n                Expires: undefined,\n                LastModified: undefined,\n                Metadata: undefined,\n                MissingMeta: undefined,\n                ObjectLockLegalHoldStatus: undefined,\n                ObjectLockMode: undefined,\n                ObjectLockRetainUntilDate: undefined,\n                PartsCount: undefined,\n                ReplicationStatus: undefined,\n                RequestCharged: undefined,\n                Restore: undefined,\n                SSECustomerAlgorithm: undefined,\n                SSECustomerKeyMD5: undefined,\n                SSEKMSKeyId: undefined,\n                ServerSideEncryption: undefined,\n                StorageClass: undefined,\n                TagCount: undefined,\n                VersionId: undefined,\n                WebsiteRedirectLocation: undefined\n            };\n            if (output.headers[\"accept-ranges\"] !== undefined) {\n                contents.AcceptRanges = output.headers[\"accept-ranges\"];\n            }\n            if (output.headers[\"cache-control\"] !== undefined) {\n                contents.CacheControl = output.headers[\"cache-control\"];\n            }\n            if (output.headers[\"content-disposition\"] !== undefined) {\n                contents.ContentDisposition = output.headers[\"content-disposition\"];\n            }\n            if (output.headers[\"content-encoding\"] !== undefined) {\n                contents.ContentEncoding = output.headers[\"content-encoding\"];\n            }\n            if (output.headers[\"content-language\"] !== undefined) {\n                contents.ContentLanguage = output.headers[\"content-language\"];\n            }\n            if (output.headers[\"content-length\"] !== undefined) {\n                contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n            }\n            if (output.headers[\"content-range\"] !== undefined) {\n                contents.ContentRange = output.headers[\"content-range\"];\n            }\n            if (output.headers[\"content-type\"] !== undefined) {\n                contents.ContentType = output.headers[\"content-type\"];\n            }\n            if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n            }\n            if (output.headers[\"etag\"] !== undefined) {\n                contents.ETag = output.headers[\"etag\"];\n            }\n            if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                contents.Expiration = output.headers[\"x-amz-expiration\"];\n            }\n            if (output.headers[\"expires\"] !== undefined) {\n                contents.Expires = new Date(output.headers[\"expires\"]);\n            }\n            if (output.headers[\"last-modified\"] !== undefined) {\n                contents.LastModified = new Date(output.headers[\"last-modified\"]);\n            }\n            if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n                contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n            }\n            if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n                contents.ObjectLockLegalHoldStatus =\n                    output.headers[\"x-amz-object-lock-legal-hold\"];\n            }\n            if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n                contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n            }\n            if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n                contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n            }\n            if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n                contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n            }\n            if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n                contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n            }\n            if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n            }\n            if (output.headers[\"x-amz-restore\"] !== undefined) {\n                contents.Restore = output.headers[\"x-amz-restore\"];\n            }\n            if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                undefined) {\n                contents.SSECustomerAlgorithm =\n                    output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n            }\n            if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                undefined) {\n                contents.SSECustomerKeyMD5 =\n                    output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n            }\n            if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                contents.SSEKMSKeyId =\n                    output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n            }\n            if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                contents.ServerSideEncryption =\n                    output.headers[\"x-amz-server-side-encryption\"];\n            }\n            if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n                contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n            }\n            if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n                contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n            }\n            if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                contents.VersionId = output.headers[\"x-amz-version-id\"];\n            }\n            if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n                contents.WebsiteRedirectLocation =\n                    output.headers[\"x-amz-website-redirect-location\"];\n            }\n            Object.keys(output.headers).forEach(function (header) {\n                if (contents.Metadata === undefined) {\n                    contents.Metadata = {};\n                }\n                if (header.startsWith(\"x-amz-meta-\")) {\n                    contents.Metadata[header.substring(11)] = output.headers[header];\n                }\n            });\n            data = output.body;\n            contents.Body = data;\n            return [2 /*return*/, Promise.resolve(contents)];\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchKey\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectAclCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetObjectAclOutput\",\n                        Grants: undefined,\n                        Owner: undefined,\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.AccessControlList === \"\") {\n                        contents.Grants = [];\n                    }\n                    if (data[\"AccessControlList\"] !== undefined &&\n                        data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                        wrappedItem = data[\"AccessControlList\"][\"Grant\"] instanceof Array\n                            ? data[\"AccessControlList\"][\"Grant\"]\n                            : [data[\"AccessControlList\"][\"Grant\"]];\n                        contents.Grants = deserializeAws_restXmlGrants(wrappedItem, context);\n                    }\n                    if (data[\"Owner\"] !== undefined) {\n                        contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectAclCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchKey\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectLegalHoldCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetObjectLegalHoldOutput\",\n                        LegalHold: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectLockConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetObjectLockConfigurationOutput\",\n                        ObjectLockConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectRetentionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetObjectRetentionOutput\",\n                        Retention: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectRetentionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectTaggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetObjectTaggingOutput\",\n                        TagSet: undefined,\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.TagSet === \"\") {\n                        contents.TagSet = [];\n                    }\n                    if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                        wrappedItem = data[\"TagSet\"][\"Tag\"] instanceof Array\n                            ? data[\"TagSet\"][\"Tag\"]\n                            : [data[\"TagSet\"][\"Tag\"]];\n                        contents.TagSet = deserializeAws_restXmlTagSet(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectTaggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetObjectTorrentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            if (output.statusCode !== 200 && output.statusCode >= 400) {\n                return [2 /*return*/, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n            }\n            contents = {\n                $metadata: deserializeMetadata(output),\n                __type: \"GetObjectTorrentOutput\",\n                Body: undefined,\n                RequestCharged: undefined\n            };\n            if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n            }\n            data = output.body;\n            contents.Body = data;\n            return [2 /*return*/, Promise.resolve(contents)];\n        });\n    });\n}\nfunction deserializeAws_restXmlGetObjectTorrentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlGetPublicAccessBlockCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetPublicAccessBlockOutput\",\n                        PublicAccessBlockConfiguration: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlHeadBucketCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlHeadBucketCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchBucket\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlHeadObjectCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"HeadObjectOutput\",\n                        AcceptRanges: undefined,\n                        CacheControl: undefined,\n                        ContentDisposition: undefined,\n                        ContentEncoding: undefined,\n                        ContentLanguage: undefined,\n                        ContentLength: undefined,\n                        ContentType: undefined,\n                        DeleteMarker: undefined,\n                        ETag: undefined,\n                        Expiration: undefined,\n                        Expires: undefined,\n                        LastModified: undefined,\n                        Metadata: undefined,\n                        MissingMeta: undefined,\n                        ObjectLockLegalHoldStatus: undefined,\n                        ObjectLockMode: undefined,\n                        ObjectLockRetainUntilDate: undefined,\n                        PartsCount: undefined,\n                        ReplicationStatus: undefined,\n                        RequestCharged: undefined,\n                        Restore: undefined,\n                        SSECustomerAlgorithm: undefined,\n                        SSECustomerKeyMD5: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined,\n                        StorageClass: undefined,\n                        VersionId: undefined,\n                        WebsiteRedirectLocation: undefined\n                    };\n                    if (output.headers[\"accept-ranges\"] !== undefined) {\n                        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n                    }\n                    if (output.headers[\"cache-control\"] !== undefined) {\n                        contents.CacheControl = output.headers[\"cache-control\"];\n                    }\n                    if (output.headers[\"content-disposition\"] !== undefined) {\n                        contents.ContentDisposition = output.headers[\"content-disposition\"];\n                    }\n                    if (output.headers[\"content-encoding\"] !== undefined) {\n                        contents.ContentEncoding = output.headers[\"content-encoding\"];\n                    }\n                    if (output.headers[\"content-language\"] !== undefined) {\n                        contents.ContentLanguage = output.headers[\"content-language\"];\n                    }\n                    if (output.headers[\"content-length\"] !== undefined) {\n                        contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n                    }\n                    if (output.headers[\"content-type\"] !== undefined) {\n                        contents.ContentType = output.headers[\"content-type\"];\n                    }\n                    if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n                    }\n                    if (output.headers[\"etag\"] !== undefined) {\n                        contents.ETag = output.headers[\"etag\"];\n                    }\n                    if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                        contents.Expiration = output.headers[\"x-amz-expiration\"];\n                    }\n                    if (output.headers[\"expires\"] !== undefined) {\n                        contents.Expires = new Date(output.headers[\"expires\"]);\n                    }\n                    if (output.headers[\"last-modified\"] !== undefined) {\n                        contents.LastModified = new Date(output.headers[\"last-modified\"]);\n                    }\n                    if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n                        contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n                    }\n                    if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n                        contents.ObjectLockLegalHoldStatus =\n                            output.headers[\"x-amz-object-lock-legal-hold\"];\n                    }\n                    if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n                        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n                    }\n                    if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n                        contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n                    }\n                    if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n                        contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n                    }\n                    if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n                        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-restore\"] !== undefined) {\n                        contents.Restore = output.headers[\"x-amz-restore\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                        undefined) {\n                        contents.SSECustomerAlgorithm =\n                            output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                        undefined) {\n                        contents.SSECustomerKeyMD5 =\n                            output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n                        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n                    }\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n                        contents.WebsiteRedirectLocation =\n                            output.headers[\"x-amz-website-redirect-location\"];\n                    }\n                    Object.keys(output.headers).forEach(function (header) {\n                        if (contents.Metadata === undefined) {\n                            contents.Metadata = {};\n                        }\n                        if (header.startsWith(\"x-amz-meta-\")) {\n                            contents.Metadata[header.substring(11)] = output.headers[header];\n                        }\n                    });\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlHeadObjectCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchKey\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListBucketAnalyticsConfigurationsOutput\",\n                        AnalyticsConfigurationList: undefined,\n                        ContinuationToken: undefined,\n                        IsTruncated: undefined,\n                        NextContinuationToken: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.AnalyticsConfiguration === \"\") {\n                        contents.AnalyticsConfigurationList = [];\n                    }\n                    if (data[\"AnalyticsConfiguration\"] !== undefined) {\n                        wrappedItem = data[\"AnalyticsConfiguration\"] instanceof Array\n                            ? data[\"AnalyticsConfiguration\"]\n                            : [data[\"AnalyticsConfiguration\"]];\n                        contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(wrappedItem, context);\n                    }\n                    if (data[\"ContinuationToken\"] !== undefined) {\n                        contents.ContinuationToken = data[\"ContinuationToken\"];\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"NextContinuationToken\"] !== undefined) {\n                        contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListBucketInventoryConfigurationsOutput\",\n                        ContinuationToken: undefined,\n                        InventoryConfigurationList: undefined,\n                        IsTruncated: undefined,\n                        NextContinuationToken: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"ContinuationToken\"] !== undefined) {\n                        contents.ContinuationToken = data[\"ContinuationToken\"];\n                    }\n                    if (data.InventoryConfiguration === \"\") {\n                        contents.InventoryConfigurationList = [];\n                    }\n                    if (data[\"InventoryConfiguration\"] !== undefined) {\n                        wrappedItem = data[\"InventoryConfiguration\"] instanceof Array\n                            ? data[\"InventoryConfiguration\"]\n                            : [data[\"InventoryConfiguration\"]];\n                        contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(wrappedItem, context);\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"NextContinuationToken\"] !== undefined) {\n                        contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListBucketMetricsConfigurationsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListBucketMetricsConfigurationsOutput\",\n                        ContinuationToken: undefined,\n                        IsTruncated: undefined,\n                        MetricsConfigurationList: undefined,\n                        NextContinuationToken: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"ContinuationToken\"] !== undefined) {\n                        contents.ContinuationToken = data[\"ContinuationToken\"];\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data.MetricsConfiguration === \"\") {\n                        contents.MetricsConfigurationList = [];\n                    }\n                    if (data[\"MetricsConfiguration\"] !== undefined) {\n                        wrappedItem = data[\"MetricsConfiguration\"] instanceof Array\n                            ? data[\"MetricsConfiguration\"]\n                            : [data[\"MetricsConfiguration\"]];\n                        contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(wrappedItem, context);\n                    }\n                    if (data[\"NextContinuationToken\"] !== undefined) {\n                        contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListBucketsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListBucketsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListBucketsOutput\",\n                        Buckets: undefined,\n                        Owner: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.Buckets === \"\") {\n                        contents.Buckets = [];\n                    }\n                    if (data[\"Buckets\"] !== undefined &&\n                        data[\"Buckets\"][\"Bucket\"] !== undefined) {\n                        wrappedItem = data[\"Buckets\"][\"Bucket\"] instanceof Array\n                            ? data[\"Buckets\"][\"Bucket\"]\n                            : [data[\"Buckets\"][\"Bucket\"]];\n                        contents.Buckets = deserializeAws_restXmlBuckets(wrappedItem, context);\n                    }\n                    if (data[\"Owner\"] !== undefined) {\n                        contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListBucketsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListMultipartUploadsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListMultipartUploadsOutput\",\n                        Bucket: undefined,\n                        CommonPrefixes: undefined,\n                        Delimiter: undefined,\n                        EncodingType: undefined,\n                        IsTruncated: undefined,\n                        KeyMarker: undefined,\n                        MaxUploads: undefined,\n                        NextKeyMarker: undefined,\n                        NextUploadIdMarker: undefined,\n                        Prefix: undefined,\n                        UploadIdMarker: undefined,\n                        Uploads: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Bucket\"] !== undefined) {\n                        contents.Bucket = data[\"Bucket\"];\n                    }\n                    if (data.CommonPrefixes === \"\") {\n                        contents.CommonPrefixes = [];\n                    }\n                    if (data[\"CommonPrefixes\"] !== undefined) {\n                        wrappedItem = data[\"CommonPrefixes\"] instanceof Array\n                            ? data[\"CommonPrefixes\"]\n                            : [data[\"CommonPrefixes\"]];\n                        contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n                    }\n                    if (data[\"Delimiter\"] !== undefined) {\n                        contents.Delimiter = data[\"Delimiter\"];\n                    }\n                    if (data[\"EncodingType\"] !== undefined) {\n                        contents.EncodingType = data[\"EncodingType\"];\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"KeyMarker\"] !== undefined) {\n                        contents.KeyMarker = data[\"KeyMarker\"];\n                    }\n                    if (data[\"MaxUploads\"] !== undefined) {\n                        contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n                    }\n                    if (data[\"NextKeyMarker\"] !== undefined) {\n                        contents.NextKeyMarker = data[\"NextKeyMarker\"];\n                    }\n                    if (data[\"NextUploadIdMarker\"] !== undefined) {\n                        contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n                    }\n                    if (data[\"Prefix\"] !== undefined) {\n                        contents.Prefix = data[\"Prefix\"];\n                    }\n                    if (data[\"UploadIdMarker\"] !== undefined) {\n                        contents.UploadIdMarker = data[\"UploadIdMarker\"];\n                    }\n                    if (data.Upload === \"\") {\n                        contents.Uploads = [];\n                    }\n                    if (data[\"Upload\"] !== undefined) {\n                        wrappedItem = data[\"Upload\"] instanceof Array ? data[\"Upload\"] : [data[\"Upload\"]];\n                        contents.Uploads = deserializeAws_restXmlMultipartUploadList(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListMultipartUploadsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListObjectVersionsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem, wrappedItem, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListObjectVersionsOutput\",\n                        CommonPrefixes: undefined,\n                        DeleteMarkers: undefined,\n                        Delimiter: undefined,\n                        EncodingType: undefined,\n                        IsTruncated: undefined,\n                        KeyMarker: undefined,\n                        MaxKeys: undefined,\n                        Name: undefined,\n                        NextKeyMarker: undefined,\n                        NextVersionIdMarker: undefined,\n                        Prefix: undefined,\n                        VersionIdMarker: undefined,\n                        Versions: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.CommonPrefixes === \"\") {\n                        contents.CommonPrefixes = [];\n                    }\n                    if (data[\"CommonPrefixes\"] !== undefined) {\n                        wrappedItem = data[\"CommonPrefixes\"] instanceof Array\n                            ? data[\"CommonPrefixes\"]\n                            : [data[\"CommonPrefixes\"]];\n                        contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n                    }\n                    if (data.DeleteMarker === \"\") {\n                        contents.DeleteMarkers = [];\n                    }\n                    if (data[\"DeleteMarker\"] !== undefined) {\n                        wrappedItem = data[\"DeleteMarker\"] instanceof Array\n                            ? data[\"DeleteMarker\"]\n                            : [data[\"DeleteMarker\"]];\n                        contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(wrappedItem, context);\n                    }\n                    if (data[\"Delimiter\"] !== undefined) {\n                        contents.Delimiter = data[\"Delimiter\"];\n                    }\n                    if (data[\"EncodingType\"] !== undefined) {\n                        contents.EncodingType = data[\"EncodingType\"];\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"KeyMarker\"] !== undefined) {\n                        contents.KeyMarker = data[\"KeyMarker\"];\n                    }\n                    if (data[\"MaxKeys\"] !== undefined) {\n                        contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n                    }\n                    if (data[\"Name\"] !== undefined) {\n                        contents.Name = data[\"Name\"];\n                    }\n                    if (data[\"NextKeyMarker\"] !== undefined) {\n                        contents.NextKeyMarker = data[\"NextKeyMarker\"];\n                    }\n                    if (data[\"NextVersionIdMarker\"] !== undefined) {\n                        contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n                    }\n                    if (data[\"Prefix\"] !== undefined) {\n                        contents.Prefix = data[\"Prefix\"];\n                    }\n                    if (data[\"VersionIdMarker\"] !== undefined) {\n                        contents.VersionIdMarker = data[\"VersionIdMarker\"];\n                    }\n                    if (data.Version === \"\") {\n                        contents.Versions = [];\n                    }\n                    if (data[\"Version\"] !== undefined) {\n                        wrappedItem = data[\"Version\"] instanceof Array ? data[\"Version\"] : [data[\"Version\"]];\n                        contents.Versions = deserializeAws_restXmlObjectVersionList(wrappedItem, context);\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListObjectVersionsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListObjectsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListObjectsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListObjectsOutput\",\n                        CommonPrefixes: undefined,\n                        Contents: undefined,\n                        Delimiter: undefined,\n                        EncodingType: undefined,\n                        IsTruncated: undefined,\n                        Marker: undefined,\n                        MaxKeys: undefined,\n                        Name: undefined,\n                        NextMarker: undefined,\n                        Prefix: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.CommonPrefixes === \"\") {\n                        contents.CommonPrefixes = [];\n                    }\n                    if (data[\"CommonPrefixes\"] !== undefined) {\n                        wrappedItem = data[\"CommonPrefixes\"] instanceof Array\n                            ? data[\"CommonPrefixes\"]\n                            : [data[\"CommonPrefixes\"]];\n                        contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n                    }\n                    if (data.Contents === \"\") {\n                        contents.Contents = [];\n                    }\n                    if (data[\"Contents\"] !== undefined) {\n                        wrappedItem = data[\"Contents\"] instanceof Array ? data[\"Contents\"] : [data[\"Contents\"]];\n                        contents.Contents = deserializeAws_restXmlObjectList(wrappedItem, context);\n                    }\n                    if (data[\"Delimiter\"] !== undefined) {\n                        contents.Delimiter = data[\"Delimiter\"];\n                    }\n                    if (data[\"EncodingType\"] !== undefined) {\n                        contents.EncodingType = data[\"EncodingType\"];\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"Marker\"] !== undefined) {\n                        contents.Marker = data[\"Marker\"];\n                    }\n                    if (data[\"MaxKeys\"] !== undefined) {\n                        contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n                    }\n                    if (data[\"Name\"] !== undefined) {\n                        contents.Name = data[\"Name\"];\n                    }\n                    if (data[\"NextMarker\"] !== undefined) {\n                        contents.NextMarker = data[\"NextMarker\"];\n                    }\n                    if (data[\"Prefix\"] !== undefined) {\n                        contents.Prefix = data[\"Prefix\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListObjectsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchBucket\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListObjectsV2Command(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListObjectsV2Output\",\n                        CommonPrefixes: undefined,\n                        Contents: undefined,\n                        ContinuationToken: undefined,\n                        Delimiter: undefined,\n                        EncodingType: undefined,\n                        IsTruncated: undefined,\n                        KeyCount: undefined,\n                        MaxKeys: undefined,\n                        Name: undefined,\n                        NextContinuationToken: undefined,\n                        Prefix: undefined,\n                        StartAfter: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data.CommonPrefixes === \"\") {\n                        contents.CommonPrefixes = [];\n                    }\n                    if (data[\"CommonPrefixes\"] !== undefined) {\n                        wrappedItem = data[\"CommonPrefixes\"] instanceof Array\n                            ? data[\"CommonPrefixes\"]\n                            : [data[\"CommonPrefixes\"]];\n                        contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(wrappedItem, context);\n                    }\n                    if (data.Contents === \"\") {\n                        contents.Contents = [];\n                    }\n                    if (data[\"Contents\"] !== undefined) {\n                        wrappedItem = data[\"Contents\"] instanceof Array ? data[\"Contents\"] : [data[\"Contents\"]];\n                        contents.Contents = deserializeAws_restXmlObjectList(wrappedItem, context);\n                    }\n                    if (data[\"ContinuationToken\"] !== undefined) {\n                        contents.ContinuationToken = data[\"ContinuationToken\"];\n                    }\n                    if (data[\"Delimiter\"] !== undefined) {\n                        contents.Delimiter = data[\"Delimiter\"];\n                    }\n                    if (data[\"EncodingType\"] !== undefined) {\n                        contents.EncodingType = data[\"EncodingType\"];\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"KeyCount\"] !== undefined) {\n                        contents.KeyCount = parseInt(data[\"KeyCount\"]);\n                    }\n                    if (data[\"MaxKeys\"] !== undefined) {\n                        contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n                    }\n                    if (data[\"Name\"] !== undefined) {\n                        contents.Name = data[\"Name\"];\n                    }\n                    if (data[\"NextContinuationToken\"] !== undefined) {\n                        contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                    }\n                    if (data[\"Prefix\"] !== undefined) {\n                        contents.Prefix = data[\"Prefix\"];\n                    }\n                    if (data[\"StartAfter\"] !== undefined) {\n                        contents.StartAfter = data[\"StartAfter\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListObjectsV2CommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchBucket\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlListPartsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data, wrappedItem;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlListPartsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListPartsOutput\",\n                        AbortDate: undefined,\n                        AbortRuleId: undefined,\n                        Bucket: undefined,\n                        Initiator: undefined,\n                        IsTruncated: undefined,\n                        Key: undefined,\n                        MaxParts: undefined,\n                        NextPartNumberMarker: undefined,\n                        Owner: undefined,\n                        PartNumberMarker: undefined,\n                        Parts: undefined,\n                        RequestCharged: undefined,\n                        StorageClass: undefined,\n                        UploadId: undefined\n                    };\n                    if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                        contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n                    }\n                    if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                        contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    if (data[\"Bucket\"] !== undefined) {\n                        contents.Bucket = data[\"Bucket\"];\n                    }\n                    if (data[\"Initiator\"] !== undefined) {\n                        contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n                    }\n                    if (data[\"IsTruncated\"] !== undefined) {\n                        contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                    }\n                    if (data[\"Key\"] !== undefined) {\n                        contents.Key = data[\"Key\"];\n                    }\n                    if (data[\"MaxParts\"] !== undefined) {\n                        contents.MaxParts = parseInt(data[\"MaxParts\"]);\n                    }\n                    if (data[\"NextPartNumberMarker\"] !== undefined) {\n                        contents.NextPartNumberMarker = parseInt(data[\"NextPartNumberMarker\"]);\n                    }\n                    if (data[\"Owner\"] !== undefined) {\n                        contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                    }\n                    if (data[\"PartNumberMarker\"] !== undefined) {\n                        contents.PartNumberMarker = parseInt(data[\"PartNumberMarker\"]);\n                    }\n                    if (data.Part === \"\") {\n                        contents.Parts = [];\n                    }\n                    if (data[\"Part\"] !== undefined) {\n                        wrappedItem = data[\"Part\"] instanceof Array ? data[\"Part\"] : [data[\"Part\"]];\n                        contents.Parts = deserializeAws_restXmlParts(wrappedItem, context);\n                    }\n                    if (data[\"StorageClass\"] !== undefined) {\n                        contents.StorageClass = data[\"StorageClass\"];\n                    }\n                    if (data[\"UploadId\"] !== undefined) {\n                        contents.UploadId = data[\"UploadId\"];\n                    }\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlListPartsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketAclCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketAclCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketCorsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketCorsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketEncryptionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketEncryptionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketLoggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketLoggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketMetricsConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketNotificationConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketPolicyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketPolicyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketReplicationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketReplicationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketRequestPaymentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketTaggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketTaggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketVersioningCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketVersioningCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutBucketWebsiteCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutBucketWebsiteCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutObjectCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutObjectCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutObjectOutput\",\n                        ETag: undefined,\n                        Expiration: undefined,\n                        RequestCharged: undefined,\n                        SSECustomerAlgorithm: undefined,\n                        SSECustomerKeyMD5: undefined,\n                        SSEKMSEncryptionContext: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined,\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"etag\"] !== undefined) {\n                        contents.ETag = output.headers[\"etag\"];\n                    }\n                    if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                        contents.Expiration = output.headers[\"x-amz-expiration\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                        undefined) {\n                        contents.SSECustomerAlgorithm =\n                            output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                        undefined) {\n                        contents.SSECustomerKeyMD5 =\n                            output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                        contents.SSEKMSEncryptionContext =\n                            output.headers[\"x-amz-server-side-encryption-context\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutObjectCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutObjectAclCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutObjectAclOutput\",\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutObjectAclCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"NoSuchKey\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutObjectLegalHoldCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutObjectLegalHoldOutput\",\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutObjectLockConfigurationOutput\",\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutObjectRetentionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutObjectRetentionOutput\",\n                        RequestCharged: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutObjectRetentionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutObjectTaggingCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutObjectTaggingOutput\",\n                        VersionId: undefined\n                    };\n                    if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                        contents.VersionId = output.headers[\"x-amz-version-id\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutObjectTaggingCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlPutPublicAccessBlockCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlRestoreObjectCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"RestoreObjectOutput\",\n                        RequestCharged: undefined,\n                        RestoreOutputPath: undefined\n                    };\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n                        contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlRestoreObjectCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"ObjectAlreadyInActiveTierError\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlSelectObjectContentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        var _this = this;\n        return __generator(this, function (_a) {\n            if (output.statusCode !== 200 && output.statusCode >= 400) {\n                return [2 /*return*/, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n            }\n            contents = {\n                $metadata: deserializeMetadata(output),\n                __type: \"SelectObjectContentOutput\",\n                Payload: undefined\n            };\n            data = context.eventStreamMarshaller.deserialize(output.body, function (event) { return __awaiter(_this, void 0, void 0, function () {\n                var eventName, eventHeaders, eventMessage, parsedEvent;\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            eventName = Object.keys(event)[0];\n                            eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                                accummulator[curr[0]] = curr[1].value;\n                                return accummulator;\n                            }, {});\n                            eventMessage = {\n                                headers: eventHeaders,\n                                body: event[eventName].body\n                            };\n                            parsedEvent = (_a = {},\n                                _a[eventName] = eventMessage,\n                                _a);\n                            return [4 /*yield*/, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n                        case 1: return [2 /*return*/, _b.sent()];\n                    }\n                });\n            }); });\n            contents.Payload = data;\n            return [2 /*return*/, Promise.resolve(contents)];\n        });\n    });\n}\nfunction deserializeAws_restXmlSelectObjectContentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlUploadPartCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlUploadPartCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UploadPartOutput\",\n                        ETag: undefined,\n                        RequestCharged: undefined,\n                        SSECustomerAlgorithm: undefined,\n                        SSECustomerKeyMD5: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined\n                    };\n                    if (output.headers[\"etag\"] !== undefined) {\n                        contents.ETag = output.headers[\"etag\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                        undefined) {\n                        contents.SSECustomerAlgorithm =\n                            output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                        undefined) {\n                        contents.SSECustomerKeyMD5 =\n                            output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlUploadPartCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restXmlUploadPartCopyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UploadPartCopyOutput\",\n                        CopyPartResult: undefined,\n                        CopySourceVersionId: undefined,\n                        RequestCharged: undefined,\n                        SSECustomerAlgorithm: undefined,\n                        SSECustomerKeyMD5: undefined,\n                        SSEKMSKeyId: undefined,\n                        ServerSideEncryption: undefined\n                    };\n                    if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                        contents.CopySourceVersionId =\n                            output.headers[\"x-amz-copy-source-version-id\"];\n                    }\n                    if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !==\n                        undefined) {\n                        contents.SSECustomerAlgorithm =\n                            output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !==\n                        undefined) {\n                        contents.SSECustomerKeyMD5 =\n                            output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                        contents.SSEKMSKeyId =\n                            output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                    }\n                    if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                        contents.ServerSideEncryption =\n                            output.headers[\"x-amz-server-side-encryption\"];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restXmlUploadPartCopyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                if (!(output[\"Cont\"] !== undefined)) return [3 /*break*/, 2];\n                _a = {};\n                return [4 /*yield*/, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n            case 1: return [2 /*return*/, (_a.Cont = _f.sent(),\n                    _a)];\n            case 2:\n                if (!(output[\"End\"] !== undefined)) return [3 /*break*/, 4];\n                _b = {};\n                return [4 /*yield*/, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n            case 3: return [2 /*return*/, (_b.End = _f.sent(),\n                    _b)];\n            case 4:\n                if (!(output[\"Progress\"] !== undefined)) return [3 /*break*/, 6];\n                _c = {};\n                return [4 /*yield*/, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n            case 5: return [2 /*return*/, (_c.Progress = _f.sent(),\n                    _c)];\n            case 6:\n                if (!(output[\"Records\"] !== undefined)) return [3 /*break*/, 8];\n                _d = {};\n                return [4 /*yield*/, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n            case 7: return [2 /*return*/, (_d.Records = _f.sent(),\n                    _d)];\n            case 8:\n                if (!(output[\"Stats\"] !== undefined)) return [3 /*break*/, 10];\n                _e = {};\n                return [4 /*yield*/, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n            case 9: return [2 /*return*/, (_e.Stats = _f.sent(),\n                    _e)];\n            case 10: return [2 /*return*/, { $unknown: output }];\n        }\n    });\n}); };\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlEndEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {\n                    __type: \"ProgressEvent\"\n                };\n                _a = contents;\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2 /*return*/, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {\n            __type: \"RecordsEvent\"\n        };\n        contents.Payload = output.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {\n                    __type: \"StatsEvent\"\n                };\n                _a = contents;\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2 /*return*/, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BucketAlreadyExists\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BucketAlreadyOwnedByYou\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchBucket\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchKey\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchUpload\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ObjectAlreadyInActiveTierError\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ObjectNotInActiveTierError\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput)\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n    if (input.DaysAfterInitiation !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"DaysAfterInitiation\")\n            .addChildNode(new __XmlText(String(input.DaysAfterInitiation)))\n            .withName(\"DaysAfterInitiation\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketAccelerateStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n    if (input.Grants !== undefined) {\n        var nodes = serializeAws_restXmlGrants(input.Grants, context);\n        var containerNode_1 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_1.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_1);\n    }\n    if (input.Owner !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n    if (input.Owner !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"OwnerOverride\")\n            .addChildNode(new __XmlText(input.Owner))\n            .withName(\"Owner\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n    var e_1, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n            var entry = input_1_1.value;\n            var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n    var e_2, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {\n            var entry = input_2_1.value;\n            var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n    var e_3, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {\n            var entry = input_3_1.value;\n            var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tags !== undefined) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.Id !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"AnalyticsId\")\n            .addChildNode(new __XmlText(input.Id))\n            .withName(\"Id\"));\n    }\n    if (input.StorageClassAnalysis !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n    if (input.S3BucketDestination !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n    if (input.And !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlAnalyticsAndOperator(input.And, context).withName(\"And\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tag !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n    if (input.Bucket !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketName\")\n            .addChildNode(new __XmlText(input.Bucket))\n            .withName(\"Bucket\"));\n    }\n    if (input.BucketAccountId !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"AccountId\")\n            .addChildNode(new __XmlText(input.BucketAccountId))\n            .withName(\"BucketAccountId\"));\n    }\n    if (input.Format !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"AnalyticsS3ExportFileFormat\")\n            .addChildNode(new __XmlText(input.Format))\n            .withName(\"Format\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n    if (input.Rules !== undefined) {\n        var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n    if (input.LoggingEnabled !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSConfiguration\");\n    if (input.CORSRules !== undefined) {\n        var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CORSRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSRule\");\n    if (input.AllowedHeaders !== undefined) {\n        var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedMethods !== undefined) {\n        var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedMethod\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedOrigins !== undefined) {\n        var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedOrigin\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ExposeHeaders !== undefined) {\n        var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"ExposeHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.MaxAgeSeconds !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"MaxAgeSeconds\")\n            .addChildNode(new __XmlText(String(input.MaxAgeSeconds)))\n            .withName(\"MaxAgeSeconds\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRules = function (input, context) {\n    var e_4, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_4 = __values(input), input_4_1 = input_4.next(); !input_4_1.done; input_4_1 = input_4.next()) {\n            var entry = input_4_1.value;\n            var node = serializeAws_restXmlCORSRule(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (input_4_1 && !input_4_1.done && (_a = input_4.return)) _a.call(input_4);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlCSVInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVInput\");\n    if (input.AllowQuotedRecordDelimiter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"AllowQuotedRecordDelimiter\")\n            .addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter)))\n            .withName(\"AllowQuotedRecordDelimiter\"));\n    }\n    if (input.Comments !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Comments\")\n            .addChildNode(new __XmlText(input.Comments))\n            .withName(\"Comments\"));\n    }\n    if (input.FieldDelimiter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\"));\n    }\n    if (input.FileHeaderInfo !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"FileHeaderInfo\")\n            .addChildNode(new __XmlText(input.FileHeaderInfo))\n            .withName(\"FileHeaderInfo\"));\n    }\n    if (input.QuoteCharacter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\"));\n    }\n    if (input.QuoteEscapeCharacter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\"));\n    }\n    if (input.RecordDelimiter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVOutput\");\n    if (input.FieldDelimiter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\"));\n    }\n    if (input.QuoteCharacter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\"));\n    }\n    if (input.QuoteEscapeCharacter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\"));\n    }\n    if (input.QuoteFields !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"QuoteFields\")\n            .addChildNode(new __XmlText(input.QuoteFields))\n            .withName(\"QuoteFields\"));\n    }\n    if (input.RecordDelimiter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n    if (input.Parts !== undefined) {\n        var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Part\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedPart\");\n    if (input.ETag !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ETag\")\n            .addChildNode(new __XmlText(input.ETag))\n            .withName(\"ETag\"));\n    }\n    if (input.PartNumber !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"PartNumber\")\n            .addChildNode(new __XmlText(String(input.PartNumber)))\n            .withName(\"PartNumber\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n    var e_5, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_5 = __values(input), input_5_1 = input_5.next(); !input_5_1.done; input_5_1 = input_5.next()) {\n            var entry = input_5_1.value;\n            var node = serializeAws_restXmlCompletedPart(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (input_5_1 && !input_5_1.done && (_a = input_5.return)) _a.call(input_5);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlCondition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Condition\");\n    if (input.HttpErrorCodeReturnedEquals !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"HttpErrorCodeReturnedEquals\")\n            .addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals))\n            .withName(\"HttpErrorCodeReturnedEquals\"));\n    }\n    if (input.KeyPrefixEquals !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"KeyPrefixEquals\")\n            .addChildNode(new __XmlText(input.KeyPrefixEquals))\n            .withName(\"KeyPrefixEquals\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n    if (input.LocationConstraint !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketLocationConstraint\")\n            .addChildNode(new __XmlText(input.LocationConstraint))\n            .withName(\"LocationConstraint\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"DefaultRetention\");\n    if (input.Days !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\"));\n    }\n    if (input.Mode !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectLockRetentionMode\")\n            .addChildNode(new __XmlText(input.Mode))\n            .withName(\"Mode\"));\n    }\n    if (input.Years !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Years\")\n            .addChildNode(new __XmlText(String(input.Years)))\n            .withName(\"Years\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDelete = function (input, context) {\n    var bodyNode = new __XmlNode(\"Delete\");\n    if (input.Objects !== undefined) {\n        var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Object\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Quiet !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Quiet\")\n            .addChildNode(new __XmlText(String(input.Quiet)))\n            .withName(\"Quiet\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"DeleteMarkerReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"Destination\");\n    if (input.AccessControlTranslation !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\"));\n    }\n    if (input.Account !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"AccountId\")\n            .addChildNode(new __XmlText(input.Account))\n            .withName(\"Account\"));\n    }\n    if (input.Bucket !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketName\")\n            .addChildNode(new __XmlText(input.Bucket))\n            .withName(\"Bucket\"));\n    }\n    if (input.EncryptionConfiguration !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\"));\n    }\n    if (input.Metrics !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\"));\n    }\n    if (input.ReplicationTime !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\"));\n    }\n    if (input.StorageClass !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"StorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"Encryption\");\n    if (input.EncryptionType !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.EncryptionType))\n            .withName(\"EncryptionType\"));\n    }\n    if (input.KMSContext !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"KMSContext\")\n            .addChildNode(new __XmlText(input.KMSContext))\n            .withName(\"KMSContext\"));\n    }\n    if (input.KMSKeyId !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"SSEKMSKeyId\")\n            .addChildNode(new __XmlText(input.KMSKeyId))\n            .withName(\"KMSKeyId\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n    if (input.ReplicaKmsKeyID !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ReplicaKmsKeyID\")\n            .addChildNode(new __XmlText(input.ReplicaKmsKeyID))\n            .withName(\"ReplicaKmsKeyID\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"ErrorDocument\");\n    if (input.Key !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectKey\")\n            .addChildNode(new __XmlText(input.Key))\n            .withName(\"Key\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEventList = function (input, context) {\n    var e_6, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_6 = __values(input), input_6_1 = input_6.next(); !input_6_1.done; input_6_1 = input_6.next()) {\n            var entry = input_6_1.value;\n            var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n    finally {\n        try {\n            if (input_6_1 && !input_6_1.done && (_a = input_6.return)) _a.call(input_6);\n        }\n        finally { if (e_6) throw e_6.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ExistingObjectReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n    var e_7, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_7 = __values(input), input_7_1 = input_7.next(); !input_7_1.done; input_7_1 = input_7.next()) {\n            var entry = input_7_1.value;\n            var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n    finally {\n        try {\n            if (input_7_1 && !input_7_1.done && (_a = input_7.return)) _a.call(input_7);\n        }\n        finally { if (e_7) throw e_7.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlFilterRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"FilterRule\");\n    if (input.Name !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"FilterRuleName\")\n            .addChildNode(new __XmlText(input.Name))\n            .withName(\"Name\"));\n    }\n    if (input.Value !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"FilterRuleValue\")\n            .addChildNode(new __XmlText(input.Value))\n            .withName(\"Value\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n    var e_8, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_8 = __values(input), input_8_1 = input_8.next(); !input_8_1.done; input_8_1 = input_8.next()) {\n            var entry = input_8_1.value;\n            var node = serializeAws_restXmlFilterRule(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_8_1) { e_8 = { error: e_8_1 }; }\n    finally {\n        try {\n            if (input_8_1 && !input_8_1.done && (_a = input_8.return)) _a.call(input_8);\n        }\n        finally { if (e_8) throw e_8.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n    if (input.Tier !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Tier\")\n            .addChildNode(new __XmlText(input.Tier))\n            .withName(\"Tier\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grant\");\n    if (input.Grantee !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\"));\n    }\n    if (input.Permission !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Permission\")\n            .addChildNode(new __XmlText(input.Permission))\n            .withName(\"Permission\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrantee = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grantee\");\n    bodyNode.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    if (input.DisplayName !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"DisplayName\")\n            .addChildNode(new __XmlText(input.DisplayName))\n            .withName(\"DisplayName\"));\n    }\n    if (input.EmailAddress !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"EmailAddress\")\n            .addChildNode(new __XmlText(input.EmailAddress))\n            .withName(\"EmailAddress\"));\n    }\n    if (input.ID !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n    }\n    if (input.Type !== undefined) {\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\n    }\n    if (input.URI !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"URI\")\n            .addChildNode(new __XmlText(input.URI))\n            .withName(\"URI\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrants = function (input, context) {\n    var e_9, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_9 = __values(input), input_9_1 = input_9.next(); !input_9_1.done; input_9_1 = input_9.next()) {\n            var entry = input_9_1.value;\n            var node = serializeAws_restXmlGrant(entry, context);\n            collectedNodes.push(node.withName(\"Grant\"));\n        }\n    }\n    catch (e_9_1) { e_9 = { error: e_9_1 }; }\n    finally {\n        try {\n            if (input_9_1 && !input_9_1.done && (_a = input_9.return)) _a.call(input_9);\n        }\n        finally { if (e_9) throw e_9.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"IndexDocument\");\n    if (input.Suffix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Suffix\")\n            .addChildNode(new __XmlText(input.Suffix))\n            .withName(\"Suffix\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"InputSerialization\");\n    if (input.CSV !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\"));\n    }\n    if (input.CompressionType !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"CompressionType\")\n            .addChildNode(new __XmlText(input.CompressionType))\n            .withName(\"CompressionType\"));\n    }\n    if (input.JSON !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\"));\n    }\n    if (input.Parquet !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n    if (input.Destination !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\"));\n    }\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.Id !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"InventoryId\")\n            .addChildNode(new __XmlText(input.Id))\n            .withName(\"Id\"));\n    }\n    if (input.IncludedObjectVersions !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"InventoryIncludedObjectVersions\")\n            .addChildNode(new __XmlText(input.IncludedObjectVersions))\n            .withName(\"IncludedObjectVersions\"));\n    }\n    if (input.IsEnabled !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"IsEnabled\")\n            .addChildNode(new __XmlText(String(input.IsEnabled)))\n            .withName(\"IsEnabled\"));\n    }\n    if (input.OptionalFields !== undefined) {\n        var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n        var containerNode_2 = new __XmlNode(\"OptionalFields\");\n        nodes.map(function (node) {\n            containerNode_2.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_2);\n    }\n    if (input.Schedule !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryDestination\");\n    if (input.S3BucketDestination !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryEncryption\");\n    if (input.SSEKMS !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\"));\n    }\n    if (input.SSES3 !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryFilter\");\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n    var e_10, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_10 = __values(input), input_10_1 = input_10.next(); !input_10_1.done; input_10_1 = input_10.next()) {\n            var entry = input_10_1.value;\n            var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n            collectedNodes.push(node.withName(\"Field\"));\n        }\n    }\n    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n    finally {\n        try {\n            if (input_10_1 && !input_10_1.done && (_a = input_10.return)) _a.call(input_10);\n        }\n        finally { if (e_10) throw e_10.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n    if (input.AccountId !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"AccountId\")\n            .addChildNode(new __XmlText(input.AccountId))\n            .withName(\"AccountId\"));\n    }\n    if (input.Bucket !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketName\")\n            .addChildNode(new __XmlText(input.Bucket))\n            .withName(\"Bucket\"));\n    }\n    if (input.Encryption !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\"));\n    }\n    if (input.Format !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"InventoryFormat\")\n            .addChildNode(new __XmlText(input.Format))\n            .withName(\"Format\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventorySchedule\");\n    if (input.Frequency !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"InventoryFrequency\")\n            .addChildNode(new __XmlText(input.Frequency))\n            .withName(\"Frequency\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONInput\");\n    if (input.Type !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"JSONType\")\n            .addChildNode(new __XmlText(input.Type))\n            .withName(\"Type\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONOutput\");\n    if (input.RecordDelimiter !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n    if (input.Events !== undefined) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.Id !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"NotificationId\")\n            .addChildNode(new __XmlText(input.Id))\n            .withName(\"Id\"));\n    }\n    if (input.LambdaFunctionArn !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"LambdaFunctionArn\")\n            .addChildNode(new __XmlText(input.LambdaFunctionArn))\n            .withName(\"CloudFunction\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n    var e_11, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_11 = __values(input), input_11_1 = input_11.next(); !input_11_1.done; input_11_1 = input_11.next()) {\n            var entry = input_11_1.value;\n            var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_11_1) { e_11 = { error: e_11_1 }; }\n    finally {\n        try {\n            if (input_11_1 && !input_11_1.done && (_a = input_11.return)) _a.call(input_11);\n        }\n        finally { if (e_11) throw e_11.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n    if (input.Date !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\"));\n    }\n    if (input.Days !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\"));\n    }\n    if (input.ExpiredObjectDeleteMarker !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ExpiredObjectDeleteMarker\")\n            .addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker)))\n            .withName(\"ExpiredObjectDeleteMarker\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRule\");\n    if (input.AbortIncompleteMultipartUpload !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\"));\n    }\n    if (input.Expiration !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\"));\n    }\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.ID !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n    }\n    if (input.NoncurrentVersionExpiration !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\"));\n    }\n    if (input.NoncurrentVersionTransitions !== undefined) {\n        var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"NoncurrentVersionTransition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ExpirationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    if (input.Transitions !== undefined) {\n        var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Transition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tags !== undefined) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n    if (input.And !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlLifecycleRuleAndOperator(input.And, context).withName(\"And\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tag !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n    var e_12, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_12 = __values(input), input_12_1 = input_12.next(); !input_12_1.done; input_12_1 = input_12.next()) {\n            var entry = input_12_1.value;\n            var node = serializeAws_restXmlLifecycleRule(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_12_1) { e_12 = { error: e_12_1 }; }\n    finally {\n        try {\n            if (input_12_1 && !input_12_1.done && (_a = input_12.return)) _a.call(input_12);\n        }\n        finally { if (e_12) throw e_12.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n    var bodyNode = new __XmlNode(\"LoggingEnabled\");\n    if (input.TargetBucket !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"TargetBucket\")\n            .addChildNode(new __XmlText(input.TargetBucket))\n            .withName(\"TargetBucket\"));\n    }\n    if (input.TargetGrants !== undefined) {\n        var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n        var containerNode_3 = new __XmlNode(\"TargetGrants\");\n        nodes.map(function (node) {\n            containerNode_3.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_3);\n    }\n    if (input.TargetPrefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"TargetPrefix\")\n            .addChildNode(new __XmlText(input.TargetPrefix))\n            .withName(\"TargetPrefix\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetadataEntry\");\n    if (input.Name !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"MetadataKey\")\n            .addChildNode(new __XmlText(input.Name))\n            .withName(\"Name\"));\n    }\n    if (input.Value !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"MetadataValue\")\n            .addChildNode(new __XmlText(input.Value))\n            .withName(\"Value\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetrics = function (input, context) {\n    var bodyNode = new __XmlNode(\"Metrics\");\n    if (input.EventThreshold !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\"));\n    }\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"MetricsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tags !== undefined) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.Id !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"MetricsId\")\n            .addChildNode(new __XmlText(input.Id))\n            .withName(\"Id\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsFilter\");\n    if (input.And !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlMetricsAndOperator(input.And, context).withName(\"And\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tag !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n    if (input.NoncurrentDays !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n    if (input.NoncurrentDays !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\"));\n    }\n    if (input.StorageClass !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n    var e_13, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_13 = __values(input), input_13_1 = input_13.next(); !input_13_1.done; input_13_1 = input_13.next()) {\n            var entry = input_13_1.value;\n            var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_13_1) { e_13 = { error: e_13_1 }; }\n    finally {\n        try {\n            if (input_13_1 && !input_13_1.done && (_a = input_13.return)) _a.call(input_13);\n        }\n        finally { if (e_13) throw e_13.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n    if (input.LambdaFunctionConfigurations !== undefined) {\n        var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CloudFunctionConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.QueueConfigurations !== undefined) {\n        var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"QueueConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.TopicConfigurations !== undefined) {\n        var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"TopicConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n    if (input.Key !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n    if (input.Key !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectKey\")\n            .addChildNode(new __XmlText(input.Key))\n            .withName(\"Key\"));\n    }\n    if (input.VersionId !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectVersionId\")\n            .addChildNode(new __XmlText(input.VersionId))\n            .withName(\"VersionId\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n    var e_14, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_14 = __values(input), input_14_1 = input_14.next(); !input_14_1.done; input_14_1 = input_14.next()) {\n            var entry = input_14_1.value;\n            var node = serializeAws_restXmlObjectIdentifier(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_14_1) { e_14 = { error: e_14_1 }; }\n    finally {\n        try {\n            if (input_14_1 && !input_14_1.done && (_a = input_14.return)) _a.call(input_14);\n        }\n        finally { if (e_14) throw e_14.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n    if (input.ObjectLockEnabled !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectLockEnabled\")\n            .addChildNode(new __XmlText(input.ObjectLockEnabled))\n            .withName(\"ObjectLockEnabled\"));\n    }\n    if (input.Rule !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectLockLegalHoldStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n    if (input.Mode !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectLockRetentionMode\")\n            .addChildNode(new __XmlText(input.Mode))\n            .withName(\"Mode\"));\n    }\n    if (input.RetainUntilDate !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"RetainUntilDate\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRule\");\n    if (input.DefaultRetention !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputLocation\");\n    if (input.S3 !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputSerialization\");\n    if (input.CSV !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\"));\n    }\n    if (input.JSON !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwner = function (input, context) {\n    var bodyNode = new __XmlNode(\"Owner\");\n    if (input.DisplayName !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"DisplayName\")\n            .addChildNode(new __XmlText(input.DisplayName))\n            .withName(\"DisplayName\"));\n    }\n    if (input.ID !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlParquetInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"ParquetInput\");\n    return bodyNode;\n};\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n    if (input.BlockPublicAcls !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicAcls)))\n            .withName(\"BlockPublicAcls\"));\n    }\n    if (input.BlockPublicPolicy !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicPolicy)))\n            .withName(\"BlockPublicPolicy\"));\n    }\n    if (input.IgnorePublicAcls !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.IgnorePublicAcls)))\n            .withName(\"IgnorePublicAcls\"));\n    }\n    if (input.RestrictPublicBuckets !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.RestrictPublicBuckets)))\n            .withName(\"RestrictPublicBuckets\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"QueueConfiguration\");\n    if (input.Events !== undefined) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.Id !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"NotificationId\")\n            .addChildNode(new __XmlText(input.Id))\n            .withName(\"Id\"));\n    }\n    if (input.QueueArn !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"QueueArn\")\n            .addChildNode(new __XmlText(input.QueueArn))\n            .withName(\"Queue\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n    var e_15, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_15 = __values(input), input_15_1 = input_15.next(); !input_15_1.done; input_15_1 = input_15.next()) {\n            var entry = input_15_1.value;\n            var node = serializeAws_restXmlQueueConfiguration(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_15_1) { e_15 = { error: e_15_1 }; }\n    finally {\n        try {\n            if (input_15_1 && !input_15_1.done && (_a = input_15.return)) _a.call(input_15);\n        }\n        finally { if (e_15) throw e_15.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlRedirect = function (input, context) {\n    var bodyNode = new __XmlNode(\"Redirect\");\n    if (input.HostName !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"HostName\")\n            .addChildNode(new __XmlText(input.HostName))\n            .withName(\"HostName\"));\n    }\n    if (input.HttpRedirectCode !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"HttpRedirectCode\")\n            .addChildNode(new __XmlText(input.HttpRedirectCode))\n            .withName(\"HttpRedirectCode\"));\n    }\n    if (input.Protocol !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Protocol\")\n            .addChildNode(new __XmlText(input.Protocol))\n            .withName(\"Protocol\"));\n    }\n    if (input.ReplaceKeyPrefixWith !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ReplaceKeyPrefixWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyPrefixWith))\n            .withName(\"ReplaceKeyPrefixWith\"));\n    }\n    if (input.ReplaceKeyWith !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ReplaceKeyWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyWith))\n            .withName(\"ReplaceKeyWith\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n    var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n    if (input.HostName !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"HostName\")\n            .addChildNode(new __XmlText(input.HostName))\n            .withName(\"HostName\"));\n    }\n    if (input.Protocol !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Protocol\")\n            .addChildNode(new __XmlText(input.Protocol))\n            .withName(\"Protocol\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n    if (input.Role !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Role\")\n            .addChildNode(new __XmlText(input.Role))\n            .withName(\"Role\"));\n    }\n    if (input.Rules !== undefined) {\n        var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRule\");\n    if (input.DeleteMarkerReplication !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\"));\n    }\n    if (input.Destination !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\"));\n    }\n    if (input.ExistingObjectReplication !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\"));\n    }\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.ID !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Priority !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Priority\")\n            .addChildNode(new __XmlText(String(input.Priority)))\n            .withName(\"Priority\"));\n    }\n    if (input.SourceSelectionCriteria !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\"));\n    }\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ReplicationRuleStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tags !== undefined) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n    if (input.And !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlReplicationRuleAndOperator(input.And, context).withName(\"And\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Prefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.Tag !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n    var e_16, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_16 = __values(input), input_16_1 = input_16.next(); !input_16_1.done; input_16_1 = input_16.next()) {\n            var entry = input_16_1.value;\n            var node = serializeAws_restXmlReplicationRule(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_16_1) { e_16 = { error: e_16_1 }; }\n    finally {\n        try {\n            if (input_16_1 && !input_16_1.done && (_a = input_16.return)) _a.call(input_16);\n        }\n        finally { if (e_16) throw e_16.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTime\");\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ReplicationTimeStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    if (input.Time !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n    if (input.Minutes !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Minutes\")\n            .addChildNode(new __XmlText(String(input.Minutes)))\n            .withName(\"Minutes\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n    if (input.Payer !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Payer\")\n            .addChildNode(new __XmlText(input.Payer))\n            .withName(\"Payer\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestProgress\");\n    if (input.Enabled !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"EnableRequestProgress\")\n            .addChildNode(new __XmlText(String(input.Enabled)))\n            .withName(\"Enabled\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n    var bodyNode = new __XmlNode(\"RestoreRequest\");\n    if (input.Days !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\"));\n    }\n    if (input.Description !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Description\")\n            .addChildNode(new __XmlText(input.Description))\n            .withName(\"Description\"));\n    }\n    if (input.GlacierJobParameters !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\"));\n    }\n    if (input.OutputLocation !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\"));\n    }\n    if (input.SelectParameters !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\"));\n    }\n    if (input.Tier !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Tier\")\n            .addChildNode(new __XmlText(input.Tier))\n            .withName(\"Tier\"));\n    }\n    if (input.Type !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"RestoreRequestType\")\n            .addChildNode(new __XmlText(input.Type))\n            .withName(\"Type\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"RoutingRule\");\n    if (input.Condition !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\"));\n    }\n    if (input.Redirect !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n    var e_17, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_17 = __values(input), input_17_1 = input_17.next(); !input_17_1.done; input_17_1 = input_17.next()) {\n            var entry = input_17_1.value;\n            var node = serializeAws_restXmlRoutingRule(entry, context);\n            collectedNodes.push(node.withName(\"RoutingRule\"));\n        }\n    }\n    catch (e_17_1) { e_17 = { error: e_17_1 }; }\n    finally {\n        try {\n            if (input_17_1 && !input_17_1.done && (_a = input_17.return)) _a.call(input_17);\n        }\n        finally { if (e_17) throw e_17.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3KeyFilter\");\n    if (input.FilterRules !== undefined) {\n        var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"FilterRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlS3Location = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3Location\");\n    if (input.AccessControlList !== undefined) {\n        var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n        var containerNode_4 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_4.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_4);\n    }\n    if (input.BucketName !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketName\")\n            .addChildNode(new __XmlText(input.BucketName))\n            .withName(\"BucketName\"));\n    }\n    if (input.CannedACL !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectCannedACL\")\n            .addChildNode(new __XmlText(input.CannedACL))\n            .withName(\"CannedACL\"));\n    }\n    if (input.Encryption !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\"));\n    }\n    if (input.Prefix !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"LocationPrefix\")\n            .addChildNode(new __XmlText(input.Prefix))\n            .withName(\"Prefix\"));\n    }\n    if (input.StorageClass !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"StorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\"));\n    }\n    if (input.Tagging !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\"));\n    }\n    if (input.UserMetadata !== undefined) {\n        var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n        var containerNode_5 = new __XmlNode(\"UserMetadata\");\n        nodes.map(function (node) {\n            containerNode_5.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_5);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-KMS\");\n    if (input.KeyId !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"SSEKMSKeyId\")\n            .addChildNode(new __XmlText(input.KeyId))\n            .withName(\"KeyId\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSES3 = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-S3\");\n    return bodyNode;\n};\nvar serializeAws_restXmlScanRange = function (input, context) {\n    var bodyNode = new __XmlNode(\"ScanRange\");\n    if (input.End !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"End\")\n            .addChildNode(new __XmlText(String(input.End)))\n            .withName(\"End\"));\n    }\n    if (input.Start !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Start\")\n            .addChildNode(new __XmlText(String(input.Start)))\n            .withName(\"Start\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"SelectParameters\");\n    if (input.Expression !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Expression\")\n            .addChildNode(new __XmlText(input.Expression))\n            .withName(\"Expression\"));\n    }\n    if (input.ExpressionType !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ExpressionType\")\n            .addChildNode(new __XmlText(input.ExpressionType))\n            .withName(\"ExpressionType\"));\n    }\n    if (input.InputSerialization !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\"));\n    }\n    if (input.OutputSerialization !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n    if (input.KMSMasterKeyID !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"SSEKMSKeyId\")\n            .addChildNode(new __XmlText(input.KMSMasterKeyID))\n            .withName(\"KMSMasterKeyID\"));\n    }\n    if (input.SSEAlgorithm !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.SSEAlgorithm))\n            .withName(\"SSEAlgorithm\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n    if (input.Rules !== undefined) {\n        var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n    if (input.ApplyServerSideEncryptionByDefault !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n    var e_18, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_18 = __values(input), input_18_1 = input_18.next(); !input_18_1.done; input_18_1 = input_18.next()) {\n            var entry = input_18_1.value;\n            var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_18_1) { e_18 = { error: e_18_1 }; }\n    finally {\n        try {\n            if (input_18_1 && !input_18_1.done && (_a = input_18.return)) _a.call(input_18);\n        }\n        finally { if (e_18) throw e_18.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n    var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n    if (input.SseKmsEncryptedObjects !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n    var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"SseKmsEncryptedObjectsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n    if (input.DataExport !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n    if (input.Destination !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\"));\n    }\n    if (input.OutputSchemaVersion !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"StorageClassAnalysisSchemaVersion\")\n            .addChildNode(new __XmlText(input.OutputSchemaVersion))\n            .withName(\"OutputSchemaVersion\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTag = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tag\");\n    if (input.Key !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"ObjectKey\")\n            .addChildNode(new __XmlText(input.Key))\n            .withName(\"Key\"));\n    }\n    if (input.Value !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Value\")\n            .addChildNode(new __XmlText(input.Value))\n            .withName(\"Value\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagSet = function (input, context) {\n    var e_19, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_19 = __values(input), input_19_1 = input_19.next(); !input_19_1.done; input_19_1 = input_19.next()) {\n            var entry = input_19_1.value;\n            var node = serializeAws_restXmlTag(entry, context);\n            collectedNodes.push(node.withName(\"Tag\"));\n        }\n    }\n    catch (e_19_1) { e_19 = { error: e_19_1 }; }\n    finally {\n        try {\n            if (input_19_1 && !input_19_1.done && (_a = input_19.return)) _a.call(input_19);\n        }\n        finally { if (e_19) throw e_19.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlTagging = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tagging\");\n    if (input.TagSet !== undefined) {\n        var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n        var containerNode_6 = new __XmlNode(\"TagSet\");\n        nodes.map(function (node) {\n            containerNode_6.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_6);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"TargetGrant\");\n    if (input.Grantee !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\"));\n    }\n    if (input.Permission !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketLogsPermission\")\n            .addChildNode(new __XmlText(input.Permission))\n            .withName(\"Permission\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n    var e_20, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_20 = __values(input), input_20_1 = input_20.next(); !input_20_1.done; input_20_1 = input_20.next()) {\n            var entry = input_20_1.value;\n            var node = serializeAws_restXmlTargetGrant(entry, context);\n            collectedNodes.push(node.withName(\"Grant\"));\n        }\n    }\n    catch (e_20_1) { e_20 = { error: e_20_1 }; }\n    finally {\n        try {\n            if (input_20_1 && !input_20_1.done && (_a = input_20.return)) _a.call(input_20);\n        }\n        finally { if (e_20) throw e_20.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"TopicConfiguration\");\n    if (input.Events !== undefined) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\"));\n    }\n    if (input.Id !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"NotificationId\")\n            .addChildNode(new __XmlText(input.Id))\n            .withName(\"Id\"));\n    }\n    if (input.TopicArn !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"TopicArn\")\n            .addChildNode(new __XmlText(input.TopicArn))\n            .withName(\"Topic\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n    var e_21, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_21 = __values(input), input_21_1 = input_21.next(); !input_21_1.done; input_21_1 = input_21.next()) {\n            var entry = input_21_1.value;\n            var node = serializeAws_restXmlTopicConfiguration(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_21_1) { e_21 = { error: e_21_1 }; }\n    finally {\n        try {\n            if (input_21_1 && !input_21_1.done && (_a = input_21.return)) _a.call(input_21);\n        }\n        finally { if (e_21) throw e_21.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Transition\");\n    if (input.Date !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\"));\n    }\n    if (input.Days !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\"));\n    }\n    if (input.StorageClass !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTransitionList = function (input, context) {\n    var e_22, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_22 = __values(input), input_22_1 = input_22.next(); !input_22_1.done; input_22_1 = input_22.next()) {\n            var entry = input_22_1.value;\n            var node = serializeAws_restXmlTransition(entry, context);\n            collectedNodes.push(node.withName(\"member\"));\n        }\n    }\n    catch (e_22_1) { e_22 = { error: e_22_1 }; }\n    finally {\n        try {\n            if (input_22_1 && !input_22_1.done && (_a = input_22.return)) _a.call(input_22);\n        }\n        finally { if (e_22) throw e_22.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n    var e_23, _a;\n    var collectedNodes = [];\n    try {\n        for (var input_23 = __values(input), input_23_1 = input_23.next(); !input_23_1.done; input_23_1 = input_23.next()) {\n            var entry = input_23_1.value;\n            var node = serializeAws_restXmlMetadataEntry(entry, context);\n            collectedNodes.push(node.withName(\"MetadataEntry\"));\n        }\n    }\n    catch (e_23_1) { e_23 = { error: e_23_1 }; }\n    finally {\n        try {\n            if (input_23_1 && !input_23_1.done && (_a = input_23.return)) _a.call(input_23);\n        }\n        finally { if (e_23) throw e_23.error; }\n    }\n    return collectedNodes;\n};\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n    if (input.MFADelete !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"MFADelete\")\n            .addChildNode(new __XmlText(input.MFADelete))\n            .withName(\"MfaDelete\"));\n    }\n    if (input.Status !== undefined) {\n        bodyNode.addChildNode(new __XmlNode(\"BucketVersioningStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\"));\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n    if (input.ErrorDocument !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\"));\n    }\n    if (input.IndexDocument !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\"));\n    }\n    if (input.RedirectAllRequestsTo !== undefined) {\n        bodyNode.addChildNode(serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\"));\n    }\n    if (input.RoutingRules !== undefined) {\n        var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n        var containerNode_7 = new __XmlNode(\"RoutingRules\");\n        nodes.map(function (node) {\n            containerNode_7.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_7);\n    }\n    return bodyNode;\n};\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n    var contents = {\n        __type: \"AbortIncompleteMultipartUpload\",\n        DaysAfterInitiation: undefined\n    };\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\n        contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n    var contents = {\n        __type: \"AccessControlTranslation\",\n        Owner: undefined\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = output[\"Owner\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(entry);\n    });\n    return contents;\n};\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(entry);\n    });\n    return contents;\n};\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(entry);\n    });\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n    var contents = {\n        __type: \"AnalyticsAndOperator\",\n        Prefix: undefined,\n        Tags: undefined\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n        contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n    var contents = {\n        __type: \"AnalyticsConfiguration\",\n        Filter: undefined,\n        Id: undefined,\n        StorageClassAnalysis: undefined\n    };\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\n        contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlAnalyticsConfiguration(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n    var contents = {\n        __type: \"AnalyticsExportDestination\",\n        S3BucketDestination: undefined\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n    var contents = {\n        __type: \"AnalyticsFilter\",\n        And: undefined,\n        Prefix: undefined,\n        Tag: undefined\n    };\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n    var contents = {\n        __type: \"AnalyticsS3BucketDestination\",\n        Bucket: undefined,\n        BucketAccountId: undefined,\n        Format: undefined,\n        Prefix: undefined\n    };\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = output[\"Bucket\"];\n    }\n    if (output[\"BucketAccountId\"] !== undefined) {\n        contents.BucketAccountId = output[\"BucketAccountId\"];\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = output[\"Format\"];\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBucket = function (output, context) {\n    var contents = {\n        __type: \"Bucket\",\n        CreationDate: undefined,\n        Name: undefined\n    };\n    if (output[\"CreationDate\"] !== undefined) {\n        contents.CreationDate = new Date(output[\"CreationDate\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = output[\"Name\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBuckets = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlBucket(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n    var contents = {\n        __type: \"CORSRule\",\n        AllowedHeaders: undefined,\n        AllowedMethods: undefined,\n        AllowedOrigins: undefined,\n        ExposeHeaders: undefined,\n        MaxAgeSeconds: undefined\n    };\n    if (output.AllowedHeader === \"\") {\n        contents.AllowedHeaders = [];\n    }\n    if (output[\"AllowedHeader\"] !== undefined) {\n        var wrappedItem = output[\"AllowedHeader\"] instanceof Array\n            ? output[\"AllowedHeader\"]\n            : [output[\"AllowedHeader\"]];\n        contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(wrappedItem, context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents.AllowedMethods = [];\n    }\n    if (output[\"AllowedMethod\"] !== undefined) {\n        var wrappedItem = output[\"AllowedMethod\"] instanceof Array\n            ? output[\"AllowedMethod\"]\n            : [output[\"AllowedMethod\"]];\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(wrappedItem, context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents.AllowedOrigins = [];\n    }\n    if (output[\"AllowedOrigin\"] !== undefined) {\n        var wrappedItem = output[\"AllowedOrigin\"] instanceof Array\n            ? output[\"AllowedOrigin\"]\n            : [output[\"AllowedOrigin\"]];\n        contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(wrappedItem, context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents.ExposeHeaders = [];\n    }\n    if (output[\"ExposeHeader\"] !== undefined) {\n        var wrappedItem = output[\"ExposeHeader\"] instanceof Array\n            ? output[\"ExposeHeader\"]\n            : [output[\"ExposeHeader\"]];\n        contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(wrappedItem, context);\n    }\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\n        contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlCORSRule(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n    var contents = {\n        __type: \"CommonPrefix\",\n        Prefix: undefined\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlCommonPrefix(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlCondition = function (output, context) {\n    var contents = {\n        __type: \"Condition\",\n        HttpErrorCodeReturnedEquals: undefined,\n        KeyPrefixEquals: undefined\n    };\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n        contents.HttpErrorCodeReturnedEquals =\n            output[\"HttpErrorCodeReturnedEquals\"];\n    }\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\n        contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n    var contents = {\n        __type: \"CopyObjectResult\",\n        ETag: undefined,\n        LastModified: undefined\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n    var contents = {\n        __type: \"CopyPartResult\",\n        ETag: undefined,\n        LastModified: undefined\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n    var contents = {\n        __type: \"DefaultRetention\",\n        Days: undefined,\n        Mode: undefined,\n        Years: undefined\n    };\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = output[\"Mode\"];\n    }\n    if (output[\"Years\"] !== undefined) {\n        contents.Years = parseInt(output[\"Years\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n    var contents = {\n        __type: \"DeleteMarkerEntry\",\n        IsLatest: undefined,\n        Key: undefined,\n        LastModified: undefined,\n        Owner: undefined,\n        VersionId: undefined\n    };\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = output[\"IsLatest\"] == \"true\";\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n    var contents = {\n        __type: \"DeleteMarkerReplication\",\n        Status: undefined\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlDeleteMarkerEntry(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n    var contents = {\n        __type: \"DeletedObject\",\n        DeleteMarker: undefined,\n        DeleteMarkerVersionId: undefined,\n        Key: undefined,\n        VersionId: undefined\n    };\n    if (output[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n    }\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n        contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlDeletedObject(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlDestination = function (output, context) {\n    var contents = {\n        __type: \"Destination\",\n        AccessControlTranslation: undefined,\n        Account: undefined,\n        Bucket: undefined,\n        EncryptionConfiguration: undefined,\n        Metrics: undefined,\n        ReplicationTime: undefined,\n        StorageClass: undefined\n    };\n    if (output[\"AccessControlTranslation\"] !== undefined) {\n        contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = output[\"Account\"];\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = output[\"Bucket\"];\n    }\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\n        contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n    }\n    if (output[\"Metrics\"] !== undefined) {\n        contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n    }\n    if (output[\"ReplicationTime\"] !== undefined) {\n        contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n    var contents = {\n        __type: \"EncryptionConfiguration\",\n        ReplicaKmsKeyID: undefined\n    };\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n        contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXml_Error = function (output, context) {\n    var contents = {\n        __type: \"Error\",\n        Code: undefined,\n        Key: undefined,\n        Message: undefined,\n        VersionId: undefined\n    };\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = output[\"Code\"];\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = output[\"Message\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n    var contents = {\n        __type: \"ErrorDocument\",\n        Key: undefined\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrors = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXml_Error(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlEventList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(entry);\n    });\n    return contents;\n};\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n    var contents = {\n        __type: \"ExistingObjectReplication\",\n        Status: undefined\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(entry);\n    });\n    return contents;\n};\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n    var contents = {\n        __type: \"FilterRule\",\n        Name: undefined,\n        Value: undefined\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = output[\"Name\"];\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = output[\"Value\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlFilterRule(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlGrant = function (output, context) {\n    var contents = {\n        __type: \"Grant\",\n        Grantee: undefined,\n        Permission: undefined\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = output[\"Permission\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrantee = function (output, context) {\n    var contents = {\n        __type: \"Grantee\",\n        DisplayName: undefined,\n        EmailAddress: undefined,\n        ID: undefined,\n        Type: undefined,\n        URI: undefined\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = output[\"DisplayName\"];\n    }\n    if (output[\"EmailAddress\"] !== undefined) {\n        contents.EmailAddress = output[\"EmailAddress\"];\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"xsi:type\"] !== undefined) {\n        contents.Type = output[\"xsi:type\"];\n    }\n    if (output[\"URI\"] !== undefined) {\n        contents.URI = output[\"URI\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrants = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlGrant(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n    var contents = {\n        __type: \"IndexDocument\",\n        Suffix: undefined\n    };\n    if (output[\"Suffix\"] !== undefined) {\n        contents.Suffix = output[\"Suffix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInitiator = function (output, context) {\n    var contents = {\n        __type: \"Initiator\",\n        DisplayName: undefined,\n        ID: undefined\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = output[\"DisplayName\"];\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n    var contents = {\n        __type: \"InventoryConfiguration\",\n        Destination: undefined,\n        Filter: undefined,\n        Id: undefined,\n        IncludedObjectVersions: undefined,\n        IsEnabled: undefined,\n        OptionalFields: undefined,\n        Schedule: undefined\n    };\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\n        contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n    }\n    if (output[\"IsEnabled\"] !== undefined) {\n        contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n    }\n    if (output.OptionalFields === \"\") {\n        contents.OptionalFields = [];\n    }\n    if (output[\"OptionalFields\"] !== undefined &&\n        output[\"OptionalFields\"][\"Field\"] !== undefined) {\n        var wrappedItem = output[\"OptionalFields\"][\"Field\"] instanceof Array\n            ? output[\"OptionalFields\"][\"Field\"]\n            : [output[\"OptionalFields\"][\"Field\"]];\n        contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(wrappedItem, context);\n    }\n    if (output[\"Schedule\"] !== undefined) {\n        contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlInventoryConfiguration(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n    var contents = {\n        __type: \"InventoryDestination\",\n        S3BucketDestination: undefined\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n    var contents = {\n        __type: \"InventoryEncryption\",\n        SSEKMS: undefined,\n        SSES3: undefined\n    };\n    if (output[\"SSE-KMS\"] !== undefined) {\n        contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n    }\n    if (output[\"SSE-S3\"] !== undefined) {\n        contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n    var contents = {\n        __type: \"InventoryFilter\",\n        Prefix: undefined\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(entry);\n    });\n    return contents;\n};\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n    var contents = {\n        __type: \"InventoryS3BucketDestination\",\n        AccountId: undefined,\n        Bucket: undefined,\n        Encryption: undefined,\n        Format: undefined,\n        Prefix: undefined\n    };\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = output[\"AccountId\"];\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = output[\"Bucket\"];\n    }\n    if (output[\"Encryption\"] !== undefined) {\n        contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = output[\"Format\"];\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n    var contents = {\n        __type: \"InventorySchedule\",\n        Frequency: undefined\n    };\n    if (output[\"Frequency\"] !== undefined) {\n        contents.Frequency = output[\"Frequency\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n    var contents = {\n        __type: \"LambdaFunctionConfiguration\",\n        Events: undefined,\n        Filter: undefined,\n        Id: undefined,\n        LambdaFunctionArn: undefined\n    };\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        var wrappedItem = output[\"Event\"] instanceof Array ? output[\"Event\"] : [output[\"Event\"]];\n        contents.Events = deserializeAws_restXmlEventList(wrappedItem, context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"CloudFunction\"] !== undefined) {\n        contents.LambdaFunctionArn = output[\"CloudFunction\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlLambdaFunctionConfiguration(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n    var contents = {\n        __type: \"LifecycleExpiration\",\n        Date: undefined,\n        Days: undefined,\n        ExpiredObjectDeleteMarker: undefined\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = new Date(output[\"Date\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n        contents.ExpiredObjectDeleteMarker =\n            output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n    var contents = {\n        __type: \"LifecycleRule\",\n        AbortIncompleteMultipartUpload: undefined,\n        Expiration: undefined,\n        Filter: undefined,\n        ID: undefined,\n        NoncurrentVersionExpiration: undefined,\n        NoncurrentVersionTransitions: undefined,\n        Prefix: undefined,\n        Status: undefined,\n        Transitions: undefined\n    };\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n        contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n        contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents.NoncurrentVersionTransitions = [];\n    }\n    if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n        var wrappedItem = output[\"NoncurrentVersionTransition\"] instanceof Array\n            ? output[\"NoncurrentVersionTransition\"]\n            : [output[\"NoncurrentVersionTransition\"]];\n        contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(wrappedItem, context);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output.Transition === \"\") {\n        contents.Transitions = [];\n    }\n    if (output[\"Transition\"] !== undefined) {\n        var wrappedItem = output[\"Transition\"] instanceof Array\n            ? output[\"Transition\"]\n            : [output[\"Transition\"]];\n        contents.Transitions = deserializeAws_restXmlTransitionList(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n    var contents = {\n        __type: \"LifecycleRuleAndOperator\",\n        Prefix: undefined,\n        Tags: undefined\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n        contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n    var contents = {\n        __type: \"LifecycleRuleFilter\",\n        And: undefined,\n        Prefix: undefined,\n        Tag: undefined\n    };\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlLifecycleRule(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n    var contents = {\n        __type: \"LoggingEnabled\",\n        TargetBucket: undefined,\n        TargetGrants: undefined,\n        TargetPrefix: undefined\n    };\n    if (output[\"TargetBucket\"] !== undefined) {\n        contents.TargetBucket = output[\"TargetBucket\"];\n    }\n    if (output.TargetGrants === \"\") {\n        contents.TargetGrants = [];\n    }\n    if (output[\"TargetGrants\"] !== undefined &&\n        output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n        var wrappedItem = output[\"TargetGrants\"][\"Grant\"] instanceof Array\n            ? output[\"TargetGrants\"][\"Grant\"]\n            : [output[\"TargetGrants\"][\"Grant\"]];\n        contents.TargetGrants = deserializeAws_restXmlTargetGrants(wrappedItem, context);\n    }\n    if (output[\"TargetPrefix\"] !== undefined) {\n        contents.TargetPrefix = output[\"TargetPrefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetrics = function (output, context) {\n    var contents = {\n        __type: \"Metrics\",\n        EventThreshold: undefined,\n        Status: undefined\n    };\n    if (output[\"EventThreshold\"] !== undefined) {\n        contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n    var contents = {\n        __type: \"MetricsAndOperator\",\n        Prefix: undefined,\n        Tags: undefined\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n        contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n    var contents = {\n        __type: \"MetricsConfiguration\",\n        Filter: undefined,\n        Id: undefined\n    };\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlMetricsConfiguration(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n    var contents = {\n        __type: \"MetricsFilter\",\n        And: undefined,\n        Prefix: undefined,\n        Tag: undefined\n    };\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n    var contents = {\n        __type: \"MultipartUpload\",\n        Initiated: undefined,\n        Initiator: undefined,\n        Key: undefined,\n        Owner: undefined,\n        StorageClass: undefined,\n        UploadId: undefined\n    };\n    if (output[\"Initiated\"] !== undefined) {\n        contents.Initiated = new Date(output[\"Initiated\"]);\n    }\n    if (output[\"Initiator\"] !== undefined) {\n        contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    if (output[\"UploadId\"] !== undefined) {\n        contents.UploadId = output[\"UploadId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlMultipartUpload(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n    var contents = {\n        __type: \"NoncurrentVersionExpiration\",\n        NoncurrentDays: undefined\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n    var contents = {\n        __type: \"NoncurrentVersionTransition\",\n        NoncurrentDays: undefined,\n        StorageClass: undefined\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlNoncurrentVersionTransition(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n    var contents = {\n        __type: \"NotificationConfigurationFilter\",\n        Key: undefined\n    };\n    if (output[\"S3Key\"] !== undefined) {\n        contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXml_Object = function (output, context) {\n    var contents = {\n        __type: \"Object\",\n        ETag: undefined,\n        Key: undefined,\n        LastModified: undefined,\n        Owner: undefined,\n        Size: undefined,\n        StorageClass: undefined\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = parseInt(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXml_Object(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n    var contents = {\n        __type: \"ObjectLockConfiguration\",\n        ObjectLockEnabled: undefined,\n        Rule: undefined\n    };\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\n        contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n    var contents = {\n        __type: \"ObjectLockLegalHold\",\n        Status: undefined\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n    var contents = {\n        __type: \"ObjectLockRetention\",\n        Mode: undefined,\n        RetainUntilDate: undefined\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = output[\"Mode\"];\n    }\n    if (output[\"RetainUntilDate\"] !== undefined) {\n        contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n    var contents = {\n        __type: \"ObjectLockRule\",\n        DefaultRetention: undefined\n    };\n    if (output[\"DefaultRetention\"] !== undefined) {\n        contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n    var contents = {\n        __type: \"ObjectVersion\",\n        ETag: undefined,\n        IsLatest: undefined,\n        Key: undefined,\n        LastModified: undefined,\n        Owner: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        VersionId: undefined\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = output[\"IsLatest\"] == \"true\";\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = parseInt(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlObjectVersion(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlOwner = function (output, context) {\n    var contents = {\n        __type: \"Owner\",\n        DisplayName: undefined,\n        ID: undefined\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = output[\"DisplayName\"];\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlPart = function (output, context) {\n    var contents = {\n        __type: \"Part\",\n        ETag: undefined,\n        LastModified: undefined,\n        PartNumber: undefined,\n        Size: undefined\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = parseInt(output[\"PartNumber\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = parseInt(output[\"Size\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlParts = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlPart(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n    var contents = {\n        __type: \"PolicyStatus\",\n        IsPublic: undefined\n    };\n    if (output[\"IsPublic\"] !== undefined) {\n        contents.IsPublic = output[\"IsPublic\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n    var contents = {\n        __type: \"PublicAccessBlockConfiguration\",\n        BlockPublicAcls: undefined,\n        BlockPublicPolicy: undefined,\n        IgnorePublicAcls: undefined,\n        RestrictPublicBuckets: undefined\n    };\n    if (output[\"BlockPublicAcls\"] !== undefined) {\n        contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n    }\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\n        contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n    }\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\n        contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n    }\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\n        contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n    var contents = {\n        __type: \"QueueConfiguration\",\n        Events: undefined,\n        Filter: undefined,\n        Id: undefined,\n        QueueArn: undefined\n    };\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        var wrappedItem = output[\"Event\"] instanceof Array ? output[\"Event\"] : [output[\"Event\"]];\n        contents.Events = deserializeAws_restXmlEventList(wrappedItem, context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Queue\"] !== undefined) {\n        contents.QueueArn = output[\"Queue\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlQueueConfiguration(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlRedirect = function (output, context) {\n    var contents = {\n        __type: \"Redirect\",\n        HostName: undefined,\n        HttpRedirectCode: undefined,\n        Protocol: undefined,\n        ReplaceKeyPrefixWith: undefined,\n        ReplaceKeyWith: undefined\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = output[\"HostName\"];\n    }\n    if (output[\"HttpRedirectCode\"] !== undefined) {\n        contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = output[\"Protocol\"];\n    }\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n        contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n    }\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\n        contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n    var contents = {\n        __type: \"RedirectAllRequestsTo\",\n        HostName: undefined,\n        Protocol: undefined\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = output[\"HostName\"];\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = output[\"Protocol\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n    var contents = {\n        __type: \"ReplicationConfiguration\",\n        Role: undefined,\n        Rules: undefined\n    };\n    if (output[\"Role\"] !== undefined) {\n        contents.Role = output[\"Role\"];\n    }\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        var wrappedItem = output[\"Rule\"] instanceof Array ? output[\"Rule\"] : [output[\"Rule\"]];\n        contents.Rules = deserializeAws_restXmlReplicationRules(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n    var contents = {\n        __type: \"ReplicationRule\",\n        DeleteMarkerReplication: undefined,\n        Destination: undefined,\n        ExistingObjectReplication: undefined,\n        Filter: undefined,\n        ID: undefined,\n        Prefix: undefined,\n        Priority: undefined,\n        SourceSelectionCriteria: undefined,\n        Status: undefined\n    };\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\n        contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n    }\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\n        contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Priority\"] !== undefined) {\n        contents.Priority = parseInt(output[\"Priority\"]);\n    }\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\n        contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n    var contents = {\n        __type: \"ReplicationRuleAndOperator\",\n        Prefix: undefined,\n        Tags: undefined\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        var wrappedItem = output[\"Tag\"] instanceof Array ? output[\"Tag\"] : [output[\"Tag\"]];\n        contents.Tags = deserializeAws_restXmlTagSet(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n    var contents = {\n        __type: \"ReplicationRuleFilter\",\n        And: undefined,\n        Prefix: undefined,\n        Tag: undefined\n    };\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlReplicationRule(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n    var contents = {\n        __type: \"ReplicationTime\",\n        Status: undefined,\n        Time: undefined\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output[\"Time\"] !== undefined) {\n        contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n    var contents = {\n        __type: \"ReplicationTimeValue\",\n        Minutes: undefined\n    };\n    if (output[\"Minutes\"] !== undefined) {\n        contents.Minutes = parseInt(output[\"Minutes\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n    var contents = {\n        __type: \"RoutingRule\",\n        Condition: undefined,\n        Redirect: undefined\n    };\n    if (output[\"Condition\"] !== undefined) {\n        contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n    }\n    if (output[\"Redirect\"] !== undefined) {\n        contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlRoutingRule(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n    var contents = {\n        __type: \"S3KeyFilter\",\n        FilterRules: undefined\n    };\n    if (output.FilterRule === \"\") {\n        contents.FilterRules = [];\n    }\n    if (output[\"FilterRule\"] !== undefined) {\n        var wrappedItem = output[\"FilterRule\"] instanceof Array\n            ? output[\"FilterRule\"]\n            : [output[\"FilterRule\"]];\n        contents.FilterRules = deserializeAws_restXmlFilterRuleList(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n    var contents = {\n        __type: \"SSEKMS\",\n        KeyId: undefined\n    };\n    if (output[\"KeyId\"] !== undefined) {\n        contents.KeyId = output[\"KeyId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n    var contents = {\n        __type: \"SSES3\"\n    };\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n    var contents = {\n        __type: \"ServerSideEncryptionByDefault\",\n        KMSMasterKeyID: undefined,\n        SSEAlgorithm: undefined\n    };\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\n        contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n    }\n    if (output[\"SSEAlgorithm\"] !== undefined) {\n        contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n    var contents = {\n        __type: \"ServerSideEncryptionConfiguration\",\n        Rules: undefined\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        var wrappedItem = output[\"Rule\"] instanceof Array ? output[\"Rule\"] : [output[\"Rule\"]];\n        contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(wrappedItem, context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n    var contents = {\n        __type: \"ServerSideEncryptionRule\",\n        ApplyServerSideEncryptionByDefault: undefined\n    };\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n        contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlServerSideEncryptionRule(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n    var contents = {\n        __type: \"SourceSelectionCriteria\",\n        SseKmsEncryptedObjects: undefined\n    };\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n        contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n    var contents = {\n        __type: \"SseKmsEncryptedObjects\",\n        Status: undefined\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n    var contents = {\n        __type: \"StorageClassAnalysis\",\n        DataExport: undefined\n    };\n    if (output[\"DataExport\"] !== undefined) {\n        contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n    var contents = {\n        __type: \"StorageClassAnalysisDataExport\",\n        Destination: undefined,\n        OutputSchemaVersion: undefined\n    };\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n    }\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\n        contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTag = function (output, context) {\n    var contents = {\n        __type: \"Tag\",\n        Key: undefined,\n        Value: undefined\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = output[\"Value\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTagSet = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlTag(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n    var contents = {\n        __type: \"TargetGrant\",\n        Grantee: undefined,\n        Permission: undefined\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = output[\"Permission\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlTargetGrant(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n    var contents = {\n        __type: \"TopicConfiguration\",\n        Events: undefined,\n        Filter: undefined,\n        Id: undefined,\n        TopicArn: undefined\n    };\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        var wrappedItem = output[\"Event\"] instanceof Array ? output[\"Event\"] : [output[\"Event\"]];\n        contents.Events = deserializeAws_restXmlEventList(wrappedItem, context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Topic\"] !== undefined) {\n        contents.TopicArn = output[\"Topic\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlTopicConfiguration(entry, context));\n    });\n    return contents;\n};\nvar deserializeAws_restXmlTransition = function (output, context) {\n    var contents = {\n        __type: \"Transition\",\n        Date: undefined,\n        Days: undefined,\n        StorageClass: undefined\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = new Date(output[\"Date\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n    var contents = [];\n    (output || []).map(function (entry) {\n        contents.push(deserializeAws_restXmlTransition(entry, context));\n    });\n    return contents;\n};\nvar deserializeMetadata = function (output) { return ({\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n}); };\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return (context.streamCollector(streamBody) || Promise.resolve(new Uint8Array()));\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) {\n        return context.utf8Encoder(body);\n    });\n};\nvar decodeEscapedXML = function (str) {\n    return str\n        .replace(/&amp;/g, \"&\")\n        .replace(/&apos;/g, \"'\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&gt;/g, \">\")\n        .replace(/&lt;/g, \"<\");\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            var parsedObj = xmlParse(encoded, {\n                attributeNamePrefix: \"\",\n                ignoreAttributes: false,\n                parseNodeValue: false,\n                tagValueProcessor: function (val, tagName) { return decodeEscapedXML(val); }\n            });\n            var textNodeName = \"#text\";\n            var key = Object.keys(parsedObj)[0];\n            var parsedObjToReturn = parsedObj[key];\n            if (parsedObjToReturn[textNodeName]) {\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n                delete parsedObjToReturn[textNodeName];\n            }\n            return parsedObjToReturn;\n        }\n        return {};\n    });\n};\nvar loadRestXmlErrorCode = function (output, data) {\n    if (data.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restXml.js.map"]},"metadata":{},"sourceType":"module"}