{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar util_base64_browser_1 = require(\"@aws-sdk/util-base64-browser\"); //reference: https://snack.expo.io/r1JCSWRGU\n\n\nexports.streamCollector = function (stream) {\n  return readToBase64(stream).then(function (base64) {\n    return util_base64_browser_1.fromBase64(base64);\n  }).then(function (arrayBuffer) {\n    return new Uint8Array(arrayBuffer);\n  });\n};\n\nvar readToBase64 = function (blob) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n      // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n\n      var result = reader.result;\n      var dataOffset = result.indexOf(\",\") + 1;\n      resolve(result.substring(dataOffset));\n    };\n\n    reader.onabort = function () {\n      return reject(new Error(\"Read aborted\"));\n    };\n\n    reader.onerror = function () {\n      return reject(reader.error);\n    }; // reader.readAsArrayBuffer is not available in RN\n\n\n    reader.readAsDataURL(blob);\n  });\n};","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,8BAAA,CAAA,C,CAEA;;;AACa,OAAA,CAAA,eAAA,GAAmC,UAC9C,MAD8C,EAClC;AAEZ,SAAO,YAAY,CAAC,MAAD,CAAZ,CACJ,IADI,CACC,UAAA,MAAA,EAAM;AAAI,WAAA,qBAAA,CAAA,UAAA,CAAA,MAAA,CAAA;AAAkB,GAD7B,EAEJ,IAFI,CAEC,UAAA,WAAA,EAAW;AAAI,WAAA,IAAI,UAAJ,CAAA,WAAA,CAAA;AAA2B,GAF3C,CAAP;AAGD,CANY;;AAQb,IAAM,YAAY,GAAG,UAAC,IAAD,EAAW;AAC9B,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AACjC,QAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;;AACA,IAAA,MAAM,CAAC,SAAP,GAAmB,YAAA;AACjB;AACA;AACA,UAAI,MAAM,CAAC,UAAP,KAAsB,CAA1B,EAA6B;AAC3B,eAAO,MAAM,CAAC,IAAI,KAAJ,CAAU,0BAAV,CAAD,CAAb;AACD;;AACD,UAAM,MAAM,GAAG,MAAM,CAAC,MAAtB;AACA,UAAM,UAAU,GAAG,MAAM,CAAC,OAAP,CAAe,GAAf,IAAsB,CAAzC;AACA,MAAA,OAAO,CAAC,MAAM,CAAC,SAAP,CAAiB,UAAjB,CAAD,CAAP;AACD,KATD;;AAUA,IAAA,MAAM,CAAC,OAAP,GAAiB,YAAA;AAAM,aAAA,MAAM,CAAC,IAAI,KAAJ,CAAP,cAAO,CAAD,CAAN;AAAiC,KAAxD;;AACA,IAAA,MAAM,CAAC,OAAP,GAAiB,YAAA;AAAM,aAAA,MAAM,CAAC,MAAM,CAAb,KAAM,CAAN;AAAoB,KAA3C,CAbiC,CAcjC;;;AACA,IAAA,MAAM,CAAC,aAAP,CAAqB,IAArB;AACD,GAhBM,CAAP;AAiBD,CAlBD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_base64_browser_1 = require(\"@aws-sdk/util-base64-browser\");\n//reference: https://snack.expo.io/r1JCSWRGU\nexports.streamCollector = function (stream) {\n    return readToBase64(stream)\n        .then(function (base64) { return util_base64_browser_1.fromBase64(base64); })\n        .then(function (arrayBuffer) { return new Uint8Array(arrayBuffer); });\n};\nvar readToBase64 = function (blob) {\n    return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            var result = reader.result;\n            var dataOffset = result.indexOf(\",\") + 1;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = function () { return reject(new Error(\"Read aborted\")); };\n        reader.onerror = function () { return reject(reader.error); };\n        // reader.readAsArrayBuffer is not available in RN\n        reader.readAsDataURL(blob);\n    });\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}