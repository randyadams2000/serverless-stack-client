{"ast":null,"code":"var _jsxFileName = \"/Users/randyadams/notes-app-client/src/containers/Settings.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nexport default function Settings() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [stripe, setStripe] = useState(null);\n  useEffect(() => {\n    setStripe(window.Stripe(config.STRIPE_KEY));\n  }, []);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, {\n    token,\n    error\n  }) {\n    if (error) {\n      onError(error);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n      alert(\"Your card has been charged successfully!\");\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StripeProvider, {\n    stripe: stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BillingForm, {\n    isLoading: isLoading,\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/randyadams/notes-app-client/src/containers/Settings.js"],"names":["React","useState","useEffect","useHistory","API","onError","config","Settings","history","isLoading","setIsLoading","stripe","setStripe","window","Stripe","STRIPE_KEY","billUser","details","post","body","handleFormSubmit","storage","token","error","source","id","alert","push","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACF,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAACC,MAAM,CAACC,MAAP,CAAcR,MAAM,CAACS,UAArB,CAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIE,WAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,WAAOb,GAAG,CAACc,IAAJ,CAAS,OAAT,EAAkB,UAAlB,EAA8B;AACnCC,MAAAA,IAAI,EAAEF;AAD6B,KAA9B,CAAP;AAGD;;AAEH,iBAAeG,gBAAf,CAAgCC,OAAhC,EAAyC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAzC,EAA2D;AACzD,QAAIA,KAAJ,EAAW;AACTlB,MAAAA,OAAO,CAACkB,KAAD,CAAP;AACA;AACD;;AAEDb,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMM,QAAQ,CAAC;AACbK,QAAAA,OADa;AAEbG,QAAAA,MAAM,EAAEF,KAAK,CAACG;AAFD,OAAD,CAAd;AAKAC,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACAlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACD,KARD,CAQE,OAAOC,CAAP,EAAU;AACVvB,MAAAA,OAAO,CAACuB,CAAD,CAAP;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,SAAxB;AAAmC,IAAA,QAAQ,EAAEW,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASC","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\n\nexport default function Settings() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\nconst [stripe, setStripe] = useState(null);\n\nuseEffect(() => {\n  setStripe(window.Stripe(config.STRIPE_KEY));\n}, []);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\nasync function handleFormSubmit(storage, { token, error }) {\n  if (error) {\n    onError(error);\n    return;\n  }\n\n  setIsLoading(true);\n\n  try {\n    await billUser({\n      storage,\n      source: token.id\n    });\n\n    alert(\"Your card has been charged successfully!\");\n    history.push(\"/\");\n  } catch (e) {\n    onError(e);\n    setIsLoading(false);\n  }\n}\n\nreturn (\n  <div className=\"Settings\">\n    <StripeProvider stripe={stripe}>\n      <Elements>\n        <BillingForm isLoading={isLoading} onSubmit={handleFormSubmit} />\n      </Elements>\n    </StripeProvider>\n  </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}