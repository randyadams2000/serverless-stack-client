{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport function serializeAws_restJson1_1CreateAppCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps\";\n\n      if (input.CreateApplicationRequest !== undefined) {\n        body = serializeAws_restJson1_1CreateApplicationRequest(input.CreateApplicationRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateCampaignCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.WriteCampaignRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteCampaignRequest(input.WriteCampaignRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateEmailTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      if (input.EmailTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1EmailTemplateRequest(input.EmailTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateExportJobCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.ExportJobRequest !== undefined) {\n        body = serializeAws_restJson1_1ExportJobRequest(input.ExportJobRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateImportJobCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.ImportJobRequest !== undefined) {\n        body = serializeAws_restJson1_1ImportJobRequest(input.ImportJobRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateJourneyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.WriteJourneyRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteJourneyRequest(input.WriteJourneyRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreatePushTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      if (input.PushNotificationTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateSegmentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.WriteSegmentRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteSegmentRequest(input.WriteSegmentRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateSmsTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      if (input.SMSTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1SMSTemplateRequest(input.SMSTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1CreateVoiceTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      if (input.VoiceTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteAdmChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteApnsChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteApnsSandboxChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteApnsVoipChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteAppCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteBaiduChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteCampaignCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteEmailChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteEmailTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteEndpointCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.EndpointId !== undefined) {\n        labelValue = input.EndpointId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteEventStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteGcmChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteJourneyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeletePushTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteSegmentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteSmsChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteSmsTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteUserEndpointsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.UserId !== undefined) {\n        labelValue = input.UserId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: UserId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteVoiceChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1DeleteVoiceTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetAdmChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetApnsChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetApnsSandboxChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetApnsVoipChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetApnsVoipSandboxChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetAppCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetApplicationDateRangeKpiCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.KpiName !== undefined) {\n        labelValue = input.KpiName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: KpiName.\");\n      }\n\n      query = {};\n\n      if (input.EndTime !== undefined) {\n        query[\"end-time\"] = (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.StartTime !== undefined) {\n        query[\"start-time\"] = (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetApplicationSettingsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetAppsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps\";\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetBaiduChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetCampaignCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetCampaignActivitiesCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetCampaignDateRangeKpiCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      if (input.KpiName !== undefined) {\n        labelValue = input.KpiName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: KpiName.\");\n      }\n\n      query = {};\n\n      if (input.EndTime !== undefined) {\n        query[\"end-time\"] = (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.StartTime !== undefined) {\n        query[\"start-time\"] = (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetCampaignVersionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      if (input.Version !== undefined) {\n        labelValue = input.Version;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Version.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Version.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetCampaignVersionsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetCampaignsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetChannelsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetEmailChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetEmailTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetEndpointCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.EndpointId !== undefined) {\n        labelValue = input.EndpointId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetEventStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetExportJobCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JobId !== undefined) {\n        labelValue = input.JobId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JobId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetExportJobsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetGcmChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetImportJobCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JobId !== undefined) {\n        labelValue = input.JobId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JobId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetImportJobsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetJourneyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetJourneyDateRangeKpiCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      if (input.KpiName !== undefined) {\n        labelValue = input.KpiName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: KpiName.\");\n      }\n\n      query = {};\n\n      if (input.EndTime !== undefined) {\n        query[\"end-time\"] = (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.StartTime !== undefined) {\n        query[\"start-time\"] = (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString();\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyActivityId !== undefined) {\n        labelValue = input.JourneyActivityId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      query = {};\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetJourneyExecutionMetricsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      query = {};\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetPushTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSegmentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSegmentExportJobsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSegmentImportJobsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSegmentVersionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      if (input.Version !== undefined) {\n        labelValue = input.Version;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: Version.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: Version.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSegmentVersionsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSegmentsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSmsChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetSmsTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetUserEndpointsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.UserId !== undefined) {\n        labelValue = input.UserId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: UserId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetVoiceChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1GetVoiceTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1ListJourneysCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      query = {};\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Token !== undefined) {\n        query[\"token\"] = input.Token;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1ListTagsForResourceCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n      if (input.ResourceArn !== undefined) {\n        labelValue = input.ResourceArn;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1ListTemplateVersionsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      if (input.TemplateType !== undefined) {\n        labelValue = input.TemplateType;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n      }\n\n      query = {};\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1ListTemplatesCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/templates\";\n      query = {};\n\n      if (input.NextToken !== undefined) {\n        query[\"next-token\"] = input.NextToken;\n      }\n\n      if (input.PageSize !== undefined) {\n        query[\"page-size\"] = input.PageSize;\n      }\n\n      if (input.Prefix !== undefined) {\n        query[\"prefix\"] = input.Prefix;\n      }\n\n      if (input.TemplateType !== undefined) {\n        query[\"template-type\"] = input.TemplateType;\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"GET\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1PhoneNumberValidateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/phone/number/validate\";\n\n      if (input.NumberValidateRequest !== undefined) {\n        body = serializeAws_restJson1_1NumberValidateRequest(input.NumberValidateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1PutEventStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.WriteEventStream !== undefined) {\n        body = serializeAws_restJson1_1WriteEventStream(input.WriteEventStream, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1PutEventsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.EventsRequest !== undefined) {\n        body = serializeAws_restJson1_1EventsRequest(input.EventsRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1RemoveAttributesCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.AttributeType !== undefined) {\n        labelValue = input.AttributeType;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n      }\n\n      if (input.UpdateAttributesRequest !== undefined) {\n        body = serializeAws_restJson1_1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1SendMessagesCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.MessageRequest !== undefined) {\n        body = serializeAws_restJson1_1MessageRequest(input.MessageRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1SendUsersMessagesCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SendUsersMessageRequest !== undefined) {\n        body = serializeAws_restJson1_1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1TagResourceCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n      if (input.ResourceArn !== undefined) {\n        labelValue = input.ResourceArn;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n      }\n\n      if (input.TagsModel !== undefined) {\n        body = serializeAws_restJson1_1TagsModel(input.TagsModel, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"POST\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UntagResourceCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"\";\n      resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n      if (input.ResourceArn !== undefined) {\n        labelValue = input.ResourceArn;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n      }\n\n      query = {};\n\n      if (input.TagKeys !== undefined) {\n        query[\"tagKeys\"] = (input.TagKeys || []).map(function (_entry) {\n          return _entry;\n        });\n      }\n\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"DELETE\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateAdmChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.ADMChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1ADMChannelRequest(input.ADMChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateApnsChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.APNSChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1APNSChannelRequest(input.APNSChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateApnsSandboxChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.APNSSandboxChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateApnsVoipChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.APNSVoipChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.APNSVoipSandboxChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateApplicationSettingsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.WriteApplicationSettingsRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateBaiduChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.BaiduChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1BaiduChannelRequest(input.BaiduChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateCampaignCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.CampaignId !== undefined) {\n        labelValue = input.CampaignId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n      }\n\n      if (input.WriteCampaignRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteCampaignRequest(input.WriteCampaignRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateEmailChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.EmailChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1EmailChannelRequest(input.EmailChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateEmailTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.CreateNewVersion !== undefined) {\n        query[\"create-new-version\"] = input.CreateNewVersion.toString();\n      }\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      if (input.EmailTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1EmailTemplateRequest(input.EmailTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateEndpointCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.EndpointId !== undefined) {\n        labelValue = input.EndpointId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n      }\n\n      if (input.EndpointRequest !== undefined) {\n        body = serializeAws_restJson1_1EndpointRequest(input.EndpointRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateEndpointsBatchCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.EndpointBatchRequest !== undefined) {\n        body = serializeAws_restJson1_1EndpointBatchRequest(input.EndpointBatchRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateGcmChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.GCMChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1GCMChannelRequest(input.GCMChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateJourneyCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      if (input.WriteJourneyRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteJourneyRequest(input.WriteJourneyRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateJourneyStateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.JourneyId !== undefined) {\n        labelValue = input.JourneyId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n      }\n\n      if (input.JourneyStateRequest !== undefined) {\n        body = serializeAws_restJson1_1JourneyStateRequest(input.JourneyStateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdatePushTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.CreateNewVersion !== undefined) {\n        query[\"create-new-version\"] = input.CreateNewVersion.toString();\n      }\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      if (input.PushNotificationTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateSegmentCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SegmentId !== undefined) {\n        labelValue = input.SegmentId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n      }\n\n      if (input.WriteSegmentRequest !== undefined) {\n        body = serializeAws_restJson1_1WriteSegmentRequest(input.WriteSegmentRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateSmsChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.SMSChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1SMSChannelRequest(input.SMSChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateSmsTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.CreateNewVersion !== undefined) {\n        query[\"create-new-version\"] = input.CreateNewVersion.toString();\n      }\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      if (input.SMSTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1SMSTemplateRequest(input.SMSTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateTemplateActiveVersionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      if (input.TemplateType !== undefined) {\n        labelValue = input.TemplateType;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n      }\n\n      if (input.TemplateActiveVersionRequest !== undefined) {\n        body = serializeAws_restJson1_1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateVoiceChannelCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n      if (input.ApplicationId !== undefined) {\n        labelValue = input.ApplicationId;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n      }\n\n      if (input.VoiceChannelRequest !== undefined) {\n        body = serializeAws_restJson1_1VoiceChannelRequest(input.VoiceChannelRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        body: body\n      }))];\n    });\n  });\n}\nexport function serializeAws_restJson1_1UpdateVoiceTemplateCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/json\";\n      resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n      if (input.TemplateName !== undefined) {\n        labelValue = input.TemplateName;\n\n        if (labelValue.length <= 0) {\n          throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n        }\n\n        resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n      } else {\n        throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n      }\n\n      query = {};\n\n      if (input.CreateNewVersion !== undefined) {\n        query[\"create-new-version\"] = input.CreateNewVersion.toString();\n      }\n\n      if (input.Version !== undefined) {\n        query[\"version\"] = input.Version;\n      }\n\n      if (input.VoiceTemplateRequest !== undefined) {\n        body = serializeAws_restJson1_1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n      }\n\n      if (body === undefined) {\n        body = {};\n      }\n\n      body = JSON.stringify(body);\n      return [2\n      /*return*/\n      , new __HttpRequest(__assign(__assign({}, context.endpoint), {\n        protocol: \"https\",\n        method: \"PUT\",\n        headers: headers,\n        path: resolvedPath,\n        query: query,\n        body: body\n      }))];\n    });\n  });\n}\nexport function deserializeAws_restJson1_1CreateAppCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateAppResponse\",\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1_1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateAppCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateCampaignCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateCampaignResponse\",\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateCampaignCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateEmailTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateEmailTemplateResponse\",\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateEmailTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateExportJobCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateExportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateExportJobResponse\",\n            ExportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1_1ExportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateExportJobCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateImportJobCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateImportJobResponse\",\n            ImportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1_1ImportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateImportJobCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateJourneyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateJourneyResponse\",\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateJourneyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreatePushTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreatePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreatePushTemplateResponse\",\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreatePushTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateSegmentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateSegmentResponse\",\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateSegmentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateSmsTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateSmsTemplateResponse\",\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateSmsTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1CreateVoiceTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1CreateVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateVoiceTemplateResponse\",\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1CreateVoiceTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteAdmChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteAdmChannelResponse\",\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1_1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteAdmChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteApnsChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteApnsChannelResponse\",\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1_1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteApnsChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteApnsSandboxChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteApnsSandboxChannelResponse\",\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1_1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteApnsSandboxChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteApnsVoipChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteApnsVoipChannelResponse\",\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1_1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteApnsVoipChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteApnsVoipSandboxChannelResponse\",\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1_1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteAppCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteAppResponse\",\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1_1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteAppCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteBaiduChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteBaiduChannelResponse\",\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1_1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteBaiduChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteCampaignCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteCampaignResponse\",\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteCampaignCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteEmailChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteEmailChannelResponse\",\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1_1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteEmailChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteEmailTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteEmailTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteEmailTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteEndpointCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteEndpointResponse\",\n            EndpointResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1_1EndpointResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteEndpointCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteEventStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteEventStreamResponse\",\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1_1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteEventStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteGcmChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteGcmChannelResponse\",\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1_1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteGcmChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteJourneyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteJourneyResponse\",\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteJourneyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeletePushTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeletePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeletePushTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeletePushTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteSegmentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteSegmentResponse\",\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteSegmentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteSmsChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteSmsChannelResponse\",\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1_1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteSmsChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteSmsTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteSmsTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteSmsTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteUserEndpointsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteUserEndpointsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteUserEndpointsResponse\",\n            EndpointsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1_1EndpointsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteUserEndpointsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteVoiceChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteVoiceChannelResponse\",\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1_1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteVoiceChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1DeleteVoiceTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1DeleteVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteVoiceTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1DeleteVoiceTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetAdmChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetAdmChannelResponse\",\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1_1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetAdmChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetApnsChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetApnsChannelResponse\",\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1_1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetApnsChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetApnsSandboxChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetApnsSandboxChannelResponse\",\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1_1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetApnsSandboxChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetApnsVoipChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetApnsVoipChannelResponse\",\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1_1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetApnsVoipChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetApnsVoipSandboxChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetApnsVoipSandboxChannelResponse\",\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1_1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetApnsVoipSandboxChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetAppCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetAppResponse\",\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1_1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetAppCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetApplicationDateRangeKpiCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetApplicationDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetApplicationDateRangeKpiResponse\",\n            ApplicationDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1_1ApplicationDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetApplicationDateRangeKpiCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetApplicationSettingsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetApplicationSettingsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetApplicationSettingsResponse\",\n            ApplicationSettingsResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1_1ApplicationSettingsResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetApplicationSettingsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetAppsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetAppsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetAppsResponse\",\n            ApplicationsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationsResponse = deserializeAws_restJson1_1ApplicationsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetAppsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetBaiduChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBaiduChannelResponse\",\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1_1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetBaiduChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetCampaignCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetCampaignResponse\",\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetCampaignCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetCampaignActivitiesCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetCampaignActivitiesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetCampaignActivitiesResponse\",\n            ActivitiesResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ActivitiesResponse = deserializeAws_restJson1_1ActivitiesResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetCampaignActivitiesCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetCampaignDateRangeKpiCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetCampaignDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetCampaignDateRangeKpiResponse\",\n            CampaignDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1_1CampaignDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetCampaignDateRangeKpiCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetCampaignVersionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetCampaignVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetCampaignVersionResponse\",\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetCampaignVersionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetCampaignVersionsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetCampaignVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetCampaignVersionsResponse\",\n            CampaignsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1_1CampaignsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetCampaignVersionsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetCampaignsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetCampaignsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetCampaignsResponse\",\n            CampaignsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1_1CampaignsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetCampaignsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetChannelsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetChannelsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetChannelsResponse\",\n            ChannelsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ChannelsResponse = deserializeAws_restJson1_1ChannelsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetChannelsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetEmailChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetEmailChannelResponse\",\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1_1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetEmailChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetEmailTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetEmailTemplateResponse\",\n            EmailTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailTemplateResponse = deserializeAws_restJson1_1EmailTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetEmailTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetEndpointCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetEndpointResponse\",\n            EndpointResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1_1EndpointResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetEndpointCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetEventStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetEventStreamResponse\",\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1_1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetEventStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetExportJobCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetExportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetExportJobResponse\",\n            ExportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1_1ExportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetExportJobCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetExportJobsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetExportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetExportJobsResponse\",\n            ExportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1_1ExportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetExportJobsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetGcmChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetGcmChannelResponse\",\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1_1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetGcmChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetImportJobCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetImportJobResponse\",\n            ImportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1_1ImportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetImportJobCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetImportJobsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetImportJobsResponse\",\n            ImportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1_1ImportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetImportJobsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetJourneyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetJourneyResponse\",\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetJourneyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetJourneyDateRangeKpiCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetJourneyDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetJourneyDateRangeKpiResponse\",\n            JourneyDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1_1JourneyDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetJourneyDateRangeKpiCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetJourneyExecutionActivityMetricsResponse\",\n            JourneyExecutionActivityMetricsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1_1JourneyExecutionActivityMetricsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetJourneyExecutionMetricsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetJourneyExecutionMetricsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetJourneyExecutionMetricsResponse\",\n            JourneyExecutionMetricsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1_1JourneyExecutionMetricsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetJourneyExecutionMetricsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetPushTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetPushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetPushTemplateResponse\",\n            PushNotificationTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PushNotificationTemplateResponse = deserializeAws_restJson1_1PushNotificationTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetPushTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSegmentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSegmentResponse\",\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSegmentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSegmentExportJobsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSegmentExportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSegmentExportJobsResponse\",\n            ExportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1_1ExportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSegmentExportJobsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSegmentImportJobsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSegmentImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSegmentImportJobsResponse\",\n            ImportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1_1ImportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSegmentImportJobsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSegmentVersionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSegmentVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSegmentVersionResponse\",\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSegmentVersionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSegmentVersionsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSegmentVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSegmentVersionsResponse\",\n            SegmentsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1_1SegmentsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSegmentVersionsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSegmentsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSegmentsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSegmentsResponse\",\n            SegmentsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1_1SegmentsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSegmentsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSmsChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSmsChannelResponse\",\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1_1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSmsChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetSmsTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetSmsTemplateResponse\",\n            SMSTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSTemplateResponse = deserializeAws_restJson1_1SMSTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetSmsTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetUserEndpointsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetUserEndpointsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetUserEndpointsResponse\",\n            EndpointsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1_1EndpointsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetUserEndpointsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetVoiceChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetVoiceChannelResponse\",\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1_1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetVoiceChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1GetVoiceTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1GetVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetVoiceTemplateResponse\",\n            VoiceTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceTemplateResponse = deserializeAws_restJson1_1VoiceTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1GetVoiceTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1ListJourneysCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1ListJourneysCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListJourneysResponse\",\n            JourneysResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneysResponse = deserializeAws_restJson1_1JourneysResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1ListJourneysCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1ListTagsForResourceCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1ListTagsForResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListTagsForResourceResponse\",\n            TagsModel: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TagsModel = deserializeAws_restJson1_1TagsModel(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1ListTagsForResourceCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1ListTemplateVersionsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1ListTemplateVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListTemplateVersionsResponse\",\n            TemplateVersionsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TemplateVersionsResponse = deserializeAws_restJson1_1TemplateVersionsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1ListTemplateVersionsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1ListTemplatesCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1ListTemplatesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListTemplatesResponse\",\n            TemplatesResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TemplatesResponse = deserializeAws_restJson1_1TemplatesResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1ListTemplatesCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1PhoneNumberValidateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1PhoneNumberValidateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PhoneNumberValidateResponse\",\n            NumberValidateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.NumberValidateResponse = deserializeAws_restJson1_1NumberValidateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1PhoneNumberValidateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1PutEventStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1PutEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutEventStreamResponse\",\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1_1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1PutEventStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1PutEventsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1PutEventsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutEventsResponse\",\n            EventsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventsResponse = deserializeAws_restJson1_1EventsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1PutEventsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1RemoveAttributesCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1RemoveAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"RemoveAttributesResponse\",\n            AttributesResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AttributesResource = deserializeAws_restJson1_1AttributesResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1RemoveAttributesCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1SendMessagesCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1SendMessagesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"SendMessagesResponse\",\n            MessageResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageResponse = deserializeAws_restJson1_1MessageResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1SendMessagesCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1SendUsersMessagesCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1SendUsersMessagesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"SendUsersMessagesResponse\",\n            SendUsersMessageResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SendUsersMessageResponse = deserializeAws_restJson1_1SendUsersMessageResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1SendUsersMessagesCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1TagResourceCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1TagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1TagResourceCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UntagResourceCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UntagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UntagResourceCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateAdmChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateAdmChannelResponse\",\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1_1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateAdmChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateApnsChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateApnsChannelResponse\",\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1_1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateApnsChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateApnsSandboxChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateApnsSandboxChannelResponse\",\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1_1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateApnsSandboxChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateApnsVoipChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateApnsVoipChannelResponse\",\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1_1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateApnsVoipChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateApnsVoipSandboxChannelResponse\",\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1_1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateApplicationSettingsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateApplicationSettingsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateApplicationSettingsResponse\",\n            ApplicationSettingsResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1_1ApplicationSettingsResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateApplicationSettingsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateBaiduChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateBaiduChannelResponse\",\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1_1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateBaiduChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateCampaignCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateCampaignResponse\",\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateCampaignCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateEmailChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateEmailChannelResponse\",\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1_1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateEmailChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateEmailTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateEmailTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateEmailTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateEndpointCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateEndpointResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateEndpointCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateEndpointsBatchCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateEndpointsBatchCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateEndpointsBatchResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateEndpointsBatchCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateGcmChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateGcmChannelResponse\",\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1_1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateGcmChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateJourneyCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateJourneyResponse\",\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateJourneyCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateJourneyStateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateJourneyStateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateJourneyStateResponse\",\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateJourneyStateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdatePushTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdatePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdatePushTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdatePushTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateSegmentCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateSegmentResponse\",\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateSegmentCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateSmsChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateSmsChannelResponse\",\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1_1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateSmsChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateSmsTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateSmsTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateSmsTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateTemplateActiveVersionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateTemplateActiveVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateTemplateActiveVersionResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateTemplateActiveVersionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateVoiceChannelCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateVoiceChannelResponse\",\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1_1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateVoiceChannelCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_restJson1_1UpdateVoiceTemplateCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1_1UpdateVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateVoiceTemplateResponse\",\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_restJson1_1UpdateVoiceTemplateCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nvar deserializeAws_restJson1_1BadRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1_1ForbiddenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ForbiddenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1_1InternalServerErrorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalServerErrorException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1_1MethodNotAllowedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MethodNotAllowedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1_1NotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1_1ADMChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ClientId !== undefined) {\n    bodyParams[\"ClientId\"] = input.ClientId;\n  }\n\n  if (input.ClientSecret !== undefined) {\n    bodyParams[\"ClientSecret\"] = input.ClientSecret;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1ADMMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.ConsolidationKey !== undefined) {\n    bodyParams[\"ConsolidationKey\"] = input.ConsolidationKey;\n  }\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n  }\n\n  if (input.ExpiresAfter !== undefined) {\n    bodyParams[\"ExpiresAfter\"] = input.ExpiresAfter;\n  }\n\n  if (input.IconReference !== undefined) {\n    bodyParams[\"IconReference\"] = input.IconReference;\n  }\n\n  if (input.ImageIconUrl !== undefined) {\n    bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n  }\n\n  if (input.ImageUrl !== undefined) {\n    bodyParams[\"ImageUrl\"] = input.ImageUrl;\n  }\n\n  if (input.MD5 !== undefined) {\n    bodyParams[\"MD5\"] = input.MD5;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.SilentPush !== undefined) {\n    bodyParams[\"SilentPush\"] = input.SilentPush;\n  }\n\n  if (input.SmallImageIconUrl !== undefined) {\n    bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1APNSChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BundleId !== undefined) {\n    bodyParams[\"BundleId\"] = input.BundleId;\n  }\n\n  if (input.Certificate !== undefined) {\n    bodyParams[\"Certificate\"] = input.Certificate;\n  }\n\n  if (input.DefaultAuthenticationMethod !== undefined) {\n    bodyParams[\"DefaultAuthenticationMethod\"] = input.DefaultAuthenticationMethod;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.PrivateKey !== undefined) {\n    bodyParams[\"PrivateKey\"] = input.PrivateKey;\n  }\n\n  if (input.TeamId !== undefined) {\n    bodyParams[\"TeamId\"] = input.TeamId;\n  }\n\n  if (input.TokenKey !== undefined) {\n    bodyParams[\"TokenKey\"] = input.TokenKey;\n  }\n\n  if (input.TokenKeyId !== undefined) {\n    bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1APNSMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.APNSPushType !== undefined) {\n    bodyParams[\"APNSPushType\"] = input.APNSPushType;\n  }\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Badge !== undefined) {\n    bodyParams[\"Badge\"] = input.Badge;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.Category !== undefined) {\n    bodyParams[\"Category\"] = input.Category;\n  }\n\n  if (input.CollapseId !== undefined) {\n    bodyParams[\"CollapseId\"] = input.CollapseId;\n  }\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n  }\n\n  if (input.MediaUrl !== undefined) {\n    bodyParams[\"MediaUrl\"] = input.MediaUrl;\n  }\n\n  if (input.PreferredAuthenticationMethod !== undefined) {\n    bodyParams[\"PreferredAuthenticationMethod\"] = input.PreferredAuthenticationMethod;\n  }\n\n  if (input.Priority !== undefined) {\n    bodyParams[\"Priority\"] = input.Priority;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.SilentPush !== undefined) {\n    bodyParams[\"SilentPush\"] = input.SilentPush;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.ThreadId !== undefined) {\n    bodyParams[\"ThreadId\"] = input.ThreadId;\n  }\n\n  if (input.TimeToLive !== undefined) {\n    bodyParams[\"TimeToLive\"] = input.TimeToLive;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1APNSPushNotificationTemplate = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.MediaUrl !== undefined) {\n    bodyParams[\"MediaUrl\"] = input.MediaUrl;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1APNSSandboxChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BundleId !== undefined) {\n    bodyParams[\"BundleId\"] = input.BundleId;\n  }\n\n  if (input.Certificate !== undefined) {\n    bodyParams[\"Certificate\"] = input.Certificate;\n  }\n\n  if (input.DefaultAuthenticationMethod !== undefined) {\n    bodyParams[\"DefaultAuthenticationMethod\"] = input.DefaultAuthenticationMethod;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.PrivateKey !== undefined) {\n    bodyParams[\"PrivateKey\"] = input.PrivateKey;\n  }\n\n  if (input.TeamId !== undefined) {\n    bodyParams[\"TeamId\"] = input.TeamId;\n  }\n\n  if (input.TokenKey !== undefined) {\n    bodyParams[\"TokenKey\"] = input.TokenKey;\n  }\n\n  if (input.TokenKeyId !== undefined) {\n    bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1APNSVoipChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BundleId !== undefined) {\n    bodyParams[\"BundleId\"] = input.BundleId;\n  }\n\n  if (input.Certificate !== undefined) {\n    bodyParams[\"Certificate\"] = input.Certificate;\n  }\n\n  if (input.DefaultAuthenticationMethod !== undefined) {\n    bodyParams[\"DefaultAuthenticationMethod\"] = input.DefaultAuthenticationMethod;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.PrivateKey !== undefined) {\n    bodyParams[\"PrivateKey\"] = input.PrivateKey;\n  }\n\n  if (input.TeamId !== undefined) {\n    bodyParams[\"TeamId\"] = input.TeamId;\n  }\n\n  if (input.TokenKey !== undefined) {\n    bodyParams[\"TokenKey\"] = input.TokenKey;\n  }\n\n  if (input.TokenKeyId !== undefined) {\n    bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1APNSVoipSandboxChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BundleId !== undefined) {\n    bodyParams[\"BundleId\"] = input.BundleId;\n  }\n\n  if (input.Certificate !== undefined) {\n    bodyParams[\"Certificate\"] = input.Certificate;\n  }\n\n  if (input.DefaultAuthenticationMethod !== undefined) {\n    bodyParams[\"DefaultAuthenticationMethod\"] = input.DefaultAuthenticationMethod;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.PrivateKey !== undefined) {\n    bodyParams[\"PrivateKey\"] = input.PrivateKey;\n  }\n\n  if (input.TeamId !== undefined) {\n    bodyParams[\"TeamId\"] = input.TeamId;\n  }\n\n  if (input.TokenKey !== undefined) {\n    bodyParams[\"TokenKey\"] = input.TokenKey;\n  }\n\n  if (input.TokenKeyId !== undefined) {\n    bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1Activity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ConditionalSplit !== undefined) {\n    bodyParams[\"ConditionalSplit\"] = serializeAws_restJson1_1ConditionalSplitActivity(input.ConditionalSplit, context);\n  }\n\n  if (input.Description !== undefined) {\n    bodyParams[\"Description\"] = input.Description;\n  }\n\n  if (input.EMAIL !== undefined) {\n    bodyParams[\"EMAIL\"] = serializeAws_restJson1_1EmailMessageActivity(input.EMAIL, context);\n  }\n\n  if (input.Holdout !== undefined) {\n    bodyParams[\"Holdout\"] = serializeAws_restJson1_1HoldoutActivity(input.Holdout, context);\n  }\n\n  if (input.MultiCondition !== undefined) {\n    bodyParams[\"MultiCondition\"] = serializeAws_restJson1_1MultiConditionalSplitActivity(input.MultiCondition, context);\n  }\n\n  if (input.RandomSplit !== undefined) {\n    bodyParams[\"RandomSplit\"] = serializeAws_restJson1_1RandomSplitActivity(input.RandomSplit, context);\n  }\n\n  if (input.Wait !== undefined) {\n    bodyParams[\"Wait\"] = serializeAws_restJson1_1WaitActivity(input.Wait, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1AddressConfiguration = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BodyOverride !== undefined) {\n    bodyParams[\"BodyOverride\"] = input.BodyOverride;\n  }\n\n  if (input.ChannelType !== undefined) {\n    bodyParams[\"ChannelType\"] = input.ChannelType;\n  }\n\n  if (input.Context !== undefined) {\n    bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.TitleOverride !== undefined) {\n    bodyParams[\"TitleOverride\"] = input.TitleOverride;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1AndroidPushNotificationTemplate = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.ImageIconUrl !== undefined) {\n    bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n  }\n\n  if (input.ImageUrl !== undefined) {\n    bodyParams[\"ImageUrl\"] = input.ImageUrl;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.SmallImageIconUrl !== undefined) {\n    bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1AttributeDimension = function (input, context) {\n  var bodyParams = {};\n\n  if (input.AttributeType !== undefined) {\n    bodyParams[\"AttributeType\"] = input.AttributeType;\n  }\n\n  if (input.Values !== undefined) {\n    bodyParams[\"Values\"] = serializeAws_restJson1_1ListOf__string(input.Values, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1BaiduChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ApiKey !== undefined) {\n    bodyParams[\"ApiKey\"] = input.ApiKey;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.SecretKey !== undefined) {\n    bodyParams[\"SecretKey\"] = input.SecretKey;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1BaiduMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n  }\n\n  if (input.IconReference !== undefined) {\n    bodyParams[\"IconReference\"] = input.IconReference;\n  }\n\n  if (input.ImageIconUrl !== undefined) {\n    bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n  }\n\n  if (input.ImageUrl !== undefined) {\n    bodyParams[\"ImageUrl\"] = input.ImageUrl;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.SilentPush !== undefined) {\n    bodyParams[\"SilentPush\"] = input.SilentPush;\n  }\n\n  if (input.SmallImageIconUrl !== undefined) {\n    bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.TimeToLive !== undefined) {\n    bodyParams[\"TimeToLive\"] = input.TimeToLive;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1CampaignEmailMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.FromAddress !== undefined) {\n    bodyParams[\"FromAddress\"] = input.FromAddress;\n  }\n\n  if (input.HtmlBody !== undefined) {\n    bodyParams[\"HtmlBody\"] = input.HtmlBody;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1CampaignEventFilter = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Dimensions !== undefined) {\n    bodyParams[\"Dimensions\"] = serializeAws_restJson1_1EventDimensions(input.Dimensions, context);\n  }\n\n  if (input.FilterType !== undefined) {\n    bodyParams[\"FilterType\"] = input.FilterType;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1CampaignHook = function (input, context) {\n  var bodyParams = {};\n\n  if (input.LambdaFunctionName !== undefined) {\n    bodyParams[\"LambdaFunctionName\"] = input.LambdaFunctionName;\n  }\n\n  if (input.Mode !== undefined) {\n    bodyParams[\"Mode\"] = input.Mode;\n  }\n\n  if (input.WebUrl !== undefined) {\n    bodyParams[\"WebUrl\"] = input.WebUrl;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1CampaignLimits = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Daily !== undefined) {\n    bodyParams[\"Daily\"] = input.Daily;\n  }\n\n  if (input.MaximumDuration !== undefined) {\n    bodyParams[\"MaximumDuration\"] = input.MaximumDuration;\n  }\n\n  if (input.MessagesPerSecond !== undefined) {\n    bodyParams[\"MessagesPerSecond\"] = input.MessagesPerSecond;\n  }\n\n  if (input.Total !== undefined) {\n    bodyParams[\"Total\"] = input.Total;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1CampaignSmsMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.MessageType !== undefined) {\n    bodyParams[\"MessageType\"] = input.MessageType;\n  }\n\n  if (input.SenderId !== undefined) {\n    bodyParams[\"SenderId\"] = input.SenderId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1Condition = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Conditions !== undefined) {\n    bodyParams[\"Conditions\"] = serializeAws_restJson1_1ListOfSimpleCondition(input.Conditions, context);\n  }\n\n  if (input.Operator !== undefined) {\n    bodyParams[\"Operator\"] = input.Operator;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1ConditionalSplitActivity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Condition !== undefined) {\n    bodyParams[\"Condition\"] = serializeAws_restJson1_1Condition(input.Condition, context);\n  }\n\n  if (input.EvaluationWaitTime !== undefined) {\n    bodyParams[\"EvaluationWaitTime\"] = serializeAws_restJson1_1WaitTime(input.EvaluationWaitTime, context);\n  }\n\n  if (input.FalseActivity !== undefined) {\n    bodyParams[\"FalseActivity\"] = input.FalseActivity;\n  }\n\n  if (input.TrueActivity !== undefined) {\n    bodyParams[\"TrueActivity\"] = input.TrueActivity;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1CreateApplicationRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Name !== undefined) {\n    bodyParams[\"Name\"] = input.Name;\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1DefaultMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1DefaultPushNotificationMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n  }\n\n  if (input.SilentPush !== undefined) {\n    bodyParams[\"SilentPush\"] = input.SilentPush;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1DefaultPushNotificationTemplate = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1DirectMessageConfiguration = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ADMMessage !== undefined) {\n    bodyParams[\"ADMMessage\"] = serializeAws_restJson1_1ADMMessage(input.ADMMessage, context);\n  }\n\n  if (input.APNSMessage !== undefined) {\n    bodyParams[\"APNSMessage\"] = serializeAws_restJson1_1APNSMessage(input.APNSMessage, context);\n  }\n\n  if (input.BaiduMessage !== undefined) {\n    bodyParams[\"BaiduMessage\"] = serializeAws_restJson1_1BaiduMessage(input.BaiduMessage, context);\n  }\n\n  if (input.DefaultMessage !== undefined) {\n    bodyParams[\"DefaultMessage\"] = serializeAws_restJson1_1DefaultMessage(input.DefaultMessage, context);\n  }\n\n  if (input.DefaultPushNotificationMessage !== undefined) {\n    bodyParams[\"DefaultPushNotificationMessage\"] = serializeAws_restJson1_1DefaultPushNotificationMessage(input.DefaultPushNotificationMessage, context);\n  }\n\n  if (input.EmailMessage !== undefined) {\n    bodyParams[\"EmailMessage\"] = serializeAws_restJson1_1EmailMessage(input.EmailMessage, context);\n  }\n\n  if (input.GCMMessage !== undefined) {\n    bodyParams[\"GCMMessage\"] = serializeAws_restJson1_1GCMMessage(input.GCMMessage, context);\n  }\n\n  if (input.SMSMessage !== undefined) {\n    bodyParams[\"SMSMessage\"] = serializeAws_restJson1_1SMSMessage(input.SMSMessage, context);\n  }\n\n  if (input.VoiceMessage !== undefined) {\n    bodyParams[\"VoiceMessage\"] = serializeAws_restJson1_1VoiceMessage(input.VoiceMessage, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EmailChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ConfigurationSet !== undefined) {\n    bodyParams[\"ConfigurationSet\"] = input.ConfigurationSet;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.FromAddress !== undefined) {\n    bodyParams[\"FromAddress\"] = input.FromAddress;\n  }\n\n  if (input.Identity !== undefined) {\n    bodyParams[\"Identity\"] = input.Identity;\n  }\n\n  if (input.RoleArn !== undefined) {\n    bodyParams[\"RoleArn\"] = input.RoleArn;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EmailMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.FeedbackForwardingAddress !== undefined) {\n    bodyParams[\"FeedbackForwardingAddress\"] = input.FeedbackForwardingAddress;\n  }\n\n  if (input.FromAddress !== undefined) {\n    bodyParams[\"FromAddress\"] = input.FromAddress;\n  }\n\n  if (input.RawEmail !== undefined) {\n    bodyParams[\"RawEmail\"] = serializeAws_restJson1_1RawEmail(input.RawEmail, context);\n  }\n\n  if (input.ReplyToAddresses !== undefined) {\n    bodyParams[\"ReplyToAddresses\"] = serializeAws_restJson1_1ListOf__string(input.ReplyToAddresses, context);\n  }\n\n  if (input.SimpleEmail !== undefined) {\n    bodyParams[\"SimpleEmail\"] = serializeAws_restJson1_1SimpleEmail(input.SimpleEmail, context);\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EmailMessageActivity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.MessageConfig !== undefined) {\n    bodyParams[\"MessageConfig\"] = serializeAws_restJson1_1JourneyEmailMessage(input.MessageConfig, context);\n  }\n\n  if (input.NextActivity !== undefined) {\n    bodyParams[\"NextActivity\"] = input.NextActivity;\n  }\n\n  if (input.TemplateName !== undefined) {\n    bodyParams[\"TemplateName\"] = input.TemplateName;\n  }\n\n  if (input.TemplateVersion !== undefined) {\n    bodyParams[\"TemplateVersion\"] = input.TemplateVersion;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EmailTemplateRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.DefaultSubstitutions !== undefined) {\n    bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n  }\n\n  if (input.HtmlPart !== undefined) {\n    bodyParams[\"HtmlPart\"] = input.HtmlPart;\n  }\n\n  if (input.Subject !== undefined) {\n    bodyParams[\"Subject\"] = input.Subject;\n  }\n\n  if (input.TemplateDescription !== undefined) {\n    bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n  }\n\n  if (input.TextPart !== undefined) {\n    bodyParams[\"TextPart\"] = input.TextPart;\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointBatchItem = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Address !== undefined) {\n    bodyParams[\"Address\"] = input.Address;\n  }\n\n  if (input.Attributes !== undefined) {\n    bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.Attributes, context);\n  }\n\n  if (input.ChannelType !== undefined) {\n    bodyParams[\"ChannelType\"] = input.ChannelType;\n  }\n\n  if (input.Demographic !== undefined) {\n    bodyParams[\"Demographic\"] = serializeAws_restJson1_1EndpointDemographic(input.Demographic, context);\n  }\n\n  if (input.EffectiveDate !== undefined) {\n    bodyParams[\"EffectiveDate\"] = input.EffectiveDate;\n  }\n\n  if (input.EndpointStatus !== undefined) {\n    bodyParams[\"EndpointStatus\"] = input.EndpointStatus;\n  }\n\n  if (input.Id !== undefined) {\n    bodyParams[\"Id\"] = input.Id;\n  }\n\n  if (input.Location !== undefined) {\n    bodyParams[\"Location\"] = serializeAws_restJson1_1EndpointLocation(input.Location, context);\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n  }\n\n  if (input.OptOut !== undefined) {\n    bodyParams[\"OptOut\"] = input.OptOut;\n  }\n\n  if (input.RequestId !== undefined) {\n    bodyParams[\"RequestId\"] = input.RequestId;\n  }\n\n  if (input.User !== undefined) {\n    bodyParams[\"User\"] = serializeAws_restJson1_1EndpointUser(input.User, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointBatchRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Item !== undefined) {\n    bodyParams[\"Item\"] = serializeAws_restJson1_1ListOfEndpointBatchItem(input.Item, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointDemographic = function (input, context) {\n  var bodyParams = {};\n\n  if (input.AppVersion !== undefined) {\n    bodyParams[\"AppVersion\"] = input.AppVersion;\n  }\n\n  if (input.Locale !== undefined) {\n    bodyParams[\"Locale\"] = input.Locale;\n  }\n\n  if (input.Make !== undefined) {\n    bodyParams[\"Make\"] = input.Make;\n  }\n\n  if (input.Model !== undefined) {\n    bodyParams[\"Model\"] = input.Model;\n  }\n\n  if (input.ModelVersion !== undefined) {\n    bodyParams[\"ModelVersion\"] = input.ModelVersion;\n  }\n\n  if (input.Platform !== undefined) {\n    bodyParams[\"Platform\"] = input.Platform;\n  }\n\n  if (input.PlatformVersion !== undefined) {\n    bodyParams[\"PlatformVersion\"] = input.PlatformVersion;\n  }\n\n  if (input.Timezone !== undefined) {\n    bodyParams[\"Timezone\"] = input.Timezone;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointLocation = function (input, context) {\n  var bodyParams = {};\n\n  if (input.City !== undefined) {\n    bodyParams[\"City\"] = input.City;\n  }\n\n  if (input.Country !== undefined) {\n    bodyParams[\"Country\"] = input.Country;\n  }\n\n  if (input.Latitude !== undefined) {\n    bodyParams[\"Latitude\"] = input.Latitude;\n  }\n\n  if (input.Longitude !== undefined) {\n    bodyParams[\"Longitude\"] = input.Longitude;\n  }\n\n  if (input.PostalCode !== undefined) {\n    bodyParams[\"PostalCode\"] = input.PostalCode;\n  }\n\n  if (input.Region !== undefined) {\n    bodyParams[\"Region\"] = input.Region;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Address !== undefined) {\n    bodyParams[\"Address\"] = input.Address;\n  }\n\n  if (input.Attributes !== undefined) {\n    bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.Attributes, context);\n  }\n\n  if (input.ChannelType !== undefined) {\n    bodyParams[\"ChannelType\"] = input.ChannelType;\n  }\n\n  if (input.Demographic !== undefined) {\n    bodyParams[\"Demographic\"] = serializeAws_restJson1_1EndpointDemographic(input.Demographic, context);\n  }\n\n  if (input.EffectiveDate !== undefined) {\n    bodyParams[\"EffectiveDate\"] = input.EffectiveDate;\n  }\n\n  if (input.EndpointStatus !== undefined) {\n    bodyParams[\"EndpointStatus\"] = input.EndpointStatus;\n  }\n\n  if (input.Location !== undefined) {\n    bodyParams[\"Location\"] = serializeAws_restJson1_1EndpointLocation(input.Location, context);\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n  }\n\n  if (input.OptOut !== undefined) {\n    bodyParams[\"OptOut\"] = input.OptOut;\n  }\n\n  if (input.RequestId !== undefined) {\n    bodyParams[\"RequestId\"] = input.RequestId;\n  }\n\n  if (input.User !== undefined) {\n    bodyParams[\"User\"] = serializeAws_restJson1_1EndpointUser(input.User, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointSendConfiguration = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BodyOverride !== undefined) {\n    bodyParams[\"BodyOverride\"] = input.BodyOverride;\n  }\n\n  if (input.Context !== undefined) {\n    bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.TitleOverride !== undefined) {\n    bodyParams[\"TitleOverride\"] = input.TitleOverride;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EndpointUser = function (input, context) {\n  var bodyParams = {};\n\n  if (input.UserAttributes !== undefined) {\n    bodyParams[\"UserAttributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.UserAttributes, context);\n  }\n\n  if (input.UserId !== undefined) {\n    bodyParams[\"UserId\"] = input.UserId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1Event = function (input, context) {\n  var bodyParams = {};\n\n  if (input.AppPackageName !== undefined) {\n    bodyParams[\"AppPackageName\"] = input.AppPackageName;\n  }\n\n  if (input.AppTitle !== undefined) {\n    bodyParams[\"AppTitle\"] = input.AppTitle;\n  }\n\n  if (input.AppVersionCode !== undefined) {\n    bodyParams[\"AppVersionCode\"] = input.AppVersionCode;\n  }\n\n  if (input.Attributes !== undefined) {\n    bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOf__string(input.Attributes, context);\n  }\n\n  if (input.ClientSdkVersion !== undefined) {\n    bodyParams[\"ClientSdkVersion\"] = input.ClientSdkVersion;\n  }\n\n  if (input.EventType !== undefined) {\n    bodyParams[\"EventType\"] = input.EventType;\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n  }\n\n  if (input.SdkName !== undefined) {\n    bodyParams[\"SdkName\"] = input.SdkName;\n  }\n\n  if (input.Session !== undefined) {\n    bodyParams[\"Session\"] = serializeAws_restJson1_1Session(input.Session, context);\n  }\n\n  if (input.Timestamp !== undefined) {\n    bodyParams[\"Timestamp\"] = input.Timestamp;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EventCondition = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Dimensions !== undefined) {\n    bodyParams[\"Dimensions\"] = serializeAws_restJson1_1EventDimensions(input.Dimensions, context);\n  }\n\n  if (input.MessageActivity !== undefined) {\n    bodyParams[\"MessageActivity\"] = input.MessageActivity;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EventDimensions = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Attributes !== undefined) {\n    bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfAttributeDimension(input.Attributes, context);\n  }\n\n  if (input.EventType !== undefined) {\n    bodyParams[\"EventType\"] = serializeAws_restJson1_1SetDimension(input.EventType, context);\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOfMetricDimension(input.Metrics, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EventsBatch = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Endpoint !== undefined) {\n    bodyParams[\"Endpoint\"] = serializeAws_restJson1_1PublicEndpoint(input.Endpoint, context);\n  }\n\n  if (input.Events !== undefined) {\n    bodyParams[\"Events\"] = serializeAws_restJson1_1MapOfEvent(input.Events, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1EventsRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.BatchItem !== undefined) {\n    bodyParams[\"BatchItem\"] = serializeAws_restJson1_1MapOfEventsBatch(input.BatchItem, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1ExportJobRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.RoleArn !== undefined) {\n    bodyParams[\"RoleArn\"] = input.RoleArn;\n  }\n\n  if (input.S3UrlPrefix !== undefined) {\n    bodyParams[\"S3UrlPrefix\"] = input.S3UrlPrefix;\n  }\n\n  if (input.SegmentId !== undefined) {\n    bodyParams[\"SegmentId\"] = input.SegmentId;\n  }\n\n  if (input.SegmentVersion !== undefined) {\n    bodyParams[\"SegmentVersion\"] = input.SegmentVersion;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1GCMChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ApiKey !== undefined) {\n    bodyParams[\"ApiKey\"] = input.ApiKey;\n  }\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1GCMMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.CollapseKey !== undefined) {\n    bodyParams[\"CollapseKey\"] = input.CollapseKey;\n  }\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n  }\n\n  if (input.IconReference !== undefined) {\n    bodyParams[\"IconReference\"] = input.IconReference;\n  }\n\n  if (input.ImageIconUrl !== undefined) {\n    bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n  }\n\n  if (input.ImageUrl !== undefined) {\n    bodyParams[\"ImageUrl\"] = input.ImageUrl;\n  }\n\n  if (input.Priority !== undefined) {\n    bodyParams[\"Priority\"] = input.Priority;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.RestrictedPackageName !== undefined) {\n    bodyParams[\"RestrictedPackageName\"] = input.RestrictedPackageName;\n  }\n\n  if (input.SilentPush !== undefined) {\n    bodyParams[\"SilentPush\"] = input.SilentPush;\n  }\n\n  if (input.SmallImageIconUrl !== undefined) {\n    bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n  }\n\n  if (input.Sound !== undefined) {\n    bodyParams[\"Sound\"] = input.Sound;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.TimeToLive !== undefined) {\n    bodyParams[\"TimeToLive\"] = input.TimeToLive;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1GPSCoordinates = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Latitude !== undefined) {\n    bodyParams[\"Latitude\"] = input.Latitude;\n  }\n\n  if (input.Longitude !== undefined) {\n    bodyParams[\"Longitude\"] = input.Longitude;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1GPSPointDimension = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Coordinates !== undefined) {\n    bodyParams[\"Coordinates\"] = serializeAws_restJson1_1GPSCoordinates(input.Coordinates, context);\n  }\n\n  if (input.RangeInKilometers !== undefined) {\n    bodyParams[\"RangeInKilometers\"] = input.RangeInKilometers;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1HoldoutActivity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.NextActivity !== undefined) {\n    bodyParams[\"NextActivity\"] = input.NextActivity;\n  }\n\n  if (input.Percentage !== undefined) {\n    bodyParams[\"Percentage\"] = input.Percentage;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1ImportJobRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.DefineSegment !== undefined) {\n    bodyParams[\"DefineSegment\"] = input.DefineSegment;\n  }\n\n  if (input.ExternalId !== undefined) {\n    bodyParams[\"ExternalId\"] = input.ExternalId;\n  }\n\n  if (input.Format !== undefined) {\n    bodyParams[\"Format\"] = input.Format;\n  }\n\n  if (input.RegisterEndpoints !== undefined) {\n    bodyParams[\"RegisterEndpoints\"] = input.RegisterEndpoints;\n  }\n\n  if (input.RoleArn !== undefined) {\n    bodyParams[\"RoleArn\"] = input.RoleArn;\n  }\n\n  if (input.S3Url !== undefined) {\n    bodyParams[\"S3Url\"] = input.S3Url;\n  }\n\n  if (input.SegmentId !== undefined) {\n    bodyParams[\"SegmentId\"] = input.SegmentId;\n  }\n\n  if (input.SegmentName !== undefined) {\n    bodyParams[\"SegmentName\"] = input.SegmentName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1JourneyEmailMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.FromAddress !== undefined) {\n    bodyParams[\"FromAddress\"] = input.FromAddress;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1JourneyLimits = function (input, context) {\n  var bodyParams = {};\n\n  if (input.DailyCap !== undefined) {\n    bodyParams[\"DailyCap\"] = input.DailyCap;\n  }\n\n  if (input.EndpointReentryCap !== undefined) {\n    bodyParams[\"EndpointReentryCap\"] = input.EndpointReentryCap;\n  }\n\n  if (input.MessagesPerSecond !== undefined) {\n    bodyParams[\"MessagesPerSecond\"] = input.MessagesPerSecond;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1JourneySchedule = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EndTime !== undefined) {\n    bodyParams[\"EndTime\"] = input.EndTime.toISOString().split(\".\")[0] + \"Z\";\n  }\n\n  if (input.StartTime !== undefined) {\n    bodyParams[\"StartTime\"] = input.StartTime.toISOString().split(\".\")[0] + \"Z\";\n  }\n\n  if (input.Timezone !== undefined) {\n    bodyParams[\"Timezone\"] = input.Timezone;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1JourneyStateRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.State !== undefined) {\n    bodyParams[\"State\"] = input.State;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1ListOfEndpointBatchItem = function (input, context) {\n  var e_1, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n      var entry = input_1_1.value;\n      contents.push(serializeAws_restJson1_1EndpointBatchItem(entry, context));\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfMultiConditionalBranch = function (input, context) {\n  var e_2, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {\n      var entry = input_2_1.value;\n      contents.push(serializeAws_restJson1_1MultiConditionalBranch(entry, context));\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfRandomSplitEntry = function (input, context) {\n  var e_3, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {\n      var entry = input_3_1.value;\n      contents.push(serializeAws_restJson1_1RandomSplitEntry(entry, context));\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfSegmentDimensions = function (input, context) {\n  var e_4, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_4 = __values(input), input_4_1 = input_4.next(); !input_4_1.done; input_4_1 = input_4.next()) {\n      var entry = input_4_1.value;\n      contents.push(serializeAws_restJson1_1SegmentDimensions(entry, context));\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (input_4_1 && !input_4_1.done && (_a = input_4.return)) _a.call(input_4);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfSegmentGroup = function (input, context) {\n  var e_5, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_5 = __values(input), input_5_1 = input_5.next(); !input_5_1.done; input_5_1 = input_5.next()) {\n      var entry = input_5_1.value;\n      contents.push(serializeAws_restJson1_1SegmentGroup(entry, context));\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (input_5_1 && !input_5_1.done && (_a = input_5.return)) _a.call(input_5);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfSegmentReference = function (input, context) {\n  var e_6, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_6 = __values(input), input_6_1 = input_6.next(); !input_6_1.done; input_6_1 = input_6.next()) {\n      var entry = input_6_1.value;\n      contents.push(serializeAws_restJson1_1SegmentReference(entry, context));\n    }\n  } catch (e_6_1) {\n    e_6 = {\n      error: e_6_1\n    };\n  } finally {\n    try {\n      if (input_6_1 && !input_6_1.done && (_a = input_6.return)) _a.call(input_6);\n    } finally {\n      if (e_6) throw e_6.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfSimpleCondition = function (input, context) {\n  var e_7, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_7 = __values(input), input_7_1 = input_7.next(); !input_7_1.done; input_7_1 = input_7.next()) {\n      var entry = input_7_1.value;\n      contents.push(serializeAws_restJson1_1SimpleCondition(entry, context));\n    }\n  } catch (e_7_1) {\n    e_7 = {\n      error: e_7_1\n    };\n  } finally {\n    try {\n      if (input_7_1 && !input_7_1.done && (_a = input_7.return)) _a.call(input_7);\n    } finally {\n      if (e_7) throw e_7.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOfWriteTreatmentResource = function (input, context) {\n  var e_8, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_8 = __values(input), input_8_1 = input_8.next(); !input_8_1.done; input_8_1 = input_8.next()) {\n      var entry = input_8_1.value;\n      contents.push(serializeAws_restJson1_1WriteTreatmentResource(entry, context));\n    }\n  } catch (e_8_1) {\n    e_8 = {\n      error: e_8_1\n    };\n  } finally {\n    try {\n      if (input_8_1 && !input_8_1.done && (_a = input_8.return)) _a.call(input_8);\n    } finally {\n      if (e_8) throw e_8.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1ListOf__string = function (input, context) {\n  var e_9, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_9 = __values(input), input_9_1 = input_9.next(); !input_9_1.done; input_9_1 = input_9.next()) {\n      var entry = input_9_1.value;\n      contents.push(entry);\n    }\n  } catch (e_9_1) {\n    e_9 = {\n      error: e_9_1\n    };\n  } finally {\n    try {\n      if (input_9_1 && !input_9_1.done && (_a = input_9.return)) _a.call(input_9);\n    } finally {\n      if (e_9) throw e_9.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_restJson1_1MapOfActivity = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1Activity(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfAddressConfiguration = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1AddressConfiguration(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfAttributeDimension = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1AttributeDimension(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfEndpointSendConfiguration = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1EndpointSendConfiguration(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfEvent = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1Event(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfEventsBatch = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1EventsBatch(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfListOf__string = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1ListOf__string(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOfMetricDimension = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = serializeAws_restJson1_1MetricDimension(input[key], context);\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOf__double = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = input[key];\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1MapOf__string = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = input[key];\n  });\n  return mapParams;\n};\n\nvar serializeAws_restJson1_1Message = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Action !== undefined) {\n    bodyParams[\"Action\"] = input.Action;\n  }\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.ImageIconUrl !== undefined) {\n    bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n  }\n\n  if (input.ImageSmallIconUrl !== undefined) {\n    bodyParams[\"ImageSmallIconUrl\"] = input.ImageSmallIconUrl;\n  }\n\n  if (input.ImageUrl !== undefined) {\n    bodyParams[\"ImageUrl\"] = input.ImageUrl;\n  }\n\n  if (input.JsonBody !== undefined) {\n    bodyParams[\"JsonBody\"] = input.JsonBody;\n  }\n\n  if (input.MediaUrl !== undefined) {\n    bodyParams[\"MediaUrl\"] = input.MediaUrl;\n  }\n\n  if (input.RawContent !== undefined) {\n    bodyParams[\"RawContent\"] = input.RawContent;\n  }\n\n  if (input.SilentPush !== undefined) {\n    bodyParams[\"SilentPush\"] = input.SilentPush;\n  }\n\n  if (input.TimeToLive !== undefined) {\n    bodyParams[\"TimeToLive\"] = input.TimeToLive;\n  }\n\n  if (input.Title !== undefined) {\n    bodyParams[\"Title\"] = input.Title;\n  }\n\n  if (input.Url !== undefined) {\n    bodyParams[\"Url\"] = input.Url;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1MessageConfiguration = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ADMMessage !== undefined) {\n    bodyParams[\"ADMMessage\"] = serializeAws_restJson1_1Message(input.ADMMessage, context);\n  }\n\n  if (input.APNSMessage !== undefined) {\n    bodyParams[\"APNSMessage\"] = serializeAws_restJson1_1Message(input.APNSMessage, context);\n  }\n\n  if (input.BaiduMessage !== undefined) {\n    bodyParams[\"BaiduMessage\"] = serializeAws_restJson1_1Message(input.BaiduMessage, context);\n  }\n\n  if (input.DefaultMessage !== undefined) {\n    bodyParams[\"DefaultMessage\"] = serializeAws_restJson1_1Message(input.DefaultMessage, context);\n  }\n\n  if (input.EmailMessage !== undefined) {\n    bodyParams[\"EmailMessage\"] = serializeAws_restJson1_1CampaignEmailMessage(input.EmailMessage, context);\n  }\n\n  if (input.GCMMessage !== undefined) {\n    bodyParams[\"GCMMessage\"] = serializeAws_restJson1_1Message(input.GCMMessage, context);\n  }\n\n  if (input.SMSMessage !== undefined) {\n    bodyParams[\"SMSMessage\"] = serializeAws_restJson1_1CampaignSmsMessage(input.SMSMessage, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1MessageRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Addresses !== undefined) {\n    bodyParams[\"Addresses\"] = serializeAws_restJson1_1MapOfAddressConfiguration(input.Addresses, context);\n  }\n\n  if (input.Context !== undefined) {\n    bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n  }\n\n  if (input.Endpoints !== undefined) {\n    bodyParams[\"Endpoints\"] = serializeAws_restJson1_1MapOfEndpointSendConfiguration(input.Endpoints, context);\n  }\n\n  if (input.MessageConfiguration !== undefined) {\n    bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1DirectMessageConfiguration(input.MessageConfiguration, context);\n  }\n\n  if (input.TemplateConfiguration !== undefined) {\n    bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n  }\n\n  if (input.TraceId !== undefined) {\n    bodyParams[\"TraceId\"] = input.TraceId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1MetricDimension = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ComparisonOperator !== undefined) {\n    bodyParams[\"ComparisonOperator\"] = input.ComparisonOperator;\n  }\n\n  if (input.Value !== undefined) {\n    bodyParams[\"Value\"] = input.Value;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1MultiConditionalBranch = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Condition !== undefined) {\n    bodyParams[\"Condition\"] = serializeAws_restJson1_1SimpleCondition(input.Condition, context);\n  }\n\n  if (input.NextActivity !== undefined) {\n    bodyParams[\"NextActivity\"] = input.NextActivity;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1MultiConditionalSplitActivity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Branches !== undefined) {\n    bodyParams[\"Branches\"] = serializeAws_restJson1_1ListOfMultiConditionalBranch(input.Branches, context);\n  }\n\n  if (input.DefaultActivity !== undefined) {\n    bodyParams[\"DefaultActivity\"] = input.DefaultActivity;\n  }\n\n  if (input.EvaluationWaitTime !== undefined) {\n    bodyParams[\"EvaluationWaitTime\"] = serializeAws_restJson1_1WaitTime(input.EvaluationWaitTime, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1NumberValidateRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.IsoCountryCode !== undefined) {\n    bodyParams[\"IsoCountryCode\"] = input.IsoCountryCode;\n  }\n\n  if (input.PhoneNumber !== undefined) {\n    bodyParams[\"PhoneNumber\"] = input.PhoneNumber;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1PublicEndpoint = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Address !== undefined) {\n    bodyParams[\"Address\"] = input.Address;\n  }\n\n  if (input.Attributes !== undefined) {\n    bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.Attributes, context);\n  }\n\n  if (input.ChannelType !== undefined) {\n    bodyParams[\"ChannelType\"] = input.ChannelType;\n  }\n\n  if (input.Demographic !== undefined) {\n    bodyParams[\"Demographic\"] = serializeAws_restJson1_1EndpointDemographic(input.Demographic, context);\n  }\n\n  if (input.EffectiveDate !== undefined) {\n    bodyParams[\"EffectiveDate\"] = input.EffectiveDate;\n  }\n\n  if (input.EndpointStatus !== undefined) {\n    bodyParams[\"EndpointStatus\"] = input.EndpointStatus;\n  }\n\n  if (input.Location !== undefined) {\n    bodyParams[\"Location\"] = serializeAws_restJson1_1EndpointLocation(input.Location, context);\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n  }\n\n  if (input.OptOut !== undefined) {\n    bodyParams[\"OptOut\"] = input.OptOut;\n  }\n\n  if (input.RequestId !== undefined) {\n    bodyParams[\"RequestId\"] = input.RequestId;\n  }\n\n  if (input.User !== undefined) {\n    bodyParams[\"User\"] = serializeAws_restJson1_1EndpointUser(input.User, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1PushNotificationTemplateRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ADM !== undefined) {\n    bodyParams[\"ADM\"] = serializeAws_restJson1_1AndroidPushNotificationTemplate(input.ADM, context);\n  }\n\n  if (input.APNS !== undefined) {\n    bodyParams[\"APNS\"] = serializeAws_restJson1_1APNSPushNotificationTemplate(input.APNS, context);\n  }\n\n  if (input.Baidu !== undefined) {\n    bodyParams[\"Baidu\"] = serializeAws_restJson1_1AndroidPushNotificationTemplate(input.Baidu, context);\n  }\n\n  if (input.Default !== undefined) {\n    bodyParams[\"Default\"] = serializeAws_restJson1_1DefaultPushNotificationTemplate(input.Default, context);\n  }\n\n  if (input.DefaultSubstitutions !== undefined) {\n    bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n  }\n\n  if (input.GCM !== undefined) {\n    bodyParams[\"GCM\"] = serializeAws_restJson1_1AndroidPushNotificationTemplate(input.GCM, context);\n  }\n\n  if (input.TemplateDescription !== undefined) {\n    bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1QuietTime = function (input, context) {\n  var bodyParams = {};\n\n  if (input.End !== undefined) {\n    bodyParams[\"End\"] = input.End;\n  }\n\n  if (input.Start !== undefined) {\n    bodyParams[\"Start\"] = input.Start;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1RandomSplitActivity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Branches !== undefined) {\n    bodyParams[\"Branches\"] = serializeAws_restJson1_1ListOfRandomSplitEntry(input.Branches, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1RandomSplitEntry = function (input, context) {\n  var bodyParams = {};\n\n  if (input.NextActivity !== undefined) {\n    bodyParams[\"NextActivity\"] = input.NextActivity;\n  }\n\n  if (input.Percentage !== undefined) {\n    bodyParams[\"Percentage\"] = input.Percentage;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1RawEmail = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = context.base64Encoder(input.Data);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1RecencyDimension = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Duration !== undefined) {\n    bodyParams[\"Duration\"] = input.Duration;\n  }\n\n  if (input.RecencyType !== undefined) {\n    bodyParams[\"RecencyType\"] = input.RecencyType;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SMSChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  if (input.SenderId !== undefined) {\n    bodyParams[\"SenderId\"] = input.SenderId;\n  }\n\n  if (input.ShortCode !== undefined) {\n    bodyParams[\"ShortCode\"] = input.ShortCode;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SMSMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.Keyword !== undefined) {\n    bodyParams[\"Keyword\"] = input.Keyword;\n  }\n\n  if (input.MessageType !== undefined) {\n    bodyParams[\"MessageType\"] = input.MessageType;\n  }\n\n  if (input.OriginationNumber !== undefined) {\n    bodyParams[\"OriginationNumber\"] = input.OriginationNumber;\n  }\n\n  if (input.SenderId !== undefined) {\n    bodyParams[\"SenderId\"] = input.SenderId;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SMSTemplateRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.DefaultSubstitutions !== undefined) {\n    bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n  }\n\n  if (input.TemplateDescription !== undefined) {\n    bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1Schedule = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EndTime !== undefined) {\n    bodyParams[\"EndTime\"] = input.EndTime;\n  }\n\n  if (input.EventFilter !== undefined) {\n    bodyParams[\"EventFilter\"] = serializeAws_restJson1_1CampaignEventFilter(input.EventFilter, context);\n  }\n\n  if (input.Frequency !== undefined) {\n    bodyParams[\"Frequency\"] = input.Frequency;\n  }\n\n  if (input.IsLocalTime !== undefined) {\n    bodyParams[\"IsLocalTime\"] = input.IsLocalTime;\n  }\n\n  if (input.QuietTime !== undefined) {\n    bodyParams[\"QuietTime\"] = serializeAws_restJson1_1QuietTime(input.QuietTime, context);\n  }\n\n  if (input.StartTime !== undefined) {\n    bodyParams[\"StartTime\"] = input.StartTime;\n  }\n\n  if (input.Timezone !== undefined) {\n    bodyParams[\"Timezone\"] = input.Timezone;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentBehaviors = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Recency !== undefined) {\n    bodyParams[\"Recency\"] = serializeAws_restJson1_1RecencyDimension(input.Recency, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentCondition = function (input, context) {\n  var bodyParams = {};\n\n  if (input.SegmentId !== undefined) {\n    bodyParams[\"SegmentId\"] = input.SegmentId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentDemographics = function (input, context) {\n  var bodyParams = {};\n\n  if (input.AppVersion !== undefined) {\n    bodyParams[\"AppVersion\"] = serializeAws_restJson1_1SetDimension(input.AppVersion, context);\n  }\n\n  if (input.Channel !== undefined) {\n    bodyParams[\"Channel\"] = serializeAws_restJson1_1SetDimension(input.Channel, context);\n  }\n\n  if (input.DeviceType !== undefined) {\n    bodyParams[\"DeviceType\"] = serializeAws_restJson1_1SetDimension(input.DeviceType, context);\n  }\n\n  if (input.Make !== undefined) {\n    bodyParams[\"Make\"] = serializeAws_restJson1_1SetDimension(input.Make, context);\n  }\n\n  if (input.Model !== undefined) {\n    bodyParams[\"Model\"] = serializeAws_restJson1_1SetDimension(input.Model, context);\n  }\n\n  if (input.Platform !== undefined) {\n    bodyParams[\"Platform\"] = serializeAws_restJson1_1SetDimension(input.Platform, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentDimensions = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Attributes !== undefined) {\n    bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfAttributeDimension(input.Attributes, context);\n  }\n\n  if (input.Behavior !== undefined) {\n    bodyParams[\"Behavior\"] = serializeAws_restJson1_1SegmentBehaviors(input.Behavior, context);\n  }\n\n  if (input.Demographic !== undefined) {\n    bodyParams[\"Demographic\"] = serializeAws_restJson1_1SegmentDemographics(input.Demographic, context);\n  }\n\n  if (input.Location !== undefined) {\n    bodyParams[\"Location\"] = serializeAws_restJson1_1SegmentLocation(input.Location, context);\n  }\n\n  if (input.Metrics !== undefined) {\n    bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOfMetricDimension(input.Metrics, context);\n  }\n\n  if (input.UserAttributes !== undefined) {\n    bodyParams[\"UserAttributes\"] = serializeAws_restJson1_1MapOfAttributeDimension(input.UserAttributes, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentGroup = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Dimensions !== undefined) {\n    bodyParams[\"Dimensions\"] = serializeAws_restJson1_1ListOfSegmentDimensions(input.Dimensions, context);\n  }\n\n  if (input.SourceSegments !== undefined) {\n    bodyParams[\"SourceSegments\"] = serializeAws_restJson1_1ListOfSegmentReference(input.SourceSegments, context);\n  }\n\n  if (input.SourceType !== undefined) {\n    bodyParams[\"SourceType\"] = input.SourceType;\n  }\n\n  if (input.Type !== undefined) {\n    bodyParams[\"Type\"] = input.Type;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentGroupList = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Groups !== undefined) {\n    bodyParams[\"Groups\"] = serializeAws_restJson1_1ListOfSegmentGroup(input.Groups, context);\n  }\n\n  if (input.Include !== undefined) {\n    bodyParams[\"Include\"] = input.Include;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentLocation = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Country !== undefined) {\n    bodyParams[\"Country\"] = serializeAws_restJson1_1SetDimension(input.Country, context);\n  }\n\n  if (input.GPSPoint !== undefined) {\n    bodyParams[\"GPSPoint\"] = serializeAws_restJson1_1GPSPointDimension(input.GPSPoint, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SegmentReference = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Id !== undefined) {\n    bodyParams[\"Id\"] = input.Id;\n  }\n\n  if (input.Version !== undefined) {\n    bodyParams[\"Version\"] = input.Version;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SendUsersMessageRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Context !== undefined) {\n    bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n  }\n\n  if (input.MessageConfiguration !== undefined) {\n    bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1DirectMessageConfiguration(input.MessageConfiguration, context);\n  }\n\n  if (input.TemplateConfiguration !== undefined) {\n    bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n  }\n\n  if (input.TraceId !== undefined) {\n    bodyParams[\"TraceId\"] = input.TraceId;\n  }\n\n  if (input.Users !== undefined) {\n    bodyParams[\"Users\"] = serializeAws_restJson1_1MapOfEndpointSendConfiguration(input.Users, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1Session = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Duration !== undefined) {\n    bodyParams[\"Duration\"] = input.Duration;\n  }\n\n  if (input.Id !== undefined) {\n    bodyParams[\"Id\"] = input.Id;\n  }\n\n  if (input.StartTimestamp !== undefined) {\n    bodyParams[\"StartTimestamp\"] = input.StartTimestamp;\n  }\n\n  if (input.StopTimestamp !== undefined) {\n    bodyParams[\"StopTimestamp\"] = input.StopTimestamp;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SetDimension = function (input, context) {\n  var bodyParams = {};\n\n  if (input.DimensionType !== undefined) {\n    bodyParams[\"DimensionType\"] = input.DimensionType;\n  }\n\n  if (input.Values !== undefined) {\n    bodyParams[\"Values\"] = serializeAws_restJson1_1ListOf__string(input.Values, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SimpleCondition = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EventCondition !== undefined) {\n    bodyParams[\"EventCondition\"] = serializeAws_restJson1_1EventCondition(input.EventCondition, context);\n  }\n\n  if (input.SegmentCondition !== undefined) {\n    bodyParams[\"SegmentCondition\"] = serializeAws_restJson1_1SegmentCondition(input.SegmentCondition, context);\n  }\n\n  if (input.SegmentDimensions !== undefined) {\n    bodyParams[\"segmentDimensions\"] = serializeAws_restJson1_1SegmentDimensions(input.SegmentDimensions, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SimpleEmail = function (input, context) {\n  var bodyParams = {};\n\n  if (input.HtmlPart !== undefined) {\n    bodyParams[\"HtmlPart\"] = serializeAws_restJson1_1SimpleEmailPart(input.HtmlPart, context);\n  }\n\n  if (input.Subject !== undefined) {\n    bodyParams[\"Subject\"] = serializeAws_restJson1_1SimpleEmailPart(input.Subject, context);\n  }\n\n  if (input.TextPart !== undefined) {\n    bodyParams[\"TextPart\"] = serializeAws_restJson1_1SimpleEmailPart(input.TextPart, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1SimpleEmailPart = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Charset !== undefined) {\n    bodyParams[\"Charset\"] = input.Charset;\n  }\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = input.Data;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1StartCondition = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Description !== undefined) {\n    bodyParams[\"Description\"] = input.Description;\n  }\n\n  if (input.SegmentStartCondition !== undefined) {\n    bodyParams[\"SegmentStartCondition\"] = serializeAws_restJson1_1SegmentCondition(input.SegmentStartCondition, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1TagsModel = function (input, context) {\n  var bodyParams = {};\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1Template = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Name !== undefined) {\n    bodyParams[\"Name\"] = input.Name;\n  }\n\n  if (input.Version !== undefined) {\n    bodyParams[\"Version\"] = input.Version;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1TemplateActiveVersionRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Version !== undefined) {\n    bodyParams[\"Version\"] = input.Version;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1TemplateConfiguration = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EmailTemplate !== undefined) {\n    bodyParams[\"EmailTemplate\"] = serializeAws_restJson1_1Template(input.EmailTemplate, context);\n  }\n\n  if (input.PushTemplate !== undefined) {\n    bodyParams[\"PushTemplate\"] = serializeAws_restJson1_1Template(input.PushTemplate, context);\n  }\n\n  if (input.SMSTemplate !== undefined) {\n    bodyParams[\"SMSTemplate\"] = serializeAws_restJson1_1Template(input.SMSTemplate, context);\n  }\n\n  if (input.VoiceTemplate !== undefined) {\n    bodyParams[\"VoiceTemplate\"] = serializeAws_restJson1_1Template(input.VoiceTemplate, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1UpdateAttributesRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Blacklist !== undefined) {\n    bodyParams[\"Blacklist\"] = serializeAws_restJson1_1ListOf__string(input.Blacklist, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1VoiceChannelRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Enabled !== undefined) {\n    bodyParams[\"Enabled\"] = input.Enabled;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1VoiceMessage = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.LanguageCode !== undefined) {\n    bodyParams[\"LanguageCode\"] = input.LanguageCode;\n  }\n\n  if (input.OriginationNumber !== undefined) {\n    bodyParams[\"OriginationNumber\"] = input.OriginationNumber;\n  }\n\n  if (input.Substitutions !== undefined) {\n    bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n  }\n\n  if (input.VoiceId !== undefined) {\n    bodyParams[\"VoiceId\"] = input.VoiceId;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1VoiceTemplateRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Body !== undefined) {\n    bodyParams[\"Body\"] = input.Body;\n  }\n\n  if (input.DefaultSubstitutions !== undefined) {\n    bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n  }\n\n  if (input.LanguageCode !== undefined) {\n    bodyParams[\"LanguageCode\"] = input.LanguageCode;\n  }\n\n  if (input.TemplateDescription !== undefined) {\n    bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n  }\n\n  if (input.VoiceId !== undefined) {\n    bodyParams[\"VoiceId\"] = input.VoiceId;\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WaitActivity = function (input, context) {\n  var bodyParams = {};\n\n  if (input.NextActivity !== undefined) {\n    bodyParams[\"NextActivity\"] = input.NextActivity;\n  }\n\n  if (input.WaitTime !== undefined) {\n    bodyParams[\"WaitTime\"] = serializeAws_restJson1_1WaitTime(input.WaitTime, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WaitTime = function (input, context) {\n  var bodyParams = {};\n\n  if (input.WaitFor !== undefined) {\n    bodyParams[\"WaitFor\"] = input.WaitFor;\n  }\n\n  if (input.WaitUntil !== undefined) {\n    bodyParams[\"WaitUntil\"] = input.WaitUntil;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WriteApplicationSettingsRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.CampaignHook !== undefined) {\n    bodyParams[\"CampaignHook\"] = serializeAws_restJson1_1CampaignHook(input.CampaignHook, context);\n  }\n\n  if (input.CloudWatchMetricsEnabled !== undefined) {\n    bodyParams[\"CloudWatchMetricsEnabled\"] = input.CloudWatchMetricsEnabled;\n  }\n\n  if (input.Limits !== undefined) {\n    bodyParams[\"Limits\"] = serializeAws_restJson1_1CampaignLimits(input.Limits, context);\n  }\n\n  if (input.QuietTime !== undefined) {\n    bodyParams[\"QuietTime\"] = serializeAws_restJson1_1QuietTime(input.QuietTime, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WriteCampaignRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.AdditionalTreatments !== undefined) {\n    bodyParams[\"AdditionalTreatments\"] = serializeAws_restJson1_1ListOfWriteTreatmentResource(input.AdditionalTreatments, context);\n  }\n\n  if (input.Description !== undefined) {\n    bodyParams[\"Description\"] = input.Description;\n  }\n\n  if (input.HoldoutPercent !== undefined) {\n    bodyParams[\"HoldoutPercent\"] = input.HoldoutPercent;\n  }\n\n  if (input.Hook !== undefined) {\n    bodyParams[\"Hook\"] = serializeAws_restJson1_1CampaignHook(input.Hook, context);\n  }\n\n  if (input.IsPaused !== undefined) {\n    bodyParams[\"IsPaused\"] = input.IsPaused;\n  }\n\n  if (input.Limits !== undefined) {\n    bodyParams[\"Limits\"] = serializeAws_restJson1_1CampaignLimits(input.Limits, context);\n  }\n\n  if (input.MessageConfiguration !== undefined) {\n    bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1MessageConfiguration(input.MessageConfiguration, context);\n  }\n\n  if (input.Name !== undefined) {\n    bodyParams[\"Name\"] = input.Name;\n  }\n\n  if (input.Schedule !== undefined) {\n    bodyParams[\"Schedule\"] = serializeAws_restJson1_1Schedule(input.Schedule, context);\n  }\n\n  if (input.SegmentId !== undefined) {\n    bodyParams[\"SegmentId\"] = input.SegmentId;\n  }\n\n  if (input.SegmentVersion !== undefined) {\n    bodyParams[\"SegmentVersion\"] = input.SegmentVersion;\n  }\n\n  if (input.TemplateConfiguration !== undefined) {\n    bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n  }\n\n  if (input.TreatmentDescription !== undefined) {\n    bodyParams[\"TreatmentDescription\"] = input.TreatmentDescription;\n  }\n\n  if (input.TreatmentName !== undefined) {\n    bodyParams[\"TreatmentName\"] = input.TreatmentName;\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WriteEventStream = function (input, context) {\n  var bodyParams = {};\n\n  if (input.DestinationStreamArn !== undefined) {\n    bodyParams[\"DestinationStreamArn\"] = input.DestinationStreamArn;\n  }\n\n  if (input.RoleArn !== undefined) {\n    bodyParams[\"RoleArn\"] = input.RoleArn;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WriteJourneyRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Activities !== undefined) {\n    bodyParams[\"Activities\"] = serializeAws_restJson1_1MapOfActivity(input.Activities, context);\n  }\n\n  if (input.CreationDate !== undefined) {\n    bodyParams[\"CreationDate\"] = input.CreationDate;\n  }\n\n  if (input.LastModifiedDate !== undefined) {\n    bodyParams[\"LastModifiedDate\"] = input.LastModifiedDate;\n  }\n\n  if (input.Limits !== undefined) {\n    bodyParams[\"Limits\"] = serializeAws_restJson1_1JourneyLimits(input.Limits, context);\n  }\n\n  if (input.LocalTime !== undefined) {\n    bodyParams[\"LocalTime\"] = input.LocalTime;\n  }\n\n  if (input.Name !== undefined) {\n    bodyParams[\"Name\"] = input.Name;\n  }\n\n  if (input.QuietTime !== undefined) {\n    bodyParams[\"QuietTime\"] = serializeAws_restJson1_1QuietTime(input.QuietTime, context);\n  }\n\n  if (input.RefreshFrequency !== undefined) {\n    bodyParams[\"RefreshFrequency\"] = input.RefreshFrequency;\n  }\n\n  if (input.Schedule !== undefined) {\n    bodyParams[\"Schedule\"] = serializeAws_restJson1_1JourneySchedule(input.Schedule, context);\n  }\n\n  if (input.StartActivity !== undefined) {\n    bodyParams[\"StartActivity\"] = input.StartActivity;\n  }\n\n  if (input.StartCondition !== undefined) {\n    bodyParams[\"StartCondition\"] = serializeAws_restJson1_1StartCondition(input.StartCondition, context);\n  }\n\n  if (input.State !== undefined) {\n    bodyParams[\"State\"] = input.State;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WriteSegmentRequest = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Dimensions !== undefined) {\n    bodyParams[\"Dimensions\"] = serializeAws_restJson1_1SegmentDimensions(input.Dimensions, context);\n  }\n\n  if (input.Name !== undefined) {\n    bodyParams[\"Name\"] = input.Name;\n  }\n\n  if (input.SegmentGroups !== undefined) {\n    bodyParams[\"SegmentGroups\"] = serializeAws_restJson1_1SegmentGroupList(input.SegmentGroups, context);\n  }\n\n  if (input.tags !== undefined) {\n    bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_restJson1_1WriteTreatmentResource = function (input, context) {\n  var bodyParams = {};\n\n  if (input.MessageConfiguration !== undefined) {\n    bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1MessageConfiguration(input.MessageConfiguration, context);\n  }\n\n  if (input.Schedule !== undefined) {\n    bodyParams[\"Schedule\"] = serializeAws_restJson1_1Schedule(input.Schedule, context);\n  }\n\n  if (input.SizePercent !== undefined) {\n    bodyParams[\"SizePercent\"] = input.SizePercent;\n  }\n\n  if (input.TemplateConfiguration !== undefined) {\n    bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n  }\n\n  if (input.TreatmentDescription !== undefined) {\n    bodyParams[\"TreatmentDescription\"] = input.TreatmentDescription;\n  }\n\n  if (input.TreatmentName !== undefined) {\n    bodyParams[\"TreatmentName\"] = input.TreatmentName;\n  }\n\n  return bodyParams;\n};\n\nvar deserializeAws_restJson1_1ADMChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"ADMChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1APNSChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"APNSChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    DefaultAuthenticationMethod: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    HasTokenKey: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null) {\n    contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n    contents.HasTokenKey = output.HasTokenKey;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1APNSPushNotificationTemplate = function (output, context) {\n  var contents = {\n    __type: \"APNSPushNotificationTemplate\",\n    Action: undefined,\n    Body: undefined,\n    MediaUrl: undefined,\n    RawContent: undefined,\n    Sound: undefined,\n    Title: undefined,\n    Url: undefined\n  };\n\n  if (output.Action !== undefined && output.Action !== null) {\n    contents.Action = output.Action;\n  }\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.MediaUrl !== undefined && output.MediaUrl !== null) {\n    contents.MediaUrl = output.MediaUrl;\n  }\n\n  if (output.RawContent !== undefined && output.RawContent !== null) {\n    contents.RawContent = output.RawContent;\n  }\n\n  if (output.Sound !== undefined && output.Sound !== null) {\n    contents.Sound = output.Sound;\n  }\n\n  if (output.Title !== undefined && output.Title !== null) {\n    contents.Title = output.Title;\n  }\n\n  if (output.Url !== undefined && output.Url !== null) {\n    contents.Url = output.Url;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1APNSSandboxChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"APNSSandboxChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    DefaultAuthenticationMethod: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    HasTokenKey: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null) {\n    contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n    contents.HasTokenKey = output.HasTokenKey;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1APNSVoipChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"APNSVoipChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    DefaultAuthenticationMethod: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    HasTokenKey: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null) {\n    contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n    contents.HasTokenKey = output.HasTokenKey;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1APNSVoipSandboxChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"APNSVoipSandboxChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    DefaultAuthenticationMethod: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    HasTokenKey: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null) {\n    contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n    contents.HasTokenKey = output.HasTokenKey;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ActivitiesResponse = function (output, context) {\n  var contents = {\n    __type: \"ActivitiesResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfActivityResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1Activity = function (output, context) {\n  var contents = {\n    __type: \"Activity\",\n    ConditionalSplit: undefined,\n    Description: undefined,\n    EMAIL: undefined,\n    Holdout: undefined,\n    MultiCondition: undefined,\n    RandomSplit: undefined,\n    Wait: undefined\n  };\n\n  if (output.ConditionalSplit !== undefined && output.ConditionalSplit !== null) {\n    contents.ConditionalSplit = deserializeAws_restJson1_1ConditionalSplitActivity(output.ConditionalSplit, context);\n  }\n\n  if (output.Description !== undefined && output.Description !== null) {\n    contents.Description = output.Description;\n  }\n\n  if (output.EMAIL !== undefined && output.EMAIL !== null) {\n    contents.EMAIL = deserializeAws_restJson1_1EmailMessageActivity(output.EMAIL, context);\n  }\n\n  if (output.Holdout !== undefined && output.Holdout !== null) {\n    contents.Holdout = deserializeAws_restJson1_1HoldoutActivity(output.Holdout, context);\n  }\n\n  if (output.MultiCondition !== undefined && output.MultiCondition !== null) {\n    contents.MultiCondition = deserializeAws_restJson1_1MultiConditionalSplitActivity(output.MultiCondition, context);\n  }\n\n  if (output.RandomSplit !== undefined && output.RandomSplit !== null) {\n    contents.RandomSplit = deserializeAws_restJson1_1RandomSplitActivity(output.RandomSplit, context);\n  }\n\n  if (output.Wait !== undefined && output.Wait !== null) {\n    contents.Wait = deserializeAws_restJson1_1WaitActivity(output.Wait, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ActivityResponse = function (output, context) {\n  var contents = {\n    __type: \"ActivityResponse\",\n    ApplicationId: undefined,\n    CampaignId: undefined,\n    End: undefined,\n    Id: undefined,\n    Result: undefined,\n    ScheduledStart: undefined,\n    Start: undefined,\n    State: undefined,\n    SuccessfulEndpointCount: undefined,\n    TimezonesCompletedCount: undefined,\n    TimezonesTotalCount: undefined,\n    TotalEndpointCount: undefined,\n    TreatmentId: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CampaignId !== undefined && output.CampaignId !== null) {\n    contents.CampaignId = output.CampaignId;\n  }\n\n  if (output.End !== undefined && output.End !== null) {\n    contents.End = output.End;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.Result !== undefined && output.Result !== null) {\n    contents.Result = output.Result;\n  }\n\n  if (output.ScheduledStart !== undefined && output.ScheduledStart !== null) {\n    contents.ScheduledStart = output.ScheduledStart;\n  }\n\n  if (output.Start !== undefined && output.Start !== null) {\n    contents.Start = output.Start;\n  }\n\n  if (output.State !== undefined && output.State !== null) {\n    contents.State = output.State;\n  }\n\n  if (output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null) {\n    contents.SuccessfulEndpointCount = output.SuccessfulEndpointCount;\n  }\n\n  if (output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null) {\n    contents.TimezonesCompletedCount = output.TimezonesCompletedCount;\n  }\n\n  if (output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null) {\n    contents.TimezonesTotalCount = output.TimezonesTotalCount;\n  }\n\n  if (output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null) {\n    contents.TotalEndpointCount = output.TotalEndpointCount;\n  }\n\n  if (output.TreatmentId !== undefined && output.TreatmentId !== null) {\n    contents.TreatmentId = output.TreatmentId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1AndroidPushNotificationTemplate = function (output, context) {\n  var contents = {\n    __type: \"AndroidPushNotificationTemplate\",\n    Action: undefined,\n    Body: undefined,\n    ImageIconUrl: undefined,\n    ImageUrl: undefined,\n    RawContent: undefined,\n    SmallImageIconUrl: undefined,\n    Sound: undefined,\n    Title: undefined,\n    Url: undefined\n  };\n\n  if (output.Action !== undefined && output.Action !== null) {\n    contents.Action = output.Action;\n  }\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.ImageIconUrl !== undefined && output.ImageIconUrl !== null) {\n    contents.ImageIconUrl = output.ImageIconUrl;\n  }\n\n  if (output.ImageUrl !== undefined && output.ImageUrl !== null) {\n    contents.ImageUrl = output.ImageUrl;\n  }\n\n  if (output.RawContent !== undefined && output.RawContent !== null) {\n    contents.RawContent = output.RawContent;\n  }\n\n  if (output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null) {\n    contents.SmallImageIconUrl = output.SmallImageIconUrl;\n  }\n\n  if (output.Sound !== undefined && output.Sound !== null) {\n    contents.Sound = output.Sound;\n  }\n\n  if (output.Title !== undefined && output.Title !== null) {\n    contents.Title = output.Title;\n  }\n\n  if (output.Url !== undefined && output.Url !== null) {\n    contents.Url = output.Url;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ApplicationDateRangeKpiResponse = function (output, context) {\n  var contents = {\n    __type: \"ApplicationDateRangeKpiResponse\",\n    ApplicationId: undefined,\n    EndTime: undefined,\n    KpiName: undefined,\n    KpiResult: undefined,\n    NextToken: undefined,\n    StartTime: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.EndTime !== undefined && output.EndTime !== null) {\n    contents.EndTime = new Date(output.EndTime);\n  }\n\n  if (output.KpiName !== undefined && output.KpiName !== null) {\n    contents.KpiName = output.KpiName;\n  }\n\n  if (output.KpiResult !== undefined && output.KpiResult !== null) {\n    contents.KpiResult = deserializeAws_restJson1_1BaseKpiResult(output.KpiResult, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  if (output.StartTime !== undefined && output.StartTime !== null) {\n    contents.StartTime = new Date(output.StartTime);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ApplicationResponse = function (output, context) {\n  var contents = {\n    __type: \"ApplicationResponse\",\n    Arn: undefined,\n    Id: undefined,\n    Name: undefined,\n    tags: undefined\n  };\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.Name !== undefined && output.Name !== null) {\n    contents.Name = output.Name;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ApplicationSettingsResource = function (output, context) {\n  var contents = {\n    __type: \"ApplicationSettingsResource\",\n    ApplicationId: undefined,\n    CampaignHook: undefined,\n    LastModifiedDate: undefined,\n    Limits: undefined,\n    QuietTime: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CampaignHook !== undefined && output.CampaignHook !== null) {\n    contents.CampaignHook = deserializeAws_restJson1_1CampaignHook(output.CampaignHook, context);\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Limits !== undefined && output.Limits !== null) {\n    contents.Limits = deserializeAws_restJson1_1CampaignLimits(output.Limits, context);\n  }\n\n  if (output.QuietTime !== undefined && output.QuietTime !== null) {\n    contents.QuietTime = deserializeAws_restJson1_1QuietTime(output.QuietTime, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ApplicationsResponse = function (output, context) {\n  var contents = {\n    __type: \"ApplicationsResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfApplicationResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1AttributeDimension = function (output, context) {\n  var contents = {\n    __type: \"AttributeDimension\",\n    AttributeType: undefined,\n    Values: undefined\n  };\n\n  if (output.AttributeType !== undefined && output.AttributeType !== null) {\n    contents.AttributeType = output.AttributeType;\n  }\n\n  if (output.Values !== undefined && output.Values !== null) {\n    contents.Values = deserializeAws_restJson1_1ListOf__string(output.Values, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1AttributesResource = function (output, context) {\n  var contents = {\n    __type: \"AttributesResource\",\n    ApplicationId: undefined,\n    AttributeType: undefined,\n    Attributes: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.AttributeType !== undefined && output.AttributeType !== null) {\n    contents.AttributeType = output.AttributeType;\n  }\n\n  if (output.Attributes !== undefined && output.Attributes !== null) {\n    contents.Attributes = deserializeAws_restJson1_1ListOf__string(output.Attributes, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1BaiduChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"BaiduChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Credential: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Credential !== undefined && output.Credential !== null) {\n    contents.Credential = output.Credential;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1BaseKpiResult = function (output, context) {\n  var contents = {\n    __type: \"BaseKpiResult\",\n    Rows: undefined\n  };\n\n  if (output.Rows !== undefined && output.Rows !== null) {\n    contents.Rows = deserializeAws_restJson1_1ListOfResultRow(output.Rows, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignDateRangeKpiResponse = function (output, context) {\n  var contents = {\n    __type: \"CampaignDateRangeKpiResponse\",\n    ApplicationId: undefined,\n    CampaignId: undefined,\n    EndTime: undefined,\n    KpiName: undefined,\n    KpiResult: undefined,\n    NextToken: undefined,\n    StartTime: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CampaignId !== undefined && output.CampaignId !== null) {\n    contents.CampaignId = output.CampaignId;\n  }\n\n  if (output.EndTime !== undefined && output.EndTime !== null) {\n    contents.EndTime = new Date(output.EndTime);\n  }\n\n  if (output.KpiName !== undefined && output.KpiName !== null) {\n    contents.KpiName = output.KpiName;\n  }\n\n  if (output.KpiResult !== undefined && output.KpiResult !== null) {\n    contents.KpiResult = deserializeAws_restJson1_1BaseKpiResult(output.KpiResult, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  if (output.StartTime !== undefined && output.StartTime !== null) {\n    contents.StartTime = new Date(output.StartTime);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignEmailMessage = function (output, context) {\n  var contents = {\n    __type: \"CampaignEmailMessage\",\n    Body: undefined,\n    FromAddress: undefined,\n    HtmlBody: undefined,\n    Title: undefined\n  };\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.FromAddress !== undefined && output.FromAddress !== null) {\n    contents.FromAddress = output.FromAddress;\n  }\n\n  if (output.HtmlBody !== undefined && output.HtmlBody !== null) {\n    contents.HtmlBody = output.HtmlBody;\n  }\n\n  if (output.Title !== undefined && output.Title !== null) {\n    contents.Title = output.Title;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignEventFilter = function (output, context) {\n  var contents = {\n    __type: \"CampaignEventFilter\",\n    Dimensions: undefined,\n    FilterType: undefined\n  };\n\n  if (output.Dimensions !== undefined && output.Dimensions !== null) {\n    contents.Dimensions = deserializeAws_restJson1_1EventDimensions(output.Dimensions, context);\n  }\n\n  if (output.FilterType !== undefined && output.FilterType !== null) {\n    contents.FilterType = output.FilterType;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignHook = function (output, context) {\n  var contents = {\n    __type: \"CampaignHook\",\n    LambdaFunctionName: undefined,\n    Mode: undefined,\n    WebUrl: undefined\n  };\n\n  if (output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null) {\n    contents.LambdaFunctionName = output.LambdaFunctionName;\n  }\n\n  if (output.Mode !== undefined && output.Mode !== null) {\n    contents.Mode = output.Mode;\n  }\n\n  if (output.WebUrl !== undefined && output.WebUrl !== null) {\n    contents.WebUrl = output.WebUrl;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignLimits = function (output, context) {\n  var contents = {\n    __type: \"CampaignLimits\",\n    Daily: undefined,\n    MaximumDuration: undefined,\n    MessagesPerSecond: undefined,\n    Total: undefined\n  };\n\n  if (output.Daily !== undefined && output.Daily !== null) {\n    contents.Daily = output.Daily;\n  }\n\n  if (output.MaximumDuration !== undefined && output.MaximumDuration !== null) {\n    contents.MaximumDuration = output.MaximumDuration;\n  }\n\n  if (output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null) {\n    contents.MessagesPerSecond = output.MessagesPerSecond;\n  }\n\n  if (output.Total !== undefined && output.Total !== null) {\n    contents.Total = output.Total;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignResponse = function (output, context) {\n  var contents = {\n    __type: \"CampaignResponse\",\n    AdditionalTreatments: undefined,\n    ApplicationId: undefined,\n    Arn: undefined,\n    CreationDate: undefined,\n    DefaultState: undefined,\n    Description: undefined,\n    HoldoutPercent: undefined,\n    Hook: undefined,\n    Id: undefined,\n    IsPaused: undefined,\n    LastModifiedDate: undefined,\n    Limits: undefined,\n    MessageConfiguration: undefined,\n    Name: undefined,\n    Schedule: undefined,\n    SegmentId: undefined,\n    SegmentVersion: undefined,\n    State: undefined,\n    TemplateConfiguration: undefined,\n    TreatmentDescription: undefined,\n    TreatmentName: undefined,\n    Version: undefined,\n    tags: undefined\n  };\n\n  if (output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null) {\n    contents.AdditionalTreatments = deserializeAws_restJson1_1ListOfTreatmentResource(output.AdditionalTreatments, context);\n  }\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultState !== undefined && output.DefaultState !== null) {\n    contents.DefaultState = deserializeAws_restJson1_1CampaignState(output.DefaultState, context);\n  }\n\n  if (output.Description !== undefined && output.Description !== null) {\n    contents.Description = output.Description;\n  }\n\n  if (output.HoldoutPercent !== undefined && output.HoldoutPercent !== null) {\n    contents.HoldoutPercent = output.HoldoutPercent;\n  }\n\n  if (output.Hook !== undefined && output.Hook !== null) {\n    contents.Hook = deserializeAws_restJson1_1CampaignHook(output.Hook, context);\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsPaused !== undefined && output.IsPaused !== null) {\n    contents.IsPaused = output.IsPaused;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Limits !== undefined && output.Limits !== null) {\n    contents.Limits = deserializeAws_restJson1_1CampaignLimits(output.Limits, context);\n  }\n\n  if (output.MessageConfiguration !== undefined && output.MessageConfiguration !== null) {\n    contents.MessageConfiguration = deserializeAws_restJson1_1MessageConfiguration(output.MessageConfiguration, context);\n  }\n\n  if (output.Name !== undefined && output.Name !== null) {\n    contents.Name = output.Name;\n  }\n\n  if (output.Schedule !== undefined && output.Schedule !== null) {\n    contents.Schedule = deserializeAws_restJson1_1Schedule(output.Schedule, context);\n  }\n\n  if (output.SegmentId !== undefined && output.SegmentId !== null) {\n    contents.SegmentId = output.SegmentId;\n  }\n\n  if (output.SegmentVersion !== undefined && output.SegmentVersion !== null) {\n    contents.SegmentVersion = output.SegmentVersion;\n  }\n\n  if (output.State !== undefined && output.State !== null) {\n    contents.State = deserializeAws_restJson1_1CampaignState(output.State, context);\n  }\n\n  if (output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null) {\n    contents.TemplateConfiguration = deserializeAws_restJson1_1TemplateConfiguration(output.TemplateConfiguration, context);\n  }\n\n  if (output.TreatmentDescription !== undefined && output.TreatmentDescription !== null) {\n    contents.TreatmentDescription = output.TreatmentDescription;\n  }\n\n  if (output.TreatmentName !== undefined && output.TreatmentName !== null) {\n    contents.TreatmentName = output.TreatmentName;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignSmsMessage = function (output, context) {\n  var contents = {\n    __type: \"CampaignSmsMessage\",\n    Body: undefined,\n    MessageType: undefined,\n    SenderId: undefined\n  };\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.MessageType !== undefined && output.MessageType !== null) {\n    contents.MessageType = output.MessageType;\n  }\n\n  if (output.SenderId !== undefined && output.SenderId !== null) {\n    contents.SenderId = output.SenderId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignState = function (output, context) {\n  var contents = {\n    __type: \"CampaignState\",\n    CampaignStatus: undefined\n  };\n\n  if (output.CampaignStatus !== undefined && output.CampaignStatus !== null) {\n    contents.CampaignStatus = output.CampaignStatus;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CampaignsResponse = function (output, context) {\n  var contents = {\n    __type: \"CampaignsResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfCampaignResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"ChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ChannelsResponse = function (output, context) {\n  var contents = {\n    __type: \"ChannelsResponse\",\n    Channels: undefined\n  };\n\n  if (output.Channels !== undefined && output.Channels !== null) {\n    contents.Channels = deserializeAws_restJson1_1MapOfChannelResponse(output.Channels, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1Condition = function (output, context) {\n  var contents = {\n    __type: \"Condition\",\n    Conditions: undefined,\n    Operator: undefined\n  };\n\n  if (output.Conditions !== undefined && output.Conditions !== null) {\n    contents.Conditions = deserializeAws_restJson1_1ListOfSimpleCondition(output.Conditions, context);\n  }\n\n  if (output.Operator !== undefined && output.Operator !== null) {\n    contents.Operator = output.Operator;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ConditionalSplitActivity = function (output, context) {\n  var contents = {\n    __type: \"ConditionalSplitActivity\",\n    Condition: undefined,\n    EvaluationWaitTime: undefined,\n    FalseActivity: undefined,\n    TrueActivity: undefined\n  };\n\n  if (output.Condition !== undefined && output.Condition !== null) {\n    contents.Condition = deserializeAws_restJson1_1Condition(output.Condition, context);\n  }\n\n  if (output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null) {\n    contents.EvaluationWaitTime = deserializeAws_restJson1_1WaitTime(output.EvaluationWaitTime, context);\n  }\n\n  if (output.FalseActivity !== undefined && output.FalseActivity !== null) {\n    contents.FalseActivity = output.FalseActivity;\n  }\n\n  if (output.TrueActivity !== undefined && output.TrueActivity !== null) {\n    contents.TrueActivity = output.TrueActivity;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1CreateTemplateMessageBody = function (output, context) {\n  var contents = {\n    __type: \"CreateTemplateMessageBody\",\n    Arn: undefined,\n    Message: undefined,\n    RequestID: undefined\n  };\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.Message !== undefined && output.Message !== null) {\n    contents.Message = output.Message;\n  }\n\n  if (output.RequestID !== undefined && output.RequestID !== null) {\n    contents.RequestID = output.RequestID;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1DefaultPushNotificationTemplate = function (output, context) {\n  var contents = {\n    __type: \"DefaultPushNotificationTemplate\",\n    Action: undefined,\n    Body: undefined,\n    Sound: undefined,\n    Title: undefined,\n    Url: undefined\n  };\n\n  if (output.Action !== undefined && output.Action !== null) {\n    contents.Action = output.Action;\n  }\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.Sound !== undefined && output.Sound !== null) {\n    contents.Sound = output.Sound;\n  }\n\n  if (output.Title !== undefined && output.Title !== null) {\n    contents.Title = output.Title;\n  }\n\n  if (output.Url !== undefined && output.Url !== null) {\n    contents.Url = output.Url;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EmailChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"EmailChannelResponse\",\n    ApplicationId: undefined,\n    ConfigurationSet: undefined,\n    CreationDate: undefined,\n    Enabled: undefined,\n    FromAddress: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    Identity: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    MessagesPerSecond: undefined,\n    Platform: undefined,\n    RoleArn: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.ConfigurationSet !== undefined && output.ConfigurationSet !== null) {\n    contents.ConfigurationSet = output.ConfigurationSet;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.FromAddress !== undefined && output.FromAddress !== null) {\n    contents.FromAddress = output.FromAddress;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.Identity !== undefined && output.Identity !== null) {\n    contents.Identity = output.Identity;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null) {\n    contents.MessagesPerSecond = output.MessagesPerSecond;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.RoleArn !== undefined && output.RoleArn !== null) {\n    contents.RoleArn = output.RoleArn;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EmailMessageActivity = function (output, context) {\n  var contents = {\n    __type: \"EmailMessageActivity\",\n    MessageConfig: undefined,\n    NextActivity: undefined,\n    TemplateName: undefined,\n    TemplateVersion: undefined\n  };\n\n  if (output.MessageConfig !== undefined && output.MessageConfig !== null) {\n    contents.MessageConfig = deserializeAws_restJson1_1JourneyEmailMessage(output.MessageConfig, context);\n  }\n\n  if (output.NextActivity !== undefined && output.NextActivity !== null) {\n    contents.NextActivity = output.NextActivity;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateVersion !== undefined && output.TemplateVersion !== null) {\n    contents.TemplateVersion = output.TemplateVersion;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EmailTemplateResponse = function (output, context) {\n  var contents = {\n    __type: \"EmailTemplateResponse\",\n    Arn: undefined,\n    CreationDate: undefined,\n    DefaultSubstitutions: undefined,\n    HtmlPart: undefined,\n    LastModifiedDate: undefined,\n    Subject: undefined,\n    TemplateDescription: undefined,\n    TemplateName: undefined,\n    TemplateType: undefined,\n    TextPart: undefined,\n    Version: undefined,\n    tags: undefined\n  };\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null) {\n    contents.DefaultSubstitutions = output.DefaultSubstitutions;\n  }\n\n  if (output.HtmlPart !== undefined && output.HtmlPart !== null) {\n    contents.HtmlPart = output.HtmlPart;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Subject !== undefined && output.Subject !== null) {\n    contents.Subject = output.Subject;\n  }\n\n  if (output.TemplateDescription !== undefined && output.TemplateDescription !== null) {\n    contents.TemplateDescription = output.TemplateDescription;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateType !== undefined && output.TemplateType !== null) {\n    contents.TemplateType = output.TemplateType;\n  }\n\n  if (output.TextPart !== undefined && output.TextPart !== null) {\n    contents.TextPart = output.TextPart;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointDemographic = function (output, context) {\n  var contents = {\n    __type: \"EndpointDemographic\",\n    AppVersion: undefined,\n    Locale: undefined,\n    Make: undefined,\n    Model: undefined,\n    ModelVersion: undefined,\n    Platform: undefined,\n    PlatformVersion: undefined,\n    Timezone: undefined\n  };\n\n  if (output.AppVersion !== undefined && output.AppVersion !== null) {\n    contents.AppVersion = output.AppVersion;\n  }\n\n  if (output.Locale !== undefined && output.Locale !== null) {\n    contents.Locale = output.Locale;\n  }\n\n  if (output.Make !== undefined && output.Make !== null) {\n    contents.Make = output.Make;\n  }\n\n  if (output.Model !== undefined && output.Model !== null) {\n    contents.Model = output.Model;\n  }\n\n  if (output.ModelVersion !== undefined && output.ModelVersion !== null) {\n    contents.ModelVersion = output.ModelVersion;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.PlatformVersion !== undefined && output.PlatformVersion !== null) {\n    contents.PlatformVersion = output.PlatformVersion;\n  }\n\n  if (output.Timezone !== undefined && output.Timezone !== null) {\n    contents.Timezone = output.Timezone;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointItemResponse = function (output, context) {\n  var contents = {\n    __type: \"EndpointItemResponse\",\n    Message: undefined,\n    StatusCode: undefined\n  };\n\n  if (output.Message !== undefined && output.Message !== null) {\n    contents.Message = output.Message;\n  }\n\n  if (output.StatusCode !== undefined && output.StatusCode !== null) {\n    contents.StatusCode = output.StatusCode;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointLocation = function (output, context) {\n  var contents = {\n    __type: \"EndpointLocation\",\n    City: undefined,\n    Country: undefined,\n    Latitude: undefined,\n    Longitude: undefined,\n    PostalCode: undefined,\n    Region: undefined\n  };\n\n  if (output.City !== undefined && output.City !== null) {\n    contents.City = output.City;\n  }\n\n  if (output.Country !== undefined && output.Country !== null) {\n    contents.Country = output.Country;\n  }\n\n  if (output.Latitude !== undefined && output.Latitude !== null) {\n    contents.Latitude = output.Latitude;\n  }\n\n  if (output.Longitude !== undefined && output.Longitude !== null) {\n    contents.Longitude = output.Longitude;\n  }\n\n  if (output.PostalCode !== undefined && output.PostalCode !== null) {\n    contents.PostalCode = output.PostalCode;\n  }\n\n  if (output.Region !== undefined && output.Region !== null) {\n    contents.Region = output.Region;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointMessageResult = function (output, context) {\n  var contents = {\n    __type: \"EndpointMessageResult\",\n    Address: undefined,\n    DeliveryStatus: undefined,\n    MessageId: undefined,\n    StatusCode: undefined,\n    StatusMessage: undefined,\n    UpdatedToken: undefined\n  };\n\n  if (output.Address !== undefined && output.Address !== null) {\n    contents.Address = output.Address;\n  }\n\n  if (output.DeliveryStatus !== undefined && output.DeliveryStatus !== null) {\n    contents.DeliveryStatus = output.DeliveryStatus;\n  }\n\n  if (output.MessageId !== undefined && output.MessageId !== null) {\n    contents.MessageId = output.MessageId;\n  }\n\n  if (output.StatusCode !== undefined && output.StatusCode !== null) {\n    contents.StatusCode = output.StatusCode;\n  }\n\n  if (output.StatusMessage !== undefined && output.StatusMessage !== null) {\n    contents.StatusMessage = output.StatusMessage;\n  }\n\n  if (output.UpdatedToken !== undefined && output.UpdatedToken !== null) {\n    contents.UpdatedToken = output.UpdatedToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointResponse = function (output, context) {\n  var contents = {\n    __type: \"EndpointResponse\",\n    Address: undefined,\n    ApplicationId: undefined,\n    Attributes: undefined,\n    ChannelType: undefined,\n    CohortId: undefined,\n    CreationDate: undefined,\n    Demographic: undefined,\n    EffectiveDate: undefined,\n    EndpointStatus: undefined,\n    Id: undefined,\n    Location: undefined,\n    Metrics: undefined,\n    OptOut: undefined,\n    RequestId: undefined,\n    User: undefined\n  };\n\n  if (output.Address !== undefined && output.Address !== null) {\n    contents.Address = output.Address;\n  }\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.Attributes !== undefined && output.Attributes !== null) {\n    contents.Attributes = deserializeAws_restJson1_1MapOfListOf__string(output.Attributes, context);\n  }\n\n  if (output.ChannelType !== undefined && output.ChannelType !== null) {\n    contents.ChannelType = output.ChannelType;\n  }\n\n  if (output.CohortId !== undefined && output.CohortId !== null) {\n    contents.CohortId = output.CohortId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Demographic !== undefined && output.Demographic !== null) {\n    contents.Demographic = deserializeAws_restJson1_1EndpointDemographic(output.Demographic, context);\n  }\n\n  if (output.EffectiveDate !== undefined && output.EffectiveDate !== null) {\n    contents.EffectiveDate = output.EffectiveDate;\n  }\n\n  if (output.EndpointStatus !== undefined && output.EndpointStatus !== null) {\n    contents.EndpointStatus = output.EndpointStatus;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.Location !== undefined && output.Location !== null) {\n    contents.Location = deserializeAws_restJson1_1EndpointLocation(output.Location, context);\n  }\n\n  if (output.Metrics !== undefined && output.Metrics !== null) {\n    contents.Metrics = deserializeAws_restJson1_1MapOf__double(output.Metrics, context);\n  }\n\n  if (output.OptOut !== undefined && output.OptOut !== null) {\n    contents.OptOut = output.OptOut;\n  }\n\n  if (output.RequestId !== undefined && output.RequestId !== null) {\n    contents.RequestId = output.RequestId;\n  }\n\n  if (output.User !== undefined && output.User !== null) {\n    contents.User = deserializeAws_restJson1_1EndpointUser(output.User, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointUser = function (output, context) {\n  var contents = {\n    __type: \"EndpointUser\",\n    UserAttributes: undefined,\n    UserId: undefined\n  };\n\n  if (output.UserAttributes !== undefined && output.UserAttributes !== null) {\n    contents.UserAttributes = deserializeAws_restJson1_1MapOfListOf__string(output.UserAttributes, context);\n  }\n\n  if (output.UserId !== undefined && output.UserId !== null) {\n    contents.UserId = output.UserId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EndpointsResponse = function (output, context) {\n  var contents = {\n    __type: \"EndpointsResponse\",\n    Item: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfEndpointResponse(output.Item, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EventCondition = function (output, context) {\n  var contents = {\n    __type: \"EventCondition\",\n    Dimensions: undefined,\n    MessageActivity: undefined\n  };\n\n  if (output.Dimensions !== undefined && output.Dimensions !== null) {\n    contents.Dimensions = deserializeAws_restJson1_1EventDimensions(output.Dimensions, context);\n  }\n\n  if (output.MessageActivity !== undefined && output.MessageActivity !== null) {\n    contents.MessageActivity = output.MessageActivity;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EventDimensions = function (output, context) {\n  var contents = {\n    __type: \"EventDimensions\",\n    Attributes: undefined,\n    EventType: undefined,\n    Metrics: undefined\n  };\n\n  if (output.Attributes !== undefined && output.Attributes !== null) {\n    contents.Attributes = deserializeAws_restJson1_1MapOfAttributeDimension(output.Attributes, context);\n  }\n\n  if (output.EventType !== undefined && output.EventType !== null) {\n    contents.EventType = deserializeAws_restJson1_1SetDimension(output.EventType, context);\n  }\n\n  if (output.Metrics !== undefined && output.Metrics !== null) {\n    contents.Metrics = deserializeAws_restJson1_1MapOfMetricDimension(output.Metrics, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EventItemResponse = function (output, context) {\n  var contents = {\n    __type: \"EventItemResponse\",\n    Message: undefined,\n    StatusCode: undefined\n  };\n\n  if (output.Message !== undefined && output.Message !== null) {\n    contents.Message = output.Message;\n  }\n\n  if (output.StatusCode !== undefined && output.StatusCode !== null) {\n    contents.StatusCode = output.StatusCode;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EventStream = function (output, context) {\n  var contents = {\n    __type: \"EventStream\",\n    ApplicationId: undefined,\n    DestinationStreamArn: undefined,\n    ExternalId: undefined,\n    LastModifiedDate: undefined,\n    LastUpdatedBy: undefined,\n    RoleArn: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null) {\n    contents.DestinationStreamArn = output.DestinationStreamArn;\n  }\n\n  if (output.ExternalId !== undefined && output.ExternalId !== null) {\n    contents.ExternalId = output.ExternalId;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null) {\n    contents.LastUpdatedBy = output.LastUpdatedBy;\n  }\n\n  if (output.RoleArn !== undefined && output.RoleArn !== null) {\n    contents.RoleArn = output.RoleArn;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1EventsResponse = function (output, context) {\n  var contents = {\n    __type: \"EventsResponse\",\n    Results: undefined\n  };\n\n  if (output.Results !== undefined && output.Results !== null) {\n    contents.Results = deserializeAws_restJson1_1MapOfItemResponse(output.Results, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ExportJobResource = function (output, context) {\n  var contents = {\n    __type: \"ExportJobResource\",\n    RoleArn: undefined,\n    S3UrlPrefix: undefined,\n    SegmentId: undefined,\n    SegmentVersion: undefined\n  };\n\n  if (output.RoleArn !== undefined && output.RoleArn !== null) {\n    contents.RoleArn = output.RoleArn;\n  }\n\n  if (output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null) {\n    contents.S3UrlPrefix = output.S3UrlPrefix;\n  }\n\n  if (output.SegmentId !== undefined && output.SegmentId !== null) {\n    contents.SegmentId = output.SegmentId;\n  }\n\n  if (output.SegmentVersion !== undefined && output.SegmentVersion !== null) {\n    contents.SegmentVersion = output.SegmentVersion;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ExportJobResponse = function (output, context) {\n  var contents = {\n    __type: \"ExportJobResponse\",\n    ApplicationId: undefined,\n    CompletedPieces: undefined,\n    CompletionDate: undefined,\n    CreationDate: undefined,\n    Definition: undefined,\n    FailedPieces: undefined,\n    Failures: undefined,\n    Id: undefined,\n    JobStatus: undefined,\n    TotalFailures: undefined,\n    TotalPieces: undefined,\n    TotalProcessed: undefined,\n    Type: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CompletedPieces !== undefined && output.CompletedPieces !== null) {\n    contents.CompletedPieces = output.CompletedPieces;\n  }\n\n  if (output.CompletionDate !== undefined && output.CompletionDate !== null) {\n    contents.CompletionDate = output.CompletionDate;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Definition !== undefined && output.Definition !== null) {\n    contents.Definition = deserializeAws_restJson1_1ExportJobResource(output.Definition, context);\n  }\n\n  if (output.FailedPieces !== undefined && output.FailedPieces !== null) {\n    contents.FailedPieces = output.FailedPieces;\n  }\n\n  if (output.Failures !== undefined && output.Failures !== null) {\n    contents.Failures = deserializeAws_restJson1_1ListOf__string(output.Failures, context);\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.JobStatus !== undefined && output.JobStatus !== null) {\n    contents.JobStatus = output.JobStatus;\n  }\n\n  if (output.TotalFailures !== undefined && output.TotalFailures !== null) {\n    contents.TotalFailures = output.TotalFailures;\n  }\n\n  if (output.TotalPieces !== undefined && output.TotalPieces !== null) {\n    contents.TotalPieces = output.TotalPieces;\n  }\n\n  if (output.TotalProcessed !== undefined && output.TotalProcessed !== null) {\n    contents.TotalProcessed = output.TotalProcessed;\n  }\n\n  if (output.Type !== undefined && output.Type !== null) {\n    contents.Type = output.Type;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ExportJobsResponse = function (output, context) {\n  var contents = {\n    __type: \"ExportJobsResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfExportJobResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1GCMChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"GCMChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Credential: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Credential !== undefined && output.Credential !== null) {\n    contents.Credential = output.Credential;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1GPSCoordinates = function (output, context) {\n  var contents = {\n    __type: \"GPSCoordinates\",\n    Latitude: undefined,\n    Longitude: undefined\n  };\n\n  if (output.Latitude !== undefined && output.Latitude !== null) {\n    contents.Latitude = output.Latitude;\n  }\n\n  if (output.Longitude !== undefined && output.Longitude !== null) {\n    contents.Longitude = output.Longitude;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1GPSPointDimension = function (output, context) {\n  var contents = {\n    __type: \"GPSPointDimension\",\n    Coordinates: undefined,\n    RangeInKilometers: undefined\n  };\n\n  if (output.Coordinates !== undefined && output.Coordinates !== null) {\n    contents.Coordinates = deserializeAws_restJson1_1GPSCoordinates(output.Coordinates, context);\n  }\n\n  if (output.RangeInKilometers !== undefined && output.RangeInKilometers !== null) {\n    contents.RangeInKilometers = output.RangeInKilometers;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1HoldoutActivity = function (output, context) {\n  var contents = {\n    __type: \"HoldoutActivity\",\n    NextActivity: undefined,\n    Percentage: undefined\n  };\n\n  if (output.NextActivity !== undefined && output.NextActivity !== null) {\n    contents.NextActivity = output.NextActivity;\n  }\n\n  if (output.Percentage !== undefined && output.Percentage !== null) {\n    contents.Percentage = output.Percentage;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ImportJobResource = function (output, context) {\n  var contents = {\n    __type: \"ImportJobResource\",\n    DefineSegment: undefined,\n    ExternalId: undefined,\n    Format: undefined,\n    RegisterEndpoints: undefined,\n    RoleArn: undefined,\n    S3Url: undefined,\n    SegmentId: undefined,\n    SegmentName: undefined\n  };\n\n  if (output.DefineSegment !== undefined && output.DefineSegment !== null) {\n    contents.DefineSegment = output.DefineSegment;\n  }\n\n  if (output.ExternalId !== undefined && output.ExternalId !== null) {\n    contents.ExternalId = output.ExternalId;\n  }\n\n  if (output.Format !== undefined && output.Format !== null) {\n    contents.Format = output.Format;\n  }\n\n  if (output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null) {\n    contents.RegisterEndpoints = output.RegisterEndpoints;\n  }\n\n  if (output.RoleArn !== undefined && output.RoleArn !== null) {\n    contents.RoleArn = output.RoleArn;\n  }\n\n  if (output.S3Url !== undefined && output.S3Url !== null) {\n    contents.S3Url = output.S3Url;\n  }\n\n  if (output.SegmentId !== undefined && output.SegmentId !== null) {\n    contents.SegmentId = output.SegmentId;\n  }\n\n  if (output.SegmentName !== undefined && output.SegmentName !== null) {\n    contents.SegmentName = output.SegmentName;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ImportJobResponse = function (output, context) {\n  var contents = {\n    __type: \"ImportJobResponse\",\n    ApplicationId: undefined,\n    CompletedPieces: undefined,\n    CompletionDate: undefined,\n    CreationDate: undefined,\n    Definition: undefined,\n    FailedPieces: undefined,\n    Failures: undefined,\n    Id: undefined,\n    JobStatus: undefined,\n    TotalFailures: undefined,\n    TotalPieces: undefined,\n    TotalProcessed: undefined,\n    Type: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CompletedPieces !== undefined && output.CompletedPieces !== null) {\n    contents.CompletedPieces = output.CompletedPieces;\n  }\n\n  if (output.CompletionDate !== undefined && output.CompletionDate !== null) {\n    contents.CompletionDate = output.CompletionDate;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Definition !== undefined && output.Definition !== null) {\n    contents.Definition = deserializeAws_restJson1_1ImportJobResource(output.Definition, context);\n  }\n\n  if (output.FailedPieces !== undefined && output.FailedPieces !== null) {\n    contents.FailedPieces = output.FailedPieces;\n  }\n\n  if (output.Failures !== undefined && output.Failures !== null) {\n    contents.Failures = deserializeAws_restJson1_1ListOf__string(output.Failures, context);\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.JobStatus !== undefined && output.JobStatus !== null) {\n    contents.JobStatus = output.JobStatus;\n  }\n\n  if (output.TotalFailures !== undefined && output.TotalFailures !== null) {\n    contents.TotalFailures = output.TotalFailures;\n  }\n\n  if (output.TotalPieces !== undefined && output.TotalPieces !== null) {\n    contents.TotalPieces = output.TotalPieces;\n  }\n\n  if (output.TotalProcessed !== undefined && output.TotalProcessed !== null) {\n    contents.TotalProcessed = output.TotalProcessed;\n  }\n\n  if (output.Type !== undefined && output.Type !== null) {\n    contents.Type = output.Type;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ImportJobsResponse = function (output, context) {\n  var contents = {\n    __type: \"ImportJobsResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfImportJobResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ItemResponse = function (output, context) {\n  var contents = {\n    __type: \"ItemResponse\",\n    EndpointItemResponse: undefined,\n    EventsItemResponse: undefined\n  };\n\n  if (output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null) {\n    contents.EndpointItemResponse = deserializeAws_restJson1_1EndpointItemResponse(output.EndpointItemResponse, context);\n  }\n\n  if (output.EventsItemResponse !== undefined && output.EventsItemResponse !== null) {\n    contents.EventsItemResponse = deserializeAws_restJson1_1MapOfEventItemResponse(output.EventsItemResponse, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneyDateRangeKpiResponse = function (output, context) {\n  var contents = {\n    __type: \"JourneyDateRangeKpiResponse\",\n    ApplicationId: undefined,\n    EndTime: undefined,\n    JourneyId: undefined,\n    KpiName: undefined,\n    KpiResult: undefined,\n    NextToken: undefined,\n    StartTime: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.EndTime !== undefined && output.EndTime !== null) {\n    contents.EndTime = new Date(output.EndTime);\n  }\n\n  if (output.JourneyId !== undefined && output.JourneyId !== null) {\n    contents.JourneyId = output.JourneyId;\n  }\n\n  if (output.KpiName !== undefined && output.KpiName !== null) {\n    contents.KpiName = output.KpiName;\n  }\n\n  if (output.KpiResult !== undefined && output.KpiResult !== null) {\n    contents.KpiResult = deserializeAws_restJson1_1BaseKpiResult(output.KpiResult, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  if (output.StartTime !== undefined && output.StartTime !== null) {\n    contents.StartTime = new Date(output.StartTime);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneyEmailMessage = function (output, context) {\n  var contents = {\n    __type: \"JourneyEmailMessage\",\n    FromAddress: undefined\n  };\n\n  if (output.FromAddress !== undefined && output.FromAddress !== null) {\n    contents.FromAddress = output.FromAddress;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneyExecutionActivityMetricsResponse = function (output, context) {\n  var contents = {\n    __type: \"JourneyExecutionActivityMetricsResponse\",\n    ActivityType: undefined,\n    ApplicationId: undefined,\n    JourneyActivityId: undefined,\n    JourneyId: undefined,\n    LastEvaluatedTime: undefined,\n    Metrics: undefined\n  };\n\n  if (output.ActivityType !== undefined && output.ActivityType !== null) {\n    contents.ActivityType = output.ActivityType;\n  }\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.JourneyActivityId !== undefined && output.JourneyActivityId !== null) {\n    contents.JourneyActivityId = output.JourneyActivityId;\n  }\n\n  if (output.JourneyId !== undefined && output.JourneyId !== null) {\n    contents.JourneyId = output.JourneyId;\n  }\n\n  if (output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null) {\n    contents.LastEvaluatedTime = output.LastEvaluatedTime;\n  }\n\n  if (output.Metrics !== undefined && output.Metrics !== null) {\n    contents.Metrics = deserializeAws_restJson1_1MapOf__string(output.Metrics, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneyExecutionMetricsResponse = function (output, context) {\n  var contents = {\n    __type: \"JourneyExecutionMetricsResponse\",\n    ApplicationId: undefined,\n    JourneyId: undefined,\n    LastEvaluatedTime: undefined,\n    Metrics: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.JourneyId !== undefined && output.JourneyId !== null) {\n    contents.JourneyId = output.JourneyId;\n  }\n\n  if (output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null) {\n    contents.LastEvaluatedTime = output.LastEvaluatedTime;\n  }\n\n  if (output.Metrics !== undefined && output.Metrics !== null) {\n    contents.Metrics = deserializeAws_restJson1_1MapOf__string(output.Metrics, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneyLimits = function (output, context) {\n  var contents = {\n    __type: \"JourneyLimits\",\n    DailyCap: undefined,\n    EndpointReentryCap: undefined,\n    MessagesPerSecond: undefined\n  };\n\n  if (output.DailyCap !== undefined && output.DailyCap !== null) {\n    contents.DailyCap = output.DailyCap;\n  }\n\n  if (output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null) {\n    contents.EndpointReentryCap = output.EndpointReentryCap;\n  }\n\n  if (output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null) {\n    contents.MessagesPerSecond = output.MessagesPerSecond;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneyResponse = function (output, context) {\n  var contents = {\n    __type: \"JourneyResponse\",\n    Activities: undefined,\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Id: undefined,\n    LastModifiedDate: undefined,\n    Limits: undefined,\n    LocalTime: undefined,\n    Name: undefined,\n    QuietTime: undefined,\n    RefreshFrequency: undefined,\n    Schedule: undefined,\n    StartActivity: undefined,\n    StartCondition: undefined,\n    State: undefined,\n    tags: undefined\n  };\n\n  if (output.Activities !== undefined && output.Activities !== null) {\n    contents.Activities = deserializeAws_restJson1_1MapOfActivity(output.Activities, context);\n  }\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Limits !== undefined && output.Limits !== null) {\n    contents.Limits = deserializeAws_restJson1_1JourneyLimits(output.Limits, context);\n  }\n\n  if (output.LocalTime !== undefined && output.LocalTime !== null) {\n    contents.LocalTime = output.LocalTime;\n  }\n\n  if (output.Name !== undefined && output.Name !== null) {\n    contents.Name = output.Name;\n  }\n\n  if (output.QuietTime !== undefined && output.QuietTime !== null) {\n    contents.QuietTime = deserializeAws_restJson1_1QuietTime(output.QuietTime, context);\n  }\n\n  if (output.RefreshFrequency !== undefined && output.RefreshFrequency !== null) {\n    contents.RefreshFrequency = output.RefreshFrequency;\n  }\n\n  if (output.Schedule !== undefined && output.Schedule !== null) {\n    contents.Schedule = deserializeAws_restJson1_1JourneySchedule(output.Schedule, context);\n  }\n\n  if (output.StartActivity !== undefined && output.StartActivity !== null) {\n    contents.StartActivity = output.StartActivity;\n  }\n\n  if (output.StartCondition !== undefined && output.StartCondition !== null) {\n    contents.StartCondition = deserializeAws_restJson1_1StartCondition(output.StartCondition, context);\n  }\n\n  if (output.State !== undefined && output.State !== null) {\n    contents.State = output.State;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneySchedule = function (output, context) {\n  var contents = {\n    __type: \"JourneySchedule\",\n    EndTime: undefined,\n    StartTime: undefined,\n    Timezone: undefined\n  };\n\n  if (output.EndTime !== undefined && output.EndTime !== null) {\n    contents.EndTime = new Date(output.EndTime);\n  }\n\n  if (output.StartTime !== undefined && output.StartTime !== null) {\n    contents.StartTime = new Date(output.StartTime);\n  }\n\n  if (output.Timezone !== undefined && output.Timezone !== null) {\n    contents.Timezone = output.Timezone;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1JourneysResponse = function (output, context) {\n  var contents = {\n    __type: \"JourneysResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfJourneyResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ListOfActivityResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1ActivityResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfApplicationResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1ApplicationResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfCampaignResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1CampaignResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfEndpointResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1EndpointResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfExportJobResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1ExportJobResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfImportJobResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1ImportJobResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfJourneyResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1JourneyResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfMultiConditionalBranch = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1MultiConditionalBranch(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfRandomSplitEntry = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1RandomSplitEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfResultRow = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1ResultRow(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfResultRowValue = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1ResultRowValue(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfSegmentDimensions = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1SegmentDimensions(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfSegmentGroup = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1SegmentGroup(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfSegmentReference = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1SegmentReference(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfSegmentResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1SegmentResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfSimpleCondition = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1SimpleCondition(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfTemplateResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1TemplateResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfTemplateVersionResponse = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1TemplateVersionResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOfTreatmentResource = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1_1TreatmentResource(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1_1ListOf__string = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restJson1_1MapOfActivity = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1Activity(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfAttributeDimension = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1AttributeDimension(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfChannelResponse = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1ChannelResponse(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfEndpointMessageResult = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1EndpointMessageResult(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfEventItemResponse = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1EventItemResponse(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfItemResponse = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1ItemResponse(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfListOf__string = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1ListOf__string(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfMapOfEndpointMessageResult = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1MapOfEndpointMessageResult(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfMessageResult = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1MessageResult(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOfMetricDimension = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = deserializeAws_restJson1_1MetricDimension(output[key], context);\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOf__double = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = output[key];\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOf__integer = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = output[key];\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1MapOf__string = function (output, context) {\n  var mapParams = {};\n  Object.keys(output).forEach(function (key) {\n    mapParams[key] = output[key];\n  });\n  return mapParams;\n};\n\nvar deserializeAws_restJson1_1Message = function (output, context) {\n  var contents = {\n    __type: \"Message\",\n    Action: undefined,\n    Body: undefined,\n    ImageIconUrl: undefined,\n    ImageSmallIconUrl: undefined,\n    ImageUrl: undefined,\n    JsonBody: undefined,\n    MediaUrl: undefined,\n    RawContent: undefined,\n    SilentPush: undefined,\n    TimeToLive: undefined,\n    Title: undefined,\n    Url: undefined\n  };\n\n  if (output.Action !== undefined && output.Action !== null) {\n    contents.Action = output.Action;\n  }\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.ImageIconUrl !== undefined && output.ImageIconUrl !== null) {\n    contents.ImageIconUrl = output.ImageIconUrl;\n  }\n\n  if (output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null) {\n    contents.ImageSmallIconUrl = output.ImageSmallIconUrl;\n  }\n\n  if (output.ImageUrl !== undefined && output.ImageUrl !== null) {\n    contents.ImageUrl = output.ImageUrl;\n  }\n\n  if (output.JsonBody !== undefined && output.JsonBody !== null) {\n    contents.JsonBody = output.JsonBody;\n  }\n\n  if (output.MediaUrl !== undefined && output.MediaUrl !== null) {\n    contents.MediaUrl = output.MediaUrl;\n  }\n\n  if (output.RawContent !== undefined && output.RawContent !== null) {\n    contents.RawContent = output.RawContent;\n  }\n\n  if (output.SilentPush !== undefined && output.SilentPush !== null) {\n    contents.SilentPush = output.SilentPush;\n  }\n\n  if (output.TimeToLive !== undefined && output.TimeToLive !== null) {\n    contents.TimeToLive = output.TimeToLive;\n  }\n\n  if (output.Title !== undefined && output.Title !== null) {\n    contents.Title = output.Title;\n  }\n\n  if (output.Url !== undefined && output.Url !== null) {\n    contents.Url = output.Url;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MessageBody = function (output, context) {\n  var contents = {\n    __type: \"MessageBody\",\n    Message: undefined,\n    RequestID: undefined\n  };\n\n  if (output.Message !== undefined && output.Message !== null) {\n    contents.Message = output.Message;\n  }\n\n  if (output.RequestID !== undefined && output.RequestID !== null) {\n    contents.RequestID = output.RequestID;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MessageConfiguration = function (output, context) {\n  var contents = {\n    __type: \"MessageConfiguration\",\n    ADMMessage: undefined,\n    APNSMessage: undefined,\n    BaiduMessage: undefined,\n    DefaultMessage: undefined,\n    EmailMessage: undefined,\n    GCMMessage: undefined,\n    SMSMessage: undefined\n  };\n\n  if (output.ADMMessage !== undefined && output.ADMMessage !== null) {\n    contents.ADMMessage = deserializeAws_restJson1_1Message(output.ADMMessage, context);\n  }\n\n  if (output.APNSMessage !== undefined && output.APNSMessage !== null) {\n    contents.APNSMessage = deserializeAws_restJson1_1Message(output.APNSMessage, context);\n  }\n\n  if (output.BaiduMessage !== undefined && output.BaiduMessage !== null) {\n    contents.BaiduMessage = deserializeAws_restJson1_1Message(output.BaiduMessage, context);\n  }\n\n  if (output.DefaultMessage !== undefined && output.DefaultMessage !== null) {\n    contents.DefaultMessage = deserializeAws_restJson1_1Message(output.DefaultMessage, context);\n  }\n\n  if (output.EmailMessage !== undefined && output.EmailMessage !== null) {\n    contents.EmailMessage = deserializeAws_restJson1_1CampaignEmailMessage(output.EmailMessage, context);\n  }\n\n  if (output.GCMMessage !== undefined && output.GCMMessage !== null) {\n    contents.GCMMessage = deserializeAws_restJson1_1Message(output.GCMMessage, context);\n  }\n\n  if (output.SMSMessage !== undefined && output.SMSMessage !== null) {\n    contents.SMSMessage = deserializeAws_restJson1_1CampaignSmsMessage(output.SMSMessage, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MessageResponse = function (output, context) {\n  var contents = {\n    __type: \"MessageResponse\",\n    ApplicationId: undefined,\n    EndpointResult: undefined,\n    RequestId: undefined,\n    Result: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.EndpointResult !== undefined && output.EndpointResult !== null) {\n    contents.EndpointResult = deserializeAws_restJson1_1MapOfEndpointMessageResult(output.EndpointResult, context);\n  }\n\n  if (output.RequestId !== undefined && output.RequestId !== null) {\n    contents.RequestId = output.RequestId;\n  }\n\n  if (output.Result !== undefined && output.Result !== null) {\n    contents.Result = deserializeAws_restJson1_1MapOfMessageResult(output.Result, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MessageResult = function (output, context) {\n  var contents = {\n    __type: \"MessageResult\",\n    DeliveryStatus: undefined,\n    MessageId: undefined,\n    StatusCode: undefined,\n    StatusMessage: undefined,\n    UpdatedToken: undefined\n  };\n\n  if (output.DeliveryStatus !== undefined && output.DeliveryStatus !== null) {\n    contents.DeliveryStatus = output.DeliveryStatus;\n  }\n\n  if (output.MessageId !== undefined && output.MessageId !== null) {\n    contents.MessageId = output.MessageId;\n  }\n\n  if (output.StatusCode !== undefined && output.StatusCode !== null) {\n    contents.StatusCode = output.StatusCode;\n  }\n\n  if (output.StatusMessage !== undefined && output.StatusMessage !== null) {\n    contents.StatusMessage = output.StatusMessage;\n  }\n\n  if (output.UpdatedToken !== undefined && output.UpdatedToken !== null) {\n    contents.UpdatedToken = output.UpdatedToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MetricDimension = function (output, context) {\n  var contents = {\n    __type: \"MetricDimension\",\n    ComparisonOperator: undefined,\n    Value: undefined\n  };\n\n  if (output.ComparisonOperator !== undefined && output.ComparisonOperator !== null) {\n    contents.ComparisonOperator = output.ComparisonOperator;\n  }\n\n  if (output.Value !== undefined && output.Value !== null) {\n    contents.Value = output.Value;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MultiConditionalBranch = function (output, context) {\n  var contents = {\n    __type: \"MultiConditionalBranch\",\n    Condition: undefined,\n    NextActivity: undefined\n  };\n\n  if (output.Condition !== undefined && output.Condition !== null) {\n    contents.Condition = deserializeAws_restJson1_1SimpleCondition(output.Condition, context);\n  }\n\n  if (output.NextActivity !== undefined && output.NextActivity !== null) {\n    contents.NextActivity = output.NextActivity;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1MultiConditionalSplitActivity = function (output, context) {\n  var contents = {\n    __type: \"MultiConditionalSplitActivity\",\n    Branches: undefined,\n    DefaultActivity: undefined,\n    EvaluationWaitTime: undefined\n  };\n\n  if (output.Branches !== undefined && output.Branches !== null) {\n    contents.Branches = deserializeAws_restJson1_1ListOfMultiConditionalBranch(output.Branches, context);\n  }\n\n  if (output.DefaultActivity !== undefined && output.DefaultActivity !== null) {\n    contents.DefaultActivity = output.DefaultActivity;\n  }\n\n  if (output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null) {\n    contents.EvaluationWaitTime = deserializeAws_restJson1_1WaitTime(output.EvaluationWaitTime, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1NumberValidateResponse = function (output, context) {\n  var contents = {\n    __type: \"NumberValidateResponse\",\n    Carrier: undefined,\n    City: undefined,\n    CleansedPhoneNumberE164: undefined,\n    CleansedPhoneNumberNational: undefined,\n    Country: undefined,\n    CountryCodeIso2: undefined,\n    CountryCodeNumeric: undefined,\n    County: undefined,\n    OriginalCountryCodeIso2: undefined,\n    OriginalPhoneNumber: undefined,\n    PhoneType: undefined,\n    PhoneTypeCode: undefined,\n    Timezone: undefined,\n    ZipCode: undefined\n  };\n\n  if (output.Carrier !== undefined && output.Carrier !== null) {\n    contents.Carrier = output.Carrier;\n  }\n\n  if (output.City !== undefined && output.City !== null) {\n    contents.City = output.City;\n  }\n\n  if (output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null) {\n    contents.CleansedPhoneNumberE164 = output.CleansedPhoneNumberE164;\n  }\n\n  if (output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null) {\n    contents.CleansedPhoneNumberNational = output.CleansedPhoneNumberNational;\n  }\n\n  if (output.Country !== undefined && output.Country !== null) {\n    contents.Country = output.Country;\n  }\n\n  if (output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null) {\n    contents.CountryCodeIso2 = output.CountryCodeIso2;\n  }\n\n  if (output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null) {\n    contents.CountryCodeNumeric = output.CountryCodeNumeric;\n  }\n\n  if (output.County !== undefined && output.County !== null) {\n    contents.County = output.County;\n  }\n\n  if (output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null) {\n    contents.OriginalCountryCodeIso2 = output.OriginalCountryCodeIso2;\n  }\n\n  if (output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null) {\n    contents.OriginalPhoneNumber = output.OriginalPhoneNumber;\n  }\n\n  if (output.PhoneType !== undefined && output.PhoneType !== null) {\n    contents.PhoneType = output.PhoneType;\n  }\n\n  if (output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null) {\n    contents.PhoneTypeCode = output.PhoneTypeCode;\n  }\n\n  if (output.Timezone !== undefined && output.Timezone !== null) {\n    contents.Timezone = output.Timezone;\n  }\n\n  if (output.ZipCode !== undefined && output.ZipCode !== null) {\n    contents.ZipCode = output.ZipCode;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1PushNotificationTemplateResponse = function (output, context) {\n  var contents = {\n    __type: \"PushNotificationTemplateResponse\",\n    ADM: undefined,\n    APNS: undefined,\n    Arn: undefined,\n    Baidu: undefined,\n    CreationDate: undefined,\n    Default: undefined,\n    DefaultSubstitutions: undefined,\n    GCM: undefined,\n    LastModifiedDate: undefined,\n    TemplateDescription: undefined,\n    TemplateName: undefined,\n    TemplateType: undefined,\n    Version: undefined,\n    tags: undefined\n  };\n\n  if (output.ADM !== undefined && output.ADM !== null) {\n    contents.ADM = deserializeAws_restJson1_1AndroidPushNotificationTemplate(output.ADM, context);\n  }\n\n  if (output.APNS !== undefined && output.APNS !== null) {\n    contents.APNS = deserializeAws_restJson1_1APNSPushNotificationTemplate(output.APNS, context);\n  }\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.Baidu !== undefined && output.Baidu !== null) {\n    contents.Baidu = deserializeAws_restJson1_1AndroidPushNotificationTemplate(output.Baidu, context);\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Default !== undefined && output.Default !== null) {\n    contents.Default = deserializeAws_restJson1_1DefaultPushNotificationTemplate(output.Default, context);\n  }\n\n  if (output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null) {\n    contents.DefaultSubstitutions = output.DefaultSubstitutions;\n  }\n\n  if (output.GCM !== undefined && output.GCM !== null) {\n    contents.GCM = deserializeAws_restJson1_1AndroidPushNotificationTemplate(output.GCM, context);\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.TemplateDescription !== undefined && output.TemplateDescription !== null) {\n    contents.TemplateDescription = output.TemplateDescription;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateType !== undefined && output.TemplateType !== null) {\n    contents.TemplateType = output.TemplateType;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1QuietTime = function (output, context) {\n  var contents = {\n    __type: \"QuietTime\",\n    End: undefined,\n    Start: undefined\n  };\n\n  if (output.End !== undefined && output.End !== null) {\n    contents.End = output.End;\n  }\n\n  if (output.Start !== undefined && output.Start !== null) {\n    contents.Start = output.Start;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1RandomSplitActivity = function (output, context) {\n  var contents = {\n    __type: \"RandomSplitActivity\",\n    Branches: undefined\n  };\n\n  if (output.Branches !== undefined && output.Branches !== null) {\n    contents.Branches = deserializeAws_restJson1_1ListOfRandomSplitEntry(output.Branches, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1RandomSplitEntry = function (output, context) {\n  var contents = {\n    __type: \"RandomSplitEntry\",\n    NextActivity: undefined,\n    Percentage: undefined\n  };\n\n  if (output.NextActivity !== undefined && output.NextActivity !== null) {\n    contents.NextActivity = output.NextActivity;\n  }\n\n  if (output.Percentage !== undefined && output.Percentage !== null) {\n    contents.Percentage = output.Percentage;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1RecencyDimension = function (output, context) {\n  var contents = {\n    __type: \"RecencyDimension\",\n    Duration: undefined,\n    RecencyType: undefined\n  };\n\n  if (output.Duration !== undefined && output.Duration !== null) {\n    contents.Duration = output.Duration;\n  }\n\n  if (output.RecencyType !== undefined && output.RecencyType !== null) {\n    contents.RecencyType = output.RecencyType;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ResultRow = function (output, context) {\n  var contents = {\n    __type: \"ResultRow\",\n    GroupedBys: undefined,\n    Values: undefined\n  };\n\n  if (output.GroupedBys !== undefined && output.GroupedBys !== null) {\n    contents.GroupedBys = deserializeAws_restJson1_1ListOfResultRowValue(output.GroupedBys, context);\n  }\n\n  if (output.Values !== undefined && output.Values !== null) {\n    contents.Values = deserializeAws_restJson1_1ListOfResultRowValue(output.Values, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1ResultRowValue = function (output, context) {\n  var contents = {\n    __type: \"ResultRowValue\",\n    Key: undefined,\n    Type: undefined,\n    Value: undefined\n  };\n\n  if (output.Key !== undefined && output.Key !== null) {\n    contents.Key = output.Key;\n  }\n\n  if (output.Type !== undefined && output.Type !== null) {\n    contents.Type = output.Type;\n  }\n\n  if (output.Value !== undefined && output.Value !== null) {\n    contents.Value = output.Value;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SMSChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"SMSChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    PromotionalMessagesPerSecond: undefined,\n    SenderId: undefined,\n    ShortCode: undefined,\n    TransactionalMessagesPerSecond: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null) {\n    contents.PromotionalMessagesPerSecond = output.PromotionalMessagesPerSecond;\n  }\n\n  if (output.SenderId !== undefined && output.SenderId !== null) {\n    contents.SenderId = output.SenderId;\n  }\n\n  if (output.ShortCode !== undefined && output.ShortCode !== null) {\n    contents.ShortCode = output.ShortCode;\n  }\n\n  if (output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null) {\n    contents.TransactionalMessagesPerSecond = output.TransactionalMessagesPerSecond;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SMSTemplateResponse = function (output, context) {\n  var contents = {\n    __type: \"SMSTemplateResponse\",\n    Arn: undefined,\n    Body: undefined,\n    CreationDate: undefined,\n    DefaultSubstitutions: undefined,\n    LastModifiedDate: undefined,\n    TemplateDescription: undefined,\n    TemplateName: undefined,\n    TemplateType: undefined,\n    Version: undefined,\n    tags: undefined\n  };\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null) {\n    contents.DefaultSubstitutions = output.DefaultSubstitutions;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.TemplateDescription !== undefined && output.TemplateDescription !== null) {\n    contents.TemplateDescription = output.TemplateDescription;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateType !== undefined && output.TemplateType !== null) {\n    contents.TemplateType = output.TemplateType;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1Schedule = function (output, context) {\n  var contents = {\n    __type: \"Schedule\",\n    EndTime: undefined,\n    EventFilter: undefined,\n    Frequency: undefined,\n    IsLocalTime: undefined,\n    QuietTime: undefined,\n    StartTime: undefined,\n    Timezone: undefined\n  };\n\n  if (output.EndTime !== undefined && output.EndTime !== null) {\n    contents.EndTime = output.EndTime;\n  }\n\n  if (output.EventFilter !== undefined && output.EventFilter !== null) {\n    contents.EventFilter = deserializeAws_restJson1_1CampaignEventFilter(output.EventFilter, context);\n  }\n\n  if (output.Frequency !== undefined && output.Frequency !== null) {\n    contents.Frequency = output.Frequency;\n  }\n\n  if (output.IsLocalTime !== undefined && output.IsLocalTime !== null) {\n    contents.IsLocalTime = output.IsLocalTime;\n  }\n\n  if (output.QuietTime !== undefined && output.QuietTime !== null) {\n    contents.QuietTime = deserializeAws_restJson1_1QuietTime(output.QuietTime, context);\n  }\n\n  if (output.StartTime !== undefined && output.StartTime !== null) {\n    contents.StartTime = output.StartTime;\n  }\n\n  if (output.Timezone !== undefined && output.Timezone !== null) {\n    contents.Timezone = output.Timezone;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentBehaviors = function (output, context) {\n  var contents = {\n    __type: \"SegmentBehaviors\",\n    Recency: undefined\n  };\n\n  if (output.Recency !== undefined && output.Recency !== null) {\n    contents.Recency = deserializeAws_restJson1_1RecencyDimension(output.Recency, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentCondition = function (output, context) {\n  var contents = {\n    __type: \"SegmentCondition\",\n    SegmentId: undefined\n  };\n\n  if (output.SegmentId !== undefined && output.SegmentId !== null) {\n    contents.SegmentId = output.SegmentId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentDemographics = function (output, context) {\n  var contents = {\n    __type: \"SegmentDemographics\",\n    AppVersion: undefined,\n    Channel: undefined,\n    DeviceType: undefined,\n    Make: undefined,\n    Model: undefined,\n    Platform: undefined\n  };\n\n  if (output.AppVersion !== undefined && output.AppVersion !== null) {\n    contents.AppVersion = deserializeAws_restJson1_1SetDimension(output.AppVersion, context);\n  }\n\n  if (output.Channel !== undefined && output.Channel !== null) {\n    contents.Channel = deserializeAws_restJson1_1SetDimension(output.Channel, context);\n  }\n\n  if (output.DeviceType !== undefined && output.DeviceType !== null) {\n    contents.DeviceType = deserializeAws_restJson1_1SetDimension(output.DeviceType, context);\n  }\n\n  if (output.Make !== undefined && output.Make !== null) {\n    contents.Make = deserializeAws_restJson1_1SetDimension(output.Make, context);\n  }\n\n  if (output.Model !== undefined && output.Model !== null) {\n    contents.Model = deserializeAws_restJson1_1SetDimension(output.Model, context);\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = deserializeAws_restJson1_1SetDimension(output.Platform, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentDimensions = function (output, context) {\n  var contents = {\n    __type: \"SegmentDimensions\",\n    Attributes: undefined,\n    Behavior: undefined,\n    Demographic: undefined,\n    Location: undefined,\n    Metrics: undefined,\n    UserAttributes: undefined\n  };\n\n  if (output.Attributes !== undefined && output.Attributes !== null) {\n    contents.Attributes = deserializeAws_restJson1_1MapOfAttributeDimension(output.Attributes, context);\n  }\n\n  if (output.Behavior !== undefined && output.Behavior !== null) {\n    contents.Behavior = deserializeAws_restJson1_1SegmentBehaviors(output.Behavior, context);\n  }\n\n  if (output.Demographic !== undefined && output.Demographic !== null) {\n    contents.Demographic = deserializeAws_restJson1_1SegmentDemographics(output.Demographic, context);\n  }\n\n  if (output.Location !== undefined && output.Location !== null) {\n    contents.Location = deserializeAws_restJson1_1SegmentLocation(output.Location, context);\n  }\n\n  if (output.Metrics !== undefined && output.Metrics !== null) {\n    contents.Metrics = deserializeAws_restJson1_1MapOfMetricDimension(output.Metrics, context);\n  }\n\n  if (output.UserAttributes !== undefined && output.UserAttributes !== null) {\n    contents.UserAttributes = deserializeAws_restJson1_1MapOfAttributeDimension(output.UserAttributes, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentGroup = function (output, context) {\n  var contents = {\n    __type: \"SegmentGroup\",\n    Dimensions: undefined,\n    SourceSegments: undefined,\n    SourceType: undefined,\n    Type: undefined\n  };\n\n  if (output.Dimensions !== undefined && output.Dimensions !== null) {\n    contents.Dimensions = deserializeAws_restJson1_1ListOfSegmentDimensions(output.Dimensions, context);\n  }\n\n  if (output.SourceSegments !== undefined && output.SourceSegments !== null) {\n    contents.SourceSegments = deserializeAws_restJson1_1ListOfSegmentReference(output.SourceSegments, context);\n  }\n\n  if (output.SourceType !== undefined && output.SourceType !== null) {\n    contents.SourceType = output.SourceType;\n  }\n\n  if (output.Type !== undefined && output.Type !== null) {\n    contents.Type = output.Type;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentGroupList = function (output, context) {\n  var contents = {\n    __type: \"SegmentGroupList\",\n    Groups: undefined,\n    Include: undefined\n  };\n\n  if (output.Groups !== undefined && output.Groups !== null) {\n    contents.Groups = deserializeAws_restJson1_1ListOfSegmentGroup(output.Groups, context);\n  }\n\n  if (output.Include !== undefined && output.Include !== null) {\n    contents.Include = output.Include;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentImportResource = function (output, context) {\n  var contents = {\n    __type: \"SegmentImportResource\",\n    ChannelCounts: undefined,\n    ExternalId: undefined,\n    Format: undefined,\n    RoleArn: undefined,\n    S3Url: undefined,\n    Size: undefined\n  };\n\n  if (output.ChannelCounts !== undefined && output.ChannelCounts !== null) {\n    contents.ChannelCounts = deserializeAws_restJson1_1MapOf__integer(output.ChannelCounts, context);\n  }\n\n  if (output.ExternalId !== undefined && output.ExternalId !== null) {\n    contents.ExternalId = output.ExternalId;\n  }\n\n  if (output.Format !== undefined && output.Format !== null) {\n    contents.Format = output.Format;\n  }\n\n  if (output.RoleArn !== undefined && output.RoleArn !== null) {\n    contents.RoleArn = output.RoleArn;\n  }\n\n  if (output.S3Url !== undefined && output.S3Url !== null) {\n    contents.S3Url = output.S3Url;\n  }\n\n  if (output.Size !== undefined && output.Size !== null) {\n    contents.Size = output.Size;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentLocation = function (output, context) {\n  var contents = {\n    __type: \"SegmentLocation\",\n    Country: undefined,\n    GPSPoint: undefined\n  };\n\n  if (output.Country !== undefined && output.Country !== null) {\n    contents.Country = deserializeAws_restJson1_1SetDimension(output.Country, context);\n  }\n\n  if (output.GPSPoint !== undefined && output.GPSPoint !== null) {\n    contents.GPSPoint = deserializeAws_restJson1_1GPSPointDimension(output.GPSPoint, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentReference = function (output, context) {\n  var contents = {\n    __type: \"SegmentReference\",\n    Id: undefined,\n    Version: undefined\n  };\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentResponse = function (output, context) {\n  var contents = {\n    __type: \"SegmentResponse\",\n    ApplicationId: undefined,\n    Arn: undefined,\n    CreationDate: undefined,\n    Dimensions: undefined,\n    Id: undefined,\n    ImportDefinition: undefined,\n    LastModifiedDate: undefined,\n    Name: undefined,\n    SegmentGroups: undefined,\n    SegmentType: undefined,\n    Version: undefined,\n    tags: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Dimensions !== undefined && output.Dimensions !== null) {\n    contents.Dimensions = deserializeAws_restJson1_1SegmentDimensions(output.Dimensions, context);\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.ImportDefinition !== undefined && output.ImportDefinition !== null) {\n    contents.ImportDefinition = deserializeAws_restJson1_1SegmentImportResource(output.ImportDefinition, context);\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Name !== undefined && output.Name !== null) {\n    contents.Name = output.Name;\n  }\n\n  if (output.SegmentGroups !== undefined && output.SegmentGroups !== null) {\n    contents.SegmentGroups = deserializeAws_restJson1_1SegmentGroupList(output.SegmentGroups, context);\n  }\n\n  if (output.SegmentType !== undefined && output.SegmentType !== null) {\n    contents.SegmentType = output.SegmentType;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SegmentsResponse = function (output, context) {\n  var contents = {\n    __type: \"SegmentsResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfSegmentResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SendUsersMessageResponse = function (output, context) {\n  var contents = {\n    __type: \"SendUsersMessageResponse\",\n    ApplicationId: undefined,\n    RequestId: undefined,\n    Result: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.RequestId !== undefined && output.RequestId !== null) {\n    contents.RequestId = output.RequestId;\n  }\n\n  if (output.Result !== undefined && output.Result !== null) {\n    contents.Result = deserializeAws_restJson1_1MapOfMapOfEndpointMessageResult(output.Result, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SetDimension = function (output, context) {\n  var contents = {\n    __type: \"SetDimension\",\n    DimensionType: undefined,\n    Values: undefined\n  };\n\n  if (output.DimensionType !== undefined && output.DimensionType !== null) {\n    contents.DimensionType = output.DimensionType;\n  }\n\n  if (output.Values !== undefined && output.Values !== null) {\n    contents.Values = deserializeAws_restJson1_1ListOf__string(output.Values, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1SimpleCondition = function (output, context) {\n  var contents = {\n    __type: \"SimpleCondition\",\n    EventCondition: undefined,\n    SegmentCondition: undefined,\n    SegmentDimensions: undefined\n  };\n\n  if (output.EventCondition !== undefined && output.EventCondition !== null) {\n    contents.EventCondition = deserializeAws_restJson1_1EventCondition(output.EventCondition, context);\n  }\n\n  if (output.SegmentCondition !== undefined && output.SegmentCondition !== null) {\n    contents.SegmentCondition = deserializeAws_restJson1_1SegmentCondition(output.SegmentCondition, context);\n  }\n\n  if (output.segmentDimensions !== undefined && output.segmentDimensions !== null) {\n    contents.SegmentDimensions = deserializeAws_restJson1_1SegmentDimensions(output.segmentDimensions, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1StartCondition = function (output, context) {\n  var contents = {\n    __type: \"StartCondition\",\n    Description: undefined,\n    SegmentStartCondition: undefined\n  };\n\n  if (output.Description !== undefined && output.Description !== null) {\n    contents.Description = output.Description;\n  }\n\n  if (output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null) {\n    contents.SegmentStartCondition = deserializeAws_restJson1_1SegmentCondition(output.SegmentStartCondition, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TagsModel = function (output, context) {\n  var contents = {\n    __type: \"TagsModel\",\n    tags: undefined\n  };\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1Template = function (output, context) {\n  var contents = {\n    __type: \"Template\",\n    Name: undefined,\n    Version: undefined\n  };\n\n  if (output.Name !== undefined && output.Name !== null) {\n    contents.Name = output.Name;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TemplateConfiguration = function (output, context) {\n  var contents = {\n    __type: \"TemplateConfiguration\",\n    EmailTemplate: undefined,\n    PushTemplate: undefined,\n    SMSTemplate: undefined,\n    VoiceTemplate: undefined\n  };\n\n  if (output.EmailTemplate !== undefined && output.EmailTemplate !== null) {\n    contents.EmailTemplate = deserializeAws_restJson1_1Template(output.EmailTemplate, context);\n  }\n\n  if (output.PushTemplate !== undefined && output.PushTemplate !== null) {\n    contents.PushTemplate = deserializeAws_restJson1_1Template(output.PushTemplate, context);\n  }\n\n  if (output.SMSTemplate !== undefined && output.SMSTemplate !== null) {\n    contents.SMSTemplate = deserializeAws_restJson1_1Template(output.SMSTemplate, context);\n  }\n\n  if (output.VoiceTemplate !== undefined && output.VoiceTemplate !== null) {\n    contents.VoiceTemplate = deserializeAws_restJson1_1Template(output.VoiceTemplate, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TemplateResponse = function (output, context) {\n  var contents = {\n    __type: \"TemplateResponse\",\n    Arn: undefined,\n    CreationDate: undefined,\n    DefaultSubstitutions: undefined,\n    LastModifiedDate: undefined,\n    TemplateDescription: undefined,\n    TemplateName: undefined,\n    TemplateType: undefined,\n    Version: undefined,\n    tags: undefined\n  };\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null) {\n    contents.DefaultSubstitutions = output.DefaultSubstitutions;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.TemplateDescription !== undefined && output.TemplateDescription !== null) {\n    contents.TemplateDescription = output.TemplateDescription;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateType !== undefined && output.TemplateType !== null) {\n    contents.TemplateType = output.TemplateType;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TemplateVersionResponse = function (output, context) {\n  var contents = {\n    __type: \"TemplateVersionResponse\",\n    CreationDate: undefined,\n    DefaultSubstitutions: undefined,\n    LastModifiedDate: undefined,\n    TemplateDescription: undefined,\n    TemplateName: undefined,\n    TemplateType: undefined,\n    Version: undefined\n  };\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null) {\n    contents.DefaultSubstitutions = output.DefaultSubstitutions;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.TemplateDescription !== undefined && output.TemplateDescription !== null) {\n    contents.TemplateDescription = output.TemplateDescription;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateType !== undefined && output.TemplateType !== null) {\n    contents.TemplateType = output.TemplateType;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TemplateVersionsResponse = function (output, context) {\n  var contents = {\n    __type: \"TemplateVersionsResponse\",\n    Item: undefined,\n    Message: undefined,\n    NextToken: undefined,\n    RequestID: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfTemplateVersionResponse(output.Item, context);\n  }\n\n  if (output.Message !== undefined && output.Message !== null) {\n    contents.Message = output.Message;\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  if (output.RequestID !== undefined && output.RequestID !== null) {\n    contents.RequestID = output.RequestID;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TemplatesResponse = function (output, context) {\n  var contents = {\n    __type: \"TemplatesResponse\",\n    Item: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Item !== undefined && output.Item !== null) {\n    contents.Item = deserializeAws_restJson1_1ListOfTemplateResponse(output.Item, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1TreatmentResource = function (output, context) {\n  var contents = {\n    __type: \"TreatmentResource\",\n    Id: undefined,\n    MessageConfiguration: undefined,\n    Schedule: undefined,\n    SizePercent: undefined,\n    State: undefined,\n    TemplateConfiguration: undefined,\n    TreatmentDescription: undefined,\n    TreatmentName: undefined\n  };\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.MessageConfiguration !== undefined && output.MessageConfiguration !== null) {\n    contents.MessageConfiguration = deserializeAws_restJson1_1MessageConfiguration(output.MessageConfiguration, context);\n  }\n\n  if (output.Schedule !== undefined && output.Schedule !== null) {\n    contents.Schedule = deserializeAws_restJson1_1Schedule(output.Schedule, context);\n  }\n\n  if (output.SizePercent !== undefined && output.SizePercent !== null) {\n    contents.SizePercent = output.SizePercent;\n  }\n\n  if (output.State !== undefined && output.State !== null) {\n    contents.State = deserializeAws_restJson1_1CampaignState(output.State, context);\n  }\n\n  if (output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null) {\n    contents.TemplateConfiguration = deserializeAws_restJson1_1TemplateConfiguration(output.TemplateConfiguration, context);\n  }\n\n  if (output.TreatmentDescription !== undefined && output.TreatmentDescription !== null) {\n    contents.TreatmentDescription = output.TreatmentDescription;\n  }\n\n  if (output.TreatmentName !== undefined && output.TreatmentName !== null) {\n    contents.TreatmentName = output.TreatmentName;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1VoiceChannelResponse = function (output, context) {\n  var contents = {\n    __type: \"VoiceChannelResponse\",\n    ApplicationId: undefined,\n    CreationDate: undefined,\n    Enabled: undefined,\n    HasCredential: undefined,\n    Id: undefined,\n    IsArchived: undefined,\n    LastModifiedBy: undefined,\n    LastModifiedDate: undefined,\n    Platform: undefined,\n    Version: undefined\n  };\n\n  if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n    contents.ApplicationId = output.ApplicationId;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.Enabled !== undefined && output.Enabled !== null) {\n    contents.Enabled = output.Enabled;\n  }\n\n  if (output.HasCredential !== undefined && output.HasCredential !== null) {\n    contents.HasCredential = output.HasCredential;\n  }\n\n  if (output.Id !== undefined && output.Id !== null) {\n    contents.Id = output.Id;\n  }\n\n  if (output.IsArchived !== undefined && output.IsArchived !== null) {\n    contents.IsArchived = output.IsArchived;\n  }\n\n  if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n    contents.LastModifiedBy = output.LastModifiedBy;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.Platform !== undefined && output.Platform !== null) {\n    contents.Platform = output.Platform;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1VoiceTemplateResponse = function (output, context) {\n  var contents = {\n    __type: \"VoiceTemplateResponse\",\n    Arn: undefined,\n    Body: undefined,\n    CreationDate: undefined,\n    DefaultSubstitutions: undefined,\n    LanguageCode: undefined,\n    LastModifiedDate: undefined,\n    TemplateDescription: undefined,\n    TemplateName: undefined,\n    TemplateType: undefined,\n    Version: undefined,\n    VoiceId: undefined,\n    tags: undefined\n  };\n\n  if (output.Arn !== undefined && output.Arn !== null) {\n    contents.Arn = output.Arn;\n  }\n\n  if (output.Body !== undefined && output.Body !== null) {\n    contents.Body = output.Body;\n  }\n\n  if (output.CreationDate !== undefined && output.CreationDate !== null) {\n    contents.CreationDate = output.CreationDate;\n  }\n\n  if (output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null) {\n    contents.DefaultSubstitutions = output.DefaultSubstitutions;\n  }\n\n  if (output.LanguageCode !== undefined && output.LanguageCode !== null) {\n    contents.LanguageCode = output.LanguageCode;\n  }\n\n  if (output.LastModifiedDate !== undefined && output.LastModifiedDate !== null) {\n    contents.LastModifiedDate = output.LastModifiedDate;\n  }\n\n  if (output.TemplateDescription !== undefined && output.TemplateDescription !== null) {\n    contents.TemplateDescription = output.TemplateDescription;\n  }\n\n  if (output.TemplateName !== undefined && output.TemplateName !== null) {\n    contents.TemplateName = output.TemplateName;\n  }\n\n  if (output.TemplateType !== undefined && output.TemplateType !== null) {\n    contents.TemplateType = output.TemplateType;\n  }\n\n  if (output.Version !== undefined && output.Version !== null) {\n    contents.Version = output.Version;\n  }\n\n  if (output.VoiceId !== undefined && output.VoiceId !== null) {\n    contents.VoiceId = output.VoiceId;\n  }\n\n  if (output.tags !== undefined && output.tags !== null) {\n    contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1WaitActivity = function (output, context) {\n  var contents = {\n    __type: \"WaitActivity\",\n    NextActivity: undefined,\n    WaitTime: undefined\n  };\n\n  if (output.NextActivity !== undefined && output.NextActivity !== null) {\n    contents.NextActivity = output.NextActivity;\n  }\n\n  if (output.WaitTime !== undefined && output.WaitTime !== null) {\n    contents.WaitTime = deserializeAws_restJson1_1WaitTime(output.WaitTime, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restJson1_1WaitTime = function (output, context) {\n  var contents = {\n    __type: \"WaitTime\",\n    WaitFor: undefined,\n    WaitUntil: undefined\n  };\n\n  if (output.WaitFor !== undefined && output.WaitFor !== null) {\n    contents.WaitFor = output.WaitFor;\n  }\n\n  if (output.WaitUntil !== undefined && output.WaitUntil !== null) {\n    contents.WaitUntil = output.WaitUntil;\n  }\n\n  return contents;\n};\n\nvar deserializeMetadata = function (output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["../../../protocols/Aws_restJson1_1.ts"],"names":[],"mappings":";AAylBA,SACE,WAAW,IAAI,aADjB,QAGO,wBAHP;AAIA,SAEE,0BAA0B,IAAI,4BAFhC,QAGO,wBAHP;AAWA,OAAM,SAAgB,wCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,UAAf;;AAEJ,UAAI,KAAK,CAAC,wBAAN,KAAmC,SAAvC,EAAkD;AAChD,QAAA,IAAI,GAAG,gDAAgD,CACrD,KAAK,CAAC,wBAD+C,EAErD,OAFqD,CAAvD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,IAAI,GAAG,wCAAwC,CAC7C,KAAK,CAAC,gBADuC,EAE7C,OAF6C,CAA/C;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,IAAI,GAAG,wCAAwC,CAC7C,KAAK,CAAC,gBADuC,EAE7C,OAF6C,CAA/C;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,+BAAN,KAA0C,SAA9C,EAAyD;AACvD,QAAA,IAAI,GAAG,uDAAuD,CAC5D,KAAK,CAAC,+BADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,kCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,QAAA,IAAI,GAAG,0CAA0C,CAC/C,KAAK,CAAC,kBADyC,EAE/C,OAF+C,CAAjD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,wCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,uDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,gDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,oDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,6CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,2DAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,qDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,wCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,0BAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,iDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,iDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,+CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,+CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,kCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AACxB,QAAA,UAAU,GAAW,KAAK,CAAC,MAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,UADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,wCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,oDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,gDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,6CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,wDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,qDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,qCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,0BAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,yDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AACzB,QAAA,UAAU,GAAW,KAAK,CAAC,OAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,WADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,UAAD,CAAL,GAAoB,CAClB,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,IAA4C,GAD1B,EAElB,QAFkB,EAApB;AAGD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,CACpB,KAAK,CAAC,SAAN,CAAgB,WAAhB,GAA8B,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,IAA8C,GAD1B,EAEpB,QAFoB,EAAtB;AAGD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,qDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,sCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,UAAf;AACE,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,0CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,iDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,oDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,4DADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,sDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,0EADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AACzB,QAAA,UAAU,GAAW,KAAK,CAAC,OAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,WADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,UAAD,CAAL,GAAoB,CAClB,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,IAA4C,GAD1B,EAElB,QAFkB,EAApB;AAGD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,CACpB,KAAK,CAAC,SAAN,CAAgB,WAAhB,GAA8B,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,IAA8C,GAD1B,EAEpB,QAFoB,EAAtB;AAGD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,oEADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AACzB,QAAA,UAAU,GAAW,KAAK,CAAC,OAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,WADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,0DAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,0CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,0CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,iDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,8CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AACvB,QAAA,UAAU,GAAW,KAAK,CAAC,KAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,SADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,8CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AACvB,QAAA,UAAU,GAAW,KAAK,CAAC,KAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,SADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,yCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,+CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,qDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,wEADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AACzB,QAAA,UAAU,GAAW,KAAK,CAAC,OAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,WADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,UAAD,CAAL,GAAoB,CAClB,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,IAA4C,GAD1B,EAElB,QAFkB,EAApB;AAGD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,CACpB,KAAK,CAAC,SAAN,CAAgB,WAAhB,GAA8B,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,IAA8C,GAD1B,EAEpB,QAFoB,EAAtB;AAGD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,iEAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,gGADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACnC,QAAA,UAAU,GAAW,KAAK,CAAC,iBAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,+DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,qBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CACJ,4DADI,CAAN;AAGD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,yDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,iEADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,yCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,+CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,mDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,2DADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,mDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,2DADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GACd,kEADE;;AAEJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AACzB,QAAA,UAAU,GAAW,KAAK,CAAC,OAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,WADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,wDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,0CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,kCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AACxB,QAAA,UAAU,GAAW,KAAK,CAAC,MAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,UADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAK,CAAC,KAAvB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,wBAAf;;AACJ,UAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AAC7B,QAAA,UAAU,GAAW,KAAK,CAAC,WAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,yDADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,eADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,mDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,sDAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,eAAf;AACE,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAK,CAAC,SAA5B;AACD;;AACD,UAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAK,CAAC,QAA3B;AACD;;AACD,UAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,QAAA,KAAK,CAAC,QAAD,CAAL,GAAkB,KAAK,CAAC,MAAxB;AACD;;AACD,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,QAAA,KAAK,CAAC,eAAD,CAAL,GAAyB,KAAK,CAAC,YAA/B;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,2BAAf;;AAEJ,UAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,QAAA,IAAI,GAAG,6CAA6C,CAClD,KAAK,CAAC,qBAD4C,EAElD,OAFkD,CAApD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,sCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,IAAI,GAAG,wCAAwC,CAC7C,KAAK,CAAC,gBADuC,EAE7C,OAF6C,CAA/C;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,wCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,iCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,QAAA,IAAI,GAAG,qCAAqC,CAAC,KAAK,CAAC,aAAP,EAAsB,OAAtB,CAA5C;AACD;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,qDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,uBAAN,KAAkC,SAAtC,EAAiD;AAC/C,QAAA,IAAI,GAAG,+CAA+C,CACpD,KAAK,CAAC,uBAD8C,EAEpD,OAFoD,CAAtD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,QAAA,IAAI,GAAG,sCAAsC,CAC3C,KAAK,CAAC,cADqC,EAE3C,OAF2C,CAA7C;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,uBAAN,KAAkC,SAAtC,EAAiD;AAC/C,QAAA,IAAI,GAAG,+CAA+C,CACpD,KAAK,CAAC,uBAD8C,EAEpD,OAFoD,CAAtD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,0CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,wBAAf;;AACJ,UAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AAC7B,QAAA,UAAU,GAAW,KAAK,CAAC,WAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,yDADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,eADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,QAAA,IAAI,GAAG,iCAAiC,CAAC,KAAK,CAAC,SAAP,EAAkB,OAAlB,CAAxC;AACD;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,MAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,EAA1B;AACI,MAAA,YAAY,GAAG,wBAAf;;AACJ,UAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AAC7B,QAAA,UAAU,GAAW,KAAK,CAAC,WAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,yDADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,eADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,CAAC,KAAK,CAAC,OAAN,IAAiB,EAAlB,EAAsB,GAAtB,CAA0B,UAAA,MAAA,EAAM;AAAI,iBAAA,MAAA;AAAM,SAA1C,CAAnB;AACD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,QAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,QAAA,IAAI,GAAG,yCAAyC,CAC9C,KAAK,CAAC,iBADwC,EAE9C,OAF8C,CAAhD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,wCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,QAAA,IAAI,GAAG,0CAA0C,CAC/C,KAAK,CAAC,kBADyC,EAE/C,OAF+C,CAAjD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,uDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,gDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,yBAAN,KAAoC,SAAxC,EAAmD;AACjD,QAAA,IAAI,GAAG,iDAAiD,CACtD,KAAK,CAAC,yBADgD,EAEtD,OAFsD,CAAxD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,oDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,6CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,sBAAN,KAAiC,SAArC,EAAgD;AAC9C,QAAA,IAAI,GAAG,8CAA8C,CACnD,KAAK,CAAC,sBAD6C,EAEnD,OAFmD,CAArD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,2DAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,qDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,6BAAN,KAAwC,SAA5C,EAAuD;AACrD,QAAA,IAAI,GAAG,qDAAqD,CAC1D,KAAK,CAAC,6BADoD,EAE1D,OAF0D,CAA5D;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,wDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,+BAAN,KAA0C,SAA9C,EAAyD;AACvD,QAAA,IAAI,GAAG,uDAAuD,CAC5D,KAAK,CAAC,+BADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,iDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,KAAK,CAAC,oBAAD,CAAL,GAA8B,KAAK,CAAC,gBAAN,CAAuB,QAAvB,EAA9B;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,6CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,iDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAC5B,QAAA,UAAU,GAAW,KAAK,CAAC,UAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,cADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,QAAA,IAAI,GAAG,uCAAuC,CAC5C,KAAK,CAAC,eADsC,EAE5C,OAF4C,CAA9C;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,mDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,QAAA,IAAI,GAAG,yCAAyC,CAC9C,KAAK,CAAC,iBADwC,EAE9C,OAF8C,CAAhD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,+CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,qDAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,mCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,KAAK,CAAC,oBAAD,CAAL,GAA8B,KAAK,CAAC,gBAAN,CAAuB,QAAvB,EAA9B;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,UAAI,KAAK,CAAC,+BAAN,KAA0C,SAA9C,EAAyD;AACvD,QAAA,IAAI,GAAG,uDAAuD,CAC5D,KAAK,CAAC,+BADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,+CAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AAC3B,QAAA,UAAU,GAAW,KAAK,CAAC,SAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,aADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OATD,MASO;AACL,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,uCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,QAAA,IAAI,GAAG,yCAAyC,CAC9C,KAAK,CAAC,iBADwC,EAE9C,OAF8C,CAAhD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,kCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,KAAK,CAAC,oBAAD,CAAL,GAA8B,KAAK,CAAC,gBAAN,CAAuB,QAAvB,EAA9B;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,UAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,QAAA,IAAI,GAAG,0CAA0C,CAC/C,KAAK,CAAC,kBADyC,EAE/C,OAF+C,CAAjD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,0DAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GACd,4DADE;;AAEJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,4BAAN,KAAuC,SAA3C,EAAsD;AACpD,QAAA,IAAI,GAAG,oDAAoD,CACzD,KAAK,CAAC,4BADmD,EAEzD,OAFyD,CAA3D;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,yCAAf;;AACJ,UAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AAC/B,QAAA,UAAU,GAAW,KAAK,CAAC,aAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,iBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,UAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,QAAA,IAAI,GAAG,2CAA2C,CAChD,KAAK,CAAC,mBAD0C,EAEhD,OAFgD,CAAlD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,IAAI,EAAE;AALa,OADG,CAAjB,CAAP,CAAA;;;AAQD;AAED,OAAM,SAAgB,kDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAQ,EAAf;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACI,MAAA,YAAY,GAAG,oCAAf;;AACJ,UAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AAC9B,QAAA,UAAU,GAAW,KAAK,CAAC,YAA3B;;AACN,YAAI,UAAU,CAAC,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,gBAAM,IAAI,KAAJ,CACJ,0DADI,CAAN;AAGD;;AACD,QAAA,YAAY,GAAG,YAAY,CAAC,OAAb,CACb,gBADa,EAEb,4BAA4B,CAAC,UAAD,CAFf,CAAf;AAID,OAXD,MAWO;AACL,cAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACK,MAAA,KAAK,GAAQ,EAAb;;AACN,UAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,QAAA,KAAK,CAAC,oBAAD,CAAL,GAA8B,KAAK,CAAC,gBAAN,CAAuB,QAAvB,EAA9B;AACD;;AACD,UAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,QAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,KAAK,CAAC,OAAzB;AACD;;AAED,UAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,QAAA,IAAI,GAAG,4CAA4C,CACjD,KAAK,CAAC,oBAD2C,EAEjD,OAFiD,CAAnD;AAID;;AACD,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,aAAJ,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,OAAO,CAAC,QADW,CAAA,EACH;AACnB,QAAA,QAAQ,EAAE,OADS;AAEnB,QAAA,MAAM,EAAE,KAFW;AAGnB,QAAA,OAAO,EAAE,OAHU;AAInB,QAAA,IAAI,EAAE,YAJa;AAKnB,QAAA,KAAK,EAAE,KALY;AAMnB,QAAA,IAAI,EAAE;AANa,OADG,CAAjB,CAAP,CAAA;;;AASD;AAED,OAAM,SAAgB,0CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,+CAA+C,CAAC,MAAD,EAAS,OAAT,CAAtD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA2B;AACvC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADS;AAEvC,YAAA,MAAM,EAAE,mBAF+B;AAGvC,YAAA,mBAAmB,EAAE;AAHkB,WAAnC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,gBAAgB,EAAE;AAH0B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,yBAAyB,EAAE;AAHsB,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,yBAAT,GAAqC,mDAAmD,CACtF,IADsF,EAEtF,OAFsF,CAAxF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADe;AAE7C,YAAA,MAAM,EAAE,yBAFqC;AAG7C,YAAA,iBAAiB,EAAE;AAH0B,WAAzC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADe;AAE7C,YAAA,MAAM,EAAE,yBAFqC;AAG7C,YAAA,iBAAiB,EAAE;AAH0B,WAAzC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,eAAe,EAAE;AAH0B,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,yBAAyB,EAAE;AAHqB,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,yBAAT,GAAqC,mDAAmD,CACtF,IADsF,EAEtF,OAFsF,CAAxF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,eAAe,EAAE;AAH0B,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,yBAAyB,EAAE;AAHoB,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,yBAAT,GAAqC,mDAAmD,CACtF,IADsF,EAEtF,OAFsF,CAAxF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,yBAAyB,EAAE;AAHsB,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,yBAAT,GAAqC,mDAAmD,CACtF,IADsF,EAEtF,OAFsF,CAAxF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,mBAAmB,EAAE;AAH0B,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,yDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,8DAA8D,CACnE,MADmE,EAEnE,OAFmE,CAArE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA0C;AACtD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADwB;AAEtD,YAAA,MAAM,EAAE,kCAF8C;AAGtD,YAAA,0BAA0B,EAAE;AAH0B,WAAlD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,0BAAT,GAAsC,oDAAoD,CACxF,IADwF,EAExF,OAFwF,CAA1F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,8DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,sDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,2DAA2D,CAChE,MADgE,EAEhE,OAFgE,CAAlE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAuC;AACnD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADqB;AAEnD,YAAA,MAAM,EAAE,+BAF2C;AAGnD,YAAA,uBAAuB,EAAE;AAH0B,WAA/C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,uBAAT,GAAmC,iDAAiD,CAClF,IADkF,EAElF,OAFkF,CAApF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,2DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kEAAkE,CACvE,MADuE,EAEvE,OAFuE,CAAzE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA8C;AAC1D,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CAD4B;AAE1D,YAAA,MAAM,EAAE,sCAFkD;AAG1D,YAAA,8BAA8B,EAAE;AAH0B,WAAtD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,8BAAT,GAA0C,wDAAwD,CAChG,IADgG,EAEhG,OAFgG,CAAlG;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kEAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,0CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,+CAA+C,CAAC,MAAD,EAAS,OAAT,CAAtD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA2B;AACvC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADS;AAEvC,YAAA,MAAM,EAAE,mBAF+B;AAGvC,YAAA,mBAAmB,EAAE;AAHkB,WAAnC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,oBAAoB,EAAE;AAH0B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,gBAAgB,EAAE;AAH0B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,oBAAoB,EAAE;AAH0B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,WAAW,EAAE;AAHoC,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,gBAAgB,EAAE;AAH0B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,WAAW,EAAE;AAHkC,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,eAAe,EAAE;AAH0B,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,WAAW,EAAE;AAHmC,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,eAAe,EAAE;AAH0B,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,WAAW,EAAE;AAHkC,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,iBAAiB,EAAE;AAH8B,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,oBAAoB,EAAE;AAH0B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,WAAW,EAAE;AAHoC,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,kBAAkB,EAAE;AAHuB,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,mBAAmB,EAAE;AAHuB,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,sDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,2DAA2D,CAChE,MADgE,EAEhE,OAFgE,CAAlE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAuC;AACnD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADqB;AAEnD,YAAA,MAAM,EAAE,+BAF2C;AAGnD,YAAA,0BAA0B,EAAE;AAHuB,WAA/C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,0BAAT,GAAsC,oDAAoD,CACxF,IADwF,EAExF,OAFwF,CAA1F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,2DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,uBAAuB,EAAE;AAHuB,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,uBAAT,GAAmC,iDAAiD,CAClF,IADkF,EAElF,OAFkF,CAApF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,0DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,+DAA+D,CACpE,MADoE,EAEpE,OAFoE,CAAtE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA2C;AACvD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADyB;AAEvD,YAAA,MAAM,EAAE,mCAF+C;AAGvD,YAAA,8BAA8B,EAAE;AAHuB,WAAnD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,8BAAT,GAA0C,wDAAwD,CAChG,IADgG,EAEhG,OAFgG,CAAlG;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,4CAA4C,CAAC,MAAD,EAAS,OAAT,CAAnD,CAAA;AACD;;AACK,UAAA,QAAQ,GAAwB;AACpC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADM;AAEpC,YAAA,MAAM,EAAE,gBAF4B;AAGpC,YAAA,mBAAmB,EAAE;AAHe,WAAhC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,2DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,gEAAgE,CACrE,MADqE,EAErE,OAFqE,CAAvE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA4C;AACxD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CAD0B;AAExD,YAAA,MAAM,EAAE,oCAFgD;AAGxD,YAAA,+BAA+B,EAAE;AAHuB,WAApD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,+BAAT,GAA2C,yDAAyD,CAClG,IADkG,EAElG,OAFkG,CAApG;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,gEAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,4DAA4D,CACjE,MADiE,EAEjE,OAFiE,CAAnE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAwC;AACpD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADsB;AAEpD,YAAA,MAAM,EAAE,gCAF4C;AAGpD,YAAA,2BAA2B,EAAE;AAHuB,WAAhD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,2BAAT,GAAuC,qDAAqD,CAC1F,IAD0F,EAE1F,OAF0F,CAA5F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,wCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,6CAA6C,CAAC,MAAD,EAAS,OAAT,CAApD,CAAA;AACD;;AACK,UAAA,QAAQ,GAAyB;AACrC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADO;AAErC,YAAA,MAAM,EAAE,iBAF6B;AAGrC,YAAA,oBAAoB,EAAE;AAHe,WAAjC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,6CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADe;AAE7C,YAAA,MAAM,EAAE,yBAFqC;AAG7C,YAAA,oBAAoB,EAAE;AAHuB,WAAzC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,4CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,iDAAiD,CAAC,MAAD,EAAS,OAAT,CAAxD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA6B;AACzC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADW;AAEzC,YAAA,MAAM,EAAE,qBAFiC;AAGzC,YAAA,gBAAgB,EAAE;AAHuB,WAArC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,sDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,2DAA2D,CAChE,MADgE,EAEhE,OAFgE,CAAlE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAuC;AACnD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADqB;AAEnD,YAAA,MAAM,EAAE,+BAF2C;AAGnD,YAAA,kBAAkB,EAAE;AAH+B,WAA/C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,2DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,wDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,6DAA6D,CAClE,MADkE,EAElE,OAFkE,CAApE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAyC;AACrD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADuB;AAErD,YAAA,MAAM,EAAE,iCAF6C;AAGrD,YAAA,4BAA4B,EAAE;AAHuB,WAAjD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,4BAAT,GAAwC,sDAAsD,CAC5F,IAD4F,EAE5F,OAF4F,CAA9F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,6DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,gBAAgB,EAAE;AAH8B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,iBAAiB,EAAE;AAH8B,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADY;AAE1C,YAAA,MAAM,EAAE,sBAFkC;AAG1C,YAAA,iBAAiB,EAAE;AAHuB,WAAtC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,4CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,iDAAiD,CAAC,MAAD,EAAS,OAAT,CAAxD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA6B;AACzC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADW;AAEzC,YAAA,MAAM,EAAE,qBAFiC;AAGzC,YAAA,gBAAgB,EAAE;AAHuB,WAArC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADe;AAE7C,YAAA,MAAM,EAAE,yBAFqC;AAG7C,YAAA,oBAAoB,EAAE;AAHuB,WAAzC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,qBAAqB,EAAE;AAHuB,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,qBAAT,GAAiC,+CAA+C,CAC9E,IAD8E,EAE9E,OAF8E,CAAhF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,4CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,iDAAiD,CAAC,MAAD,EAAS,OAAT,CAAxD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA6B;AACzC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADW;AAEzC,YAAA,MAAM,EAAE,qBAFiC;AAGzC,YAAA,gBAAgB,EAAE;AAHuB,WAArC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,WAAW,EAAE;AAH+B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADY;AAE1C,YAAA,MAAM,EAAE,sBAFkC;AAG1C,YAAA,iBAAiB,EAAE;AAHuB,WAAtC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,kBAAkB,EAAE;AAHuB,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,kBAAkB,EAAE;AAHuB,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADY;AAE1C,YAAA,MAAM,EAAE,sBAFkC;AAG1C,YAAA,iBAAiB,EAAE;AAHuB,WAAtC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,kBAAkB,EAAE;AAHuB,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,2CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,gDAAgD,CAAC,MAAD,EAAS,OAAT,CAAvD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA4B;AACxC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADU;AAExC,YAAA,MAAM,EAAE,oBAFgC;AAGxC,YAAA,eAAe,EAAE;AAHuB,WAApC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,gDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,4DAA4D,CACjE,MADiE,EAEjE,OAFiE,CAAnE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAwC;AACpD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADsB;AAEpD,YAAA,MAAM,EAAE,gCAF4C;AAGpD,YAAA,2BAA2B,EAAE;AAHuB,WAAhD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,2BAAT,GAAuC,qDAAqD,CAC1F,IAD0F,EAE1F,OAF0F,CAA5F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mEAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wEAAwE,CAC7E,MAD6E,EAE7E,OAF6E,CAA/E,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoD;AAChE,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkC;AAEhE,YAAA,MAAM,EAAE,4CAFwD;AAGhE,YAAA,uCAAuC,EAAE;AAHuB,WAA5D;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,uCAAT,GAAmD,iEAAiE,CAClH,IADkH,EAElH,OAFkH,CAApH;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wEAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,2DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,gEAAgE,CACrE,MADqE,EAErE,OAFqE,CAAvE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA4C;AACxD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CAD0B;AAExD,YAAA,MAAM,EAAE,oCAFgD;AAGxD,YAAA,+BAA+B,EAAE;AAHuB,WAApD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,+BAAT,GAA2C,yDAAyD,CAClG,IADkG,EAElG,OAFkG,CAApG;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,gEAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADe;AAE7C,YAAA,MAAM,EAAE,yBAFqC;AAG7C,YAAA,gCAAgC,EAAE;AAHW,WAAzC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gCAAT,GAA4C,0DAA0D,CACpG,IADoG,EAEpG,OAFoG,CAAtG;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,2CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,gDAAgD,CAAC,MAAD,EAAS,OAAT,CAAvD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA4B;AACxC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADU;AAExC,YAAA,MAAM,EAAE,oBAFgC;AAGxC,YAAA,eAAe,EAAE;AAHuB,WAApC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,gDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,qDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,0DAA0D,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAsC;AAClD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADoB;AAElD,YAAA,MAAM,EAAE,8BAF0C;AAGlD,YAAA,kBAAkB,EAAE;AAH8B,WAA9C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,0DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,qDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,0DAA0D,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAsC;AAClD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADoB;AAElD,YAAA,MAAM,EAAE,8BAF0C;AAGlD,YAAA,kBAAkB,EAAE;AAH8B,WAA9C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,0DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,eAAe,EAAE;AAH8B,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,gBAAgB,EAAE;AAH8B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,4CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,iDAAiD,CAAC,MAAD,EAAS,OAAT,CAAxD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA6B;AACzC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADW;AAEzC,YAAA,MAAM,EAAE,qBAFiC;AAGzC,YAAA,gBAAgB,EAAE;AAHuB,WAArC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,kBAAkB,EAAE;AAHuB,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,mBAAmB,EAAE;AAHuB,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,iBAAiB,EAAE;AAH2B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADe;AAE7C,YAAA,MAAM,EAAE,yBAFqC;AAG7C,YAAA,oBAAoB,EAAE;AAHuB,WAAzC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,qBAAqB,EAAE;AAHuB,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,qBAAT,GAAiC,+CAA+C,CAC9E,IAD8E,EAE9E,OAF8E,CAAhF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADY;AAE1C,YAAA,MAAM,EAAE,sBAFkC;AAG1C,YAAA,gBAAgB,EAAE;AAHwB,WAAtC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,SAAS,EAAE;AAHsC,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,SAAT,GAAqB,mCAAmC,CAAC,IAAD,EAAO,OAAP,CAAxD;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;;AACA,kBAAQ,SAAR;AACE;AACQ,cAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,cAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,cAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,gBAAA,IAAI,EAAE,KAAG,SADI;AAEb,gBAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,gBAAA,MAAM,EAAE,QAHK;AAIb,gBAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,eADJ,CAAX;AAJJ;;AAYM,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,qDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,0DAA0D,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAsC;AAClD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADoB;AAElD,YAAA,MAAM,EAAE,8BAF0C;AAGlD,YAAA,wBAAwB,EAAE;AAHwB,WAA9C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,wBAAT,GAAoC,kDAAkD,CACpF,IADoF,EAEpF,OAFoF,CAAtF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,0DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,iBAAiB,EAAE;AAHwB,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,IADsE,EAEtE,OAFsE,CAAxE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,sBAAsB,EAAE;AAHyB,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,sBAAT,GAAkC,gDAAgD,CAChF,IADgF,EAEhF,OAFgF,CAAlF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,WAAW,EAAE;AAH+B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,0CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,+CAA+C,CAAC,MAAD,EAAS,OAAT,CAAtD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA2B;AACvC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADS;AAEvC,YAAA,MAAM,EAAE,mBAF+B;AAGvC,YAAA,cAAc,EAAE;AAHuB,WAAnC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,cAAT,GAA0B,wCAAwC,CAChE,IADgE,EAEhE,OAFgE,CAAlE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADY;AAE1C,YAAA,MAAM,EAAE,sBAFkC;AAG1C,YAAA,eAAe,EAAE;AAHyB,WAAtC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,wBAAwB,EAAE;AAHqB,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,wBAAT,GAAoC,kDAAkD,CACpF,IADoF,EAEpF,OAFoF,CAAtF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,4CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,iDAAiD,CAAC,MAAD,EAAS,OAAT,CAAxD,CAAA;AACD;;AACK,UAAA,QAAQ,GAA6B;AACzC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADW,WAArC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;;AACA,kBAAQ,SAAR;AACE;AACQ,cAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,cAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,cAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,gBAAA,IAAI,EAAE,KAAG,SADI;AAEb,gBAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,gBAAA,MAAM,EAAE,QAHK;AAIb,gBAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,eADJ,CAAX;AAJJ;;AAYM,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADa,WAAvC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;;AACA,kBAAQ,SAAR;AACE;AACQ,cAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,cAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,cAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,gBAAA,IAAI,EAAE,KAAG,SADI;AAEb,gBAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,gBAAA,MAAM,EAAE,QAHK;AAIb,gBAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,eADJ,CAAX;AAJJ;;AAYM,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,mBAAmB,EAAE;AAH0B,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,mBAAT,GAA+B,6CAA6C,CAC1E,IAD0E,EAE1E,OAF0E,CAA5E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,yDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,8DAA8D,CACnE,MADmE,EAEnE,OAFmE,CAArE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA0C;AACtD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADwB;AAEtD,YAAA,MAAM,EAAE,kCAF8C;AAGtD,YAAA,0BAA0B,EAAE;AAH0B,WAAlD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,0BAAT,GAAsC,oDAAoD,CACxF,IADwF,EAExF,OAFwF,CAA1F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,8DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,sDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,2DAA2D,CAChE,MADgE,EAEhE,OAFgE,CAAlE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAuC;AACnD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADqB;AAEnD,YAAA,MAAM,EAAE,+BAF2C;AAGnD,YAAA,uBAAuB,EAAE;AAH0B,WAA/C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,uBAAT,GAAmC,iDAAiD,CAClF,IADkF,EAElF,OAFkF,CAApF;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,2DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,kEAAkE,CACvE,MADuE,EAEvE,OAFuE,CAAzE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA8C;AAC1D,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CAD4B;AAE1D,YAAA,MAAM,EAAE,sCAFkD;AAG1D,YAAA,8BAA8B,EAAE;AAH0B,WAAtD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,8BAAT,GAA0C,wDAAwD,CAChG,IADgG,EAEhG,OAFgG,CAAlG;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kEAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,0DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,+DAA+D,CACpE,MADoE,EAEpE,OAFoE,CAAtE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA2C;AACvD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADyB;AAEvD,YAAA,MAAM,EAAE,mCAF+C;AAGvD,YAAA,2BAA2B,EAAE;AAH0B,WAAnD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,2BAAT,GAAuC,qDAAqD,CAC1F,IAD0F,EAE1F,OAF0F,CAA5F;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,oBAAoB,EAAE;AAH0B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,gBAAgB,EAAE;AAH0B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,IADoE,EAEpE,OAFoE,CAAtE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,oBAAoB,EAAE;AAH0B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,WAAW,EAAE;AAHoC,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,+CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,oDAAoD,CACzD,MADyD,EAEzD,OAFyD,CAA3D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAgC;AAC5C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADc;AAE5C,YAAA,MAAM,EAAE,wBAFoC;AAG5C,YAAA,WAAW,EAAE;AAH+B,WAAxC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,oDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,qDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,0DAA0D,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAsC;AAClD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADoB;AAElD,YAAA,MAAM,EAAE,8BAF0C;AAGlD,YAAA,WAAW,EAAE;AAHqC,WAA9C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,0DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,eAAe,EAAE;AAH0B,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,eAAe,EAAE;AAH+B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,WAAW,EAAE;AAHmC,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACK,UAAA,QAAQ,GAA+B;AAC3C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADa;AAE3C,YAAA,MAAM,EAAE,uBAFmC;AAG3C,YAAA,eAAe,EAAE;AAH0B,WAAvC;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,eAAT,GAA2B,yCAAyC,CAClE,IADkE,EAElE,OAFkE,CAApE;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAkC;AAC9C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADgB;AAE9C,YAAA,MAAM,EAAE,0BAFsC;AAG9C,YAAA,kBAAkB,EAAE;AAH0B,WAA1C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,IADwE,EAExE,OAFwE,CAA1E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAmC;AAC/C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADiB;AAE/C,YAAA,MAAM,EAAE,2BAFuC;AAG/C,YAAA,WAAW,EAAE;AAHkC,WAA3C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,4DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,iEAAiE,CACtE,MADsE,EAEtE,OAFsE,CAAxE,CAAA;AAID;;AACK,UAAA,QAAQ,GAA6C;AACzD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CAD2B;AAEzD,YAAA,MAAM,EAAE,qCAFiD;AAGzD,YAAA,WAAW,EAAE;AAH4C,WAArD;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iEAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACK,UAAA,QAAQ,GAAoC;AAChD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADkB;AAEhD,YAAA,MAAM,EAAE,4BAFwC;AAGhD,YAAA,oBAAoB,EAAE;AAH0B,WAA5C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,IAD4E,EAE5E,OAF4E,CAA9E;AAIA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,oDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,KAAsB,GAAtB,IAA6B,MAAM,CAAC,UAAP,IAAqB,GAAtD,EAA2D;AACzD,mBAAA,CAAA;AAAA;AAAA,cAAO,yDAAyD,CAC9D,MAD8D,EAE9D,OAF8D,CAAhE,CAAA;AAID;;AACK,UAAA,QAAQ,GAAqC;AACjD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADmB;AAEjD,YAAA,MAAM,EAAE,6BAFyC;AAGjD,YAAA,WAAW,EAAE;AAHoC,WAA7C;AAKY,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACN,UAAA,QAAQ,CAAC,WAAT,GAAuB,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAA5D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,yDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACJ,UAAA,SAAS,GAAG,qBAAqB,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,CAAjC;AACQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,qB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,4C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,oB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,8B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,qD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,mB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0C;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,iD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AArDG,iBAAA,CAAA;AAAA;AAAA,YAAM,qDAAqD,CAC7D,YAD6D,EAE7D,OAF6D,CAA3D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8DAA8D,CACtE,YADsE,EAEtE,OAFsE,CAApE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,2DAA2D,CACnE,YADmE,EAEnE,OAFmE,CAAjE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,mDAAmD,CAC3D,YAD2D,EAE3D,OAF2D,CAAzD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,0DAA0D,CAClE,YADkE,EAElE,OAFkE,CAAhE,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,IAAM,qDAAqD,GAAG,UAC5D,YAD4D,EAE5D,OAF4D,EAErC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,QAAQ,GAAwB;AACpC,QAAA,IAAI,EAAE,qBAD8B;AAEpC,QAAA,MAAM,EAAE,QAF4B;AAGpC,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD,CAHM;AAIpC,QAAA,OAAO,EAAE,SAJ2B;AAKpC,QAAA,SAAS,EAAE;AALyB,OAAhC;AAOA,MAAA,IAAI,GAAQ,YAAY,CAAC,IAAzB;;AACN,UAAI,IAAI,CAAC,OAAL,KAAiB,SAAjB,IAA8B,IAAI,CAAC,OAAL,KAAiB,IAAnD,EAAyD;AACvD,QAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,KAAmB,SAAnB,IAAgC,IAAI,CAAC,SAAL,KAAmB,IAAvD,EAA6D;AAC3D,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,CAAC,SAA1B;AACD;;AACD,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAhBuB,CAAA;AAiBxB,CAnBD;;AAqBA,IAAM,oDAAoD,GAAG,UAC3D,YAD2D,EAE3D,OAF2D,EAEpC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,QAAQ,GAAuB;AACnC,QAAA,IAAI,EAAE,oBAD6B;AAEnC,QAAA,MAAM,EAAE,QAF2B;AAGnC,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD,CAHK;AAInC,QAAA,OAAO,EAAE,SAJ0B;AAKnC,QAAA,SAAS,EAAE;AALwB,OAA/B;AAOA,MAAA,IAAI,GAAQ,YAAY,CAAC,IAAzB;;AACN,UAAI,IAAI,CAAC,OAAL,KAAiB,SAAjB,IAA8B,IAAI,CAAC,OAAL,KAAiB,IAAnD,EAAyD;AACvD,QAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,KAAmB,SAAnB,IAAgC,IAAI,CAAC,SAAL,KAAmB,IAAvD,EAA6D;AAC3D,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,CAAC,SAA1B;AACD;;AACD,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAhBuB,CAAA;AAiBxB,CAnBD;;AAqBA,IAAM,8DAA8D,GAAG,UACrE,YADqE,EAErE,OAFqE,EAE9C;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,QAAQ,GAAiC;AAC7C,QAAA,IAAI,EAAE,8BADuC;AAE7C,QAAA,MAAM,EAAE,QAFqC;AAG7C,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD,CAHe;AAI7C,QAAA,OAAO,EAAE,SAJoC;AAK7C,QAAA,SAAS,EAAE;AALkC,OAAzC;AAOA,MAAA,IAAI,GAAQ,YAAY,CAAC,IAAzB;;AACN,UAAI,IAAI,CAAC,OAAL,KAAiB,SAAjB,IAA8B,IAAI,CAAC,OAAL,KAAiB,IAAnD,EAAyD;AACvD,QAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,KAAmB,SAAnB,IAAgC,IAAI,CAAC,SAAL,KAAmB,IAAvD,EAA6D;AAC3D,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,CAAC,SAA1B;AACD;;AACD,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAhBuB,CAAA;AAiBxB,CAnBD;;AAqBA,IAAM,2DAA2D,GAAG,UAClE,YADkE,EAElE,OAFkE,EAE3C;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,QAAQ,GAA8B;AAC1C,QAAA,IAAI,EAAE,2BADoC;AAE1C,QAAA,MAAM,EAAE,QAFkC;AAG1C,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD,CAHY;AAI1C,QAAA,OAAO,EAAE,SAJiC;AAK1C,QAAA,SAAS,EAAE;AAL+B,OAAtC;AAOA,MAAA,IAAI,GAAQ,YAAY,CAAC,IAAzB;;AACN,UAAI,IAAI,CAAC,OAAL,KAAiB,SAAjB,IAA8B,IAAI,CAAC,OAAL,KAAiB,IAAnD,EAAyD;AACvD,QAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,KAAmB,SAAnB,IAAgC,IAAI,CAAC,SAAL,KAAmB,IAAvD,EAA6D;AAC3D,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,CAAC,SAA1B;AACD;;AACD,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAhBuB,CAAA;AAiBxB,CAnBD;;AAqBA,IAAM,mDAAmD,GAAG,UAC1D,YAD0D,EAE1D,OAF0D,EAEnC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,QAAQ,GAAsB;AAClC,QAAA,IAAI,EAAE,mBAD4B;AAElC,QAAA,MAAM,EAAE,QAF0B;AAGlC,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD,CAHI;AAIlC,QAAA,OAAO,EAAE,SAJyB;AAKlC,QAAA,SAAS,EAAE;AALuB,OAA9B;AAOA,MAAA,IAAI,GAAQ,YAAY,CAAC,IAAzB;;AACN,UAAI,IAAI,CAAC,OAAL,KAAiB,SAAjB,IAA8B,IAAI,CAAC,OAAL,KAAiB,IAAnD,EAAyD;AACvD,QAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,KAAmB,SAAnB,IAAgC,IAAI,CAAC,SAAL,KAAmB,IAAvD,EAA6D;AAC3D,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,CAAC,SAA1B;AACD;;AACD,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAhBuB,CAAA;AAiBxB,CAnBD;;AAqBA,IAAM,0DAA0D,GAAG,UACjE,YADiE,EAEjE,OAFiE,EAE1C;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,QAAQ,GAA6B;AACzC,QAAA,IAAI,EAAE,0BADmC;AAEzC,QAAA,MAAM,EAAE,QAFiC;AAGzC,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD,CAHW;AAIzC,QAAA,OAAO,EAAE,SAJgC;AAKzC,QAAA,SAAS,EAAE;AAL8B,OAArC;AAOA,MAAA,IAAI,GAAQ,YAAY,CAAC,IAAzB;;AACN,UAAI,IAAI,CAAC,OAAL,KAAiB,SAAjB,IAA8B,IAAI,CAAC,OAAL,KAAiB,IAAnD,EAAyD;AACvD,QAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,KAAmB,SAAnB,IAAgC,IAAI,CAAC,SAAL,KAAmB,IAAvD,EAA6D;AAC3D,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,CAAC,SAA1B;AACD;;AACD,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAhBuB,CAAA;AAiBxB,CAnBD;;AAqBA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,kCAAkC,GAAG,UACzC,KADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,CAAC,gBAAvC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CA5DD;;AA8DA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,2BAAN,KAAsC,SAA1C,EAAqD;AACnD,IAAA,UAAU,CAAC,6BAAD,CAAV,GACE,KAAK,CAAC,2BADR;AAED;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CA/BD;;AAiCA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,6BAAN,KAAwC,SAA5C,EAAuD;AACrD,IAAA,UAAU,CAAC,+BAAD,CAAV,GACE,KAAK,CAAC,6BADR;AAED;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CAnED;;AAqEA,IAAM,oDAAoD,GAAG,UAC3D,KAD2D,EAE3D,OAF2D,EAEpC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,iDAAiD,GAAG,UACxD,KADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,2BAAN,KAAsC,SAA1C,EAAqD;AACnD,IAAA,UAAU,CAAC,6BAAD,CAAV,GACE,KAAK,CAAC,2BADR;AAED;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CA/BD;;AAiCA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,2BAAN,KAAsC,SAA1C,EAAqD;AACnD,IAAA,UAAU,CAAC,6BAAD,CAAV,GACE,KAAK,CAAC,2BADR;AAED;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CA/BD;;AAiCA,IAAM,qDAAqD,GAAG,UAC5D,KAD4D,EAE5D,OAF4D,EAErC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,2BAAN,KAAsC,SAA1C,EAAqD;AACnD,IAAA,UAAU,CAAC,6BAAD,CAAV,GACE,KAAK,CAAC,2BADR;AAED;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CA/BD;;AAiCA,IAAM,gCAAgC,GAAG,UACvC,KADuC,EAEvC,OAFuC,EAEhB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CACR,kBADQ,CAAV,GAEI,gDAAgD,CAClD,KAAK,CAAC,gBAD4C,EAElD,OAFkD,CAFpD;AAMD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,4CAA4C,CAChE,KAAK,CAAC,KAD0D,EAEhE,OAFgE,CAAlE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,uCAAuC,CAC7D,KAAK,CAAC,OADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CACR,gBADQ,CAAV,GAEI,qDAAqD,CACvD,KAAK,CAAC,cADiD,EAEvD,OAFuD,CAFzD;AAMD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,2CAA2C,CACrE,KAAK,CAAC,WAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oCAAoC,CACvD,KAAK,CAAC,IADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,UAAP;AACD,CAjDD;;AAmDA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,SAAO,UAAP;AACD,CA9BD;;AAgCA,IAAM,uDAAuD,GAAG,UAC9D,KAD8D,EAE9D,OAF8D,EAEvC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CAjCD;;AAmCA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,sCAAsC,CAC3D,KAAK,CAAC,MADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CAtDD;;AAwDA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,uCAAuC,CAChE,KAAK,CAAC,UAD0D,EAEhE,OAFgE,CAAlE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,IAAA,UAAU,CAAC,oBAAD,CAAV,GAAmC,KAAK,CAAC,kBAAzC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,iCAAiC,GAAG,UACxC,KADwC,EAExC,OAFwC,EAEjB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,6CAA6C,CACtE,KAAK,CAAC,UADgE,EAEtE,OAFsE,CAAxE;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,gDAAgD,GAAG,UACvD,KADuD,EAEvD,OAFuD,EAEhC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,iCAAiC,CACzD,KAAK,CAAC,SADmD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,IAAA,UAAU,CAAC,oBAAD,CAAV,GAAmC,gCAAgC,CACjE,KAAK,CAAC,kBAD2D,EAEjE,OAFiE,CAAnE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,SAAO,UAAP;AACD,CAxBD;;AA0BA,IAAM,gDAAgD,GAAG,UACvD,KADuD,EAEvD,OAFuD,EAEhC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,sDAAsD,GAAG,UAC7D,KAD6D,EAE7D,OAF6D,EAEtC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CAjCD;;AAmCA,IAAM,uDAAuD,GAAG,UAC9D,KAD8D,EAE9D,OAF8D,EAEvC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CArBD;;AAuBA,IAAM,kDAAkD,GAAG,UACzD,KADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,kCAAkC,CAC3D,KAAK,CAAC,UADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,mCAAmC,CAC7D,KAAK,CAAC,WADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,oCAAoC,CAC/D,KAAK,CAAC,YADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,sCAAsC,CACnE,KAAK,CAAC,cAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,MAAI,KAAK,CAAC,8BAAN,KAAyC,SAA7C,EAAwD;AACtD,IAAA,UAAU,CACR,gCADQ,CAAV,GAEI,sDAAsD,CACxD,KAAK,CAAC,8BADkD,EAExD,OAFwD,CAF1D;AAMD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,oCAAoC,CAC/D,KAAK,CAAC,YADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,kCAAkC,CAC3D,KAAK,CAAC,UADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,kCAAkC,CAC3D,KAAK,CAAC,UADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,oCAAoC,CAC/D,KAAK,CAAC,YADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,SAAO,UAAP;AACD,CA9DD;;AAgEA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,CAAC,gBAAvC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CArBD;;AAuBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,yBAAN,KAAoC,SAAxC,EAAmD;AACjD,IAAA,UAAU,CAAC,2BAAD,CAAV,GAA0C,KAAK,CAAC,yBAAhD;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,gCAAgC,CACvD,KAAK,CAAC,QADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,sCAAsC,CACrE,KAAK,CAAC,gBAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,mCAAmC,CAC7D,KAAK,CAAC,WADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,SAAO,UAAP;AACD,CAvCD;;AAyCA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,SAAO,UAAP;AACD,CArBD;;AAuBA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,IAAA,UAAU,CAAC,qBAAD,CAAV,GAAoC,KAAK,CAAC,mBAA1C;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,2CAA2C,CACpE,KAAK,CAAC,UAD8D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,2CAA2C,CACrE,KAAK,CAAC,WAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,EAAN,KAAa,SAAjB,EAA4B;AAC1B,IAAA,UAAU,CAAC,IAAD,CAAV,GAAmB,KAAK,CAAC,EAAzB;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,wCAAwC,CAC/D,KAAK,CAAC,QADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oCAAoC,CACvD,KAAK,CAAC,IADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,UAAP;AACD,CAzDD;;AA2DA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,+CAA+C,CAClE,KAAK,CAAC,IAD4D,EAElE,OAFkE,CAApE;AAID;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,SAAO,UAAP;AACD,CA9BD;;AAgCA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,SAAO,UAAP;AACD,CAxBD;;AA0BA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,2CAA2C,CACpE,KAAK,CAAC,UAD8D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,2CAA2C,CACrE,KAAK,CAAC,WAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,wCAAwC,CAC/D,KAAK,CAAC,QADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oCAAoC,CACvD,KAAK,CAAC,IADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,UAAP;AACD,CAtDD;;AAwDA,IAAM,iDAAiD,GAAG,UACxD,KADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,2CAA2C,CACxE,KAAK,CAAC,cADkE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,6BAA6B,GAAG,UACpC,KADoC,EAEpC,OAFoC,EAEb;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,qCAAqC,CAC9D,KAAK,CAAC,UADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,CAAC,gBAAvC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,+BAA+B,CACrD,KAAK,CAAC,OAD+C,EAErD,OAFqD,CAAvD;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CA7CD;;AA+CA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,uCAAuC,CAChE,KAAK,CAAC,UAD0D,EAEhE,OAFgE,CAAlE;AAID;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,+CAA+C,CACxE,KAAK,CAAC,UADkE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,oCAAoC,CAC5D,KAAK,CAAC,SADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,4CAA4C,CAClE,KAAK,CAAC,OAD4D,EAElE,OAFkE,CAApE;AAID;;AACD,SAAO,UAAP;AACD,CAxBD;;AA0BA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,sCAAsC,CAC7D,KAAK,CAAC,QADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,kCAAkC,CACvD,KAAK,CAAC,MADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,wCAAwC,CAChE,KAAK,CAAC,SAD0D,EAEhE,OAFgE,CAAlE;AAID;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,kCAAkC,GAAG,UACzC,KADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CAAC,uBAAD,CAAV,GAAsC,KAAK,CAAC,qBAA5C;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CA/DD;;AAiEA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,sCAAsC,CAChE,KAAK,CAAC,WAD0D,EAEhE,OAFgE,CAAlE;AAID;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,SAAO,UAAP;AACD,CA9BD;;AAgCA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,IAAA,UAAU,CAAC,oBAAD,CAAV,GAAmC,KAAK,CAAC,kBAAzC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,IAA4C,GAApE;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAN,CAAgB,WAAhB,GAA8B,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,IAA8C,GAAxE;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CAAvD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,oDAAoD,GAAG,UAC3D,KAD2D,EAE3D,OAF2D,EAEpC;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CACE,8CAA8C,CAAC,KAAD,EAAQ,OAAR,CADhD;AAGD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CAXD;;AAaA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,wCAAwC,CAAC,KAAD,EAAQ,OAAR,CAAtD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CAAvD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,oCAAoC,CAAC,KAAD,EAAQ,OAAR,CAAlD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,wCAAwC,CAAC,KAAD,EAAQ,OAAR,CAAtD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,6CAA6C,GAAG,UACpD,KADoD,EAEpD,OAFoD,EAE7B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,uCAAuC,CAAC,KAAD,EAAQ,OAAR,CAArD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,oDAAoD,GAAG,UAC3D,KAD2D,EAE3D,OAF2D,EAEpC;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CACE,8CAA8C,CAAC,KAAD,EAAQ,OAAR,CADhD;AAGD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CAXD;;AAaA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,KAAd;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,gCAAgC,CAAC,KAAK,CAAC,GAAD,CAAN,EAAa,OAAb,CAAjD;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,iDAAiD,GAAG,UACxD,KADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,4CAA4C,CAC3D,KAAK,CAAC,GAAD,CADsD,EAE3D,OAF2D,CAA7D;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,0CAA0C,CACzD,KAAK,CAAC,GAAD,CADoD,EAEzD,OAFyD,CAA3D;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,sDAAsD,GAAG,UAC7D,KAD6D,EAE7D,OAF6D,EAEtC;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,iDAAiD,CAChE,KAAK,CAAC,GAAD,CAD2D,EAEhE,OAFgE,CAAlE;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,kCAAkC,GAAG,UACzC,KADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,6BAA6B,CAAC,KAAK,CAAC,GAAD,CAAN,EAAa,OAAb,CAA9C;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,mCAAmC,CAAC,KAAK,CAAC,GAAD,CAAN,EAAa,OAAb,CAApD;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,sCAAsC,CACrD,KAAK,CAAC,GAAD,CADgD,EAErD,OAFqD,CAAvD;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,uCAAuC,CACtD,KAAK,CAAC,GAAD,CADiD,EAEtD,OAFsD,CAAxD;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,KAAK,CAAC,GAAD,CAAtB;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,KAAK,CAAC,GAAD,CAAtB;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,+BAA+B,GAAG,UACtC,KADsC,EAEtC,OAFsC,EAEf;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,SAAO,UAAP;AACD,CA1CD;;AA4CA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,+BAA+B,CACxD,KAAK,CAAC,UADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,+BAA+B,CACzD,KAAK,CAAC,WADmD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,+BAA+B,CAC1D,KAAK,CAAC,YADoD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,+BAA+B,CAC5D,KAAK,CAAC,cADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,4CAA4C,CACvE,KAAK,CAAC,YADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,+BAA+B,CACxD,KAAK,CAAC,UADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,0CAA0C,CACnE,KAAK,CAAC,UAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,SAAO,UAAP;AACD,CAhDD;;AAkDA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,iDAAiD,CACzE,KAAK,CAAC,SADmE,EAEzE,OAFyE,CAA3E;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CACR,WADQ,CAAV,GAEI,sDAAsD,CACxD,KAAK,CAAC,SADkD,EAExD,OAFwD,CAF1D;AAMD;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CACR,sBADQ,CAAV,GAEI,kDAAkD,CACpD,KAAK,CAAC,oBAD8C,EAEpD,OAFoD,CAFtD;AAMD;;AACD,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CACR,uBADQ,CAAV,GAEI,6CAA6C,CAC/C,KAAK,CAAC,qBADyC,EAE/C,OAF+C,CAFjD;AAMD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CA7CD;;AA+CA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,IAAA,UAAU,CAAC,oBAAD,CAAV,GAAmC,KAAK,CAAC,kBAAzC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,uCAAuC,CAC/D,KAAK,CAAC,SADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,qDAAqD,GAAG,UAC5D,KAD4D,EAE5D,OAF4D,EAErC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CACR,UADQ,CAAV,GAEI,oDAAoD,CACtD,KAAK,CAAC,QADgD,EAEtD,OAFsD,CAFxD;AAMD;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,MAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,IAAA,UAAU,CAAC,oBAAD,CAAV,GAAmC,gCAAgC,CACjE,KAAK,CAAC,kBAD2D,EAEjE,OAFiE,CAAnE;AAID;;AACD,SAAO,UAAP;AACD,CAvBD;;AAyBA,IAAM,6CAA6C,GAAG,UACpD,KADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,2CAA2C,CACpE,KAAK,CAAC,UAD8D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,2CAA2C,CACrE,KAAK,CAAC,WAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,wCAAwC,CAC/D,KAAK,CAAC,QADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,KAAK,CAAC,MAA7B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oCAAoC,CACvD,KAAK,CAAC,IADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,UAAP;AACD,CAtDD;;AAwDA,IAAM,uDAAuD,GAAG,UAC9D,KAD8D,EAE9D,OAF8D,EAEvC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,uDAAuD,CACzE,KAAK,CAAC,GADmE,EAEzE,OAFyE,CAA3E;AAID;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oDAAoD,CACvE,KAAK,CAAC,IADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CACR,OADQ,CAAV,GAEI,uDAAuD,CACzD,KAAK,CAAC,KADmD,EAEzD,OAFyD,CAF3D;AAMD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CACR,SADQ,CAAV,GAEI,uDAAuD,CACzD,KAAK,CAAC,OADmD,EAEzD,OAFyD,CAF3D;AAMD;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,uDAAuD,CACzE,KAAK,CAAC,GADmE,EAEzE,OAFyE,CAA3E;AAID;;AACD,MAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,IAAA,UAAU,CAAC,qBAAD,CAAV,GAAoC,KAAK,CAAC,mBAA1C;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CApDD;;AAsDA,IAAM,iCAAiC,GAAG,UACxC,KADwC,EAExC,OAFwC,EAEjB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,GAAN,KAAc,SAAlB,EAA6B;AAC3B,IAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAAK,CAAC,GAA1B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,8CAA8C,CACrE,KAAK,CAAC,QAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,gCAAgC,GAAG,UACvC,KADuC,EAEvC,OAFuC,EAEhB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,OAAO,CAAC,aAAR,CAAsB,KAAK,CAAC,IAA5B,CAArB;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,kCAAkC,GAAG,UACzC,KADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,IAAA,UAAU,CAAC,qBAAD,CAAV,GAAoC,KAAK,CAAC,mBAA1C;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CArBD;;AAuBA,IAAM,gCAAgC,GAAG,UACvC,KADuC,EAEvC,OAFuC,EAEhB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,2CAA2C,CACrE,KAAK,CAAC,WAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,iCAAiC,CACzD,KAAK,CAAC,SADmD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,SAAO,UAAP;AACD,CAjCD;;AAmCA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,wCAAwC,CAC9D,KAAK,CAAC,OADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,oCAAoC,CAC7D,KAAK,CAAC,UADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,oCAAoC,CAC1D,KAAK,CAAC,OADoD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,oCAAoC,CAC7D,KAAK,CAAC,UADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oCAAoC,CACvD,KAAK,CAAC,IADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,oCAAoC,CACxD,KAAK,CAAC,KADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,oCAAoC,CAC3D,KAAK,CAAC,QADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,SAAO,UAAP;AACD,CA1CD;;AA4CA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,+CAA+C,CACxE,KAAK,CAAC,UADkE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,wCAAwC,CAC/D,KAAK,CAAC,QADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,2CAA2C,CACrE,KAAK,CAAC,WAD+D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,uCAAuC,CAC9D,KAAK,CAAC,QADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,4CAA4C,CAClE,KAAK,CAAC,OAD4D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CACR,gBADQ,CAAV,GAEI,+CAA+C,CACjD,KAAK,CAAC,cAD2C,EAEjD,OAFiD,CAFnD;AAMD;;AACD,SAAO,UAAP;AACD,CA5CD;;AA8CA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,+CAA+C,CACxE,KAAK,CAAC,UADkE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CACR,gBADQ,CAAV,GAEI,8CAA8C,CAChD,KAAK,CAAC,cAD0C,EAEhD,OAFgD,CAFlD;AAMD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,SAAO,UAAP;AACD,CA1BD;;AA4BA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,0CAA0C,CAC/D,KAAK,CAAC,MADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,oCAAoC,CAC1D,KAAK,CAAC,OADoD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,yCAAyC,CAChE,KAAK,CAAC,QAD0D,EAEhE,OAFgE,CAAlE;AAID;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,EAAN,KAAa,SAAjB,EAA4B;AAC1B,IAAA,UAAU,CAAC,IAAD,CAAV,GAAmB,KAAK,CAAC,EAAzB;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,qCAAqC,CAC3D,KAAK,CAAC,OADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CACR,sBADQ,CAAV,GAEI,kDAAkD,CACpD,KAAK,CAAC,oBAD8C,EAEpD,OAFoD,CAFtD;AAMD;;AACD,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CACR,uBADQ,CAAV,GAEI,6CAA6C,CAC/C,KAAK,CAAC,qBADyC,EAE/C,OAF+C,CAFjD;AAMD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CACR,OADQ,CAAV,GAEI,sDAAsD,CACxD,KAAK,CAAC,KADkD,EAExD,OAFwD,CAF1D;AAMD;;AACD,SAAO,UAAP;AACD,CAvCD;;AAyCA,IAAM,+BAA+B,GAAG,UACtC,KADsC,EAEtC,OAFsC,EAEf;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,EAAN,KAAa,SAAjB,EAA4B;AAC1B,IAAA,UAAU,CAAC,IAAD,CAAV,GAAmB,KAAK,CAAC,EAAzB;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,sCAAsC,CAC3D,KAAK,CAAC,MADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,sCAAsC,CACnE,KAAK,CAAC,cAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,wCAAwC,CACvE,KAAK,CAAC,gBADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,yCAAyC,CACzE,KAAK,CAAC,iBADmE,EAEzE,OAFyE,CAA3E;AAID;;AACD,SAAO,UAAP;AACD,CAxBD;;AA0BA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,uCAAuC,CAC9D,KAAK,CAAC,QADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,uCAAuC,CAC7D,KAAK,CAAC,OADuD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,uCAAuC,CAC9D,KAAK,CAAC,QADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,SAAO,UAAP;AACD,CAxBD;;AA0BA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,sCAAsC,GAAG,UAC7C,KAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CACR,uBADQ,CAAV,GAEI,wCAAwC,CAC1C,KAAK,CAAC,qBADoC,EAE1C,OAF0C,CAF5C;AAMD;;AACD,SAAO,UAAP;AACD,CAjBD;;AAmBA,IAAM,iCAAiC,GAAG,UACxC,KADwC,EAExC,OAFwC,EAEjB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,gCAAgC,GAAG,UACvC,KADuC,EAEvC,OAFuC,EAEhB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,oDAAoD,GAAG,UAC3D,KAD2D,EAE3D,OAF2D,EAEpC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,6CAA6C,GAAG,UACpD,KADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,gCAAgC,CAC5D,KAAK,CAAC,aADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,gCAAgC,CAC3D,KAAK,CAAC,YADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,gCAAgC,CAC1D,KAAK,CAAC,WADoD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,gCAAgC,CAC5D,KAAK,CAAC,aADsD,EAE5D,OAF4D,CAA9D;AAID;;AACD,SAAO,UAAP;AACD,CA9BD;;AAgCA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,sCAAsC,CAC9D,KAAK,CAAC,SADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,2CAA2C,CACvE,KAAK,CAAC,aADiE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAxBD;;AA0BA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,mBAAN,KAA8B,SAAlC,EAA6C;AAC3C,IAAA,UAAU,CAAC,qBAAD,CAAV,GAAoC,KAAK,CAAC,mBAA1C;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,gCAAgC,CACvD,KAAK,CAAC,QADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,gCAAgC,GAAG,UACvC,KADuC,EAEvC,OAFuC,EAEhB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,uDAAuD,GAAG,UAC9D,KAD8D,EAE9D,OAF8D,EAEvC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,oCAAoC,CAC/D,KAAK,CAAC,YADyD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,KAAK,CAAC,wBAAN,KAAmC,SAAvC,EAAkD;AAChD,IAAA,UAAU,CAAC,0BAAD,CAAV,GAAyC,KAAK,CAAC,wBAA/C;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,sCAAsC,CAC3D,KAAK,CAAC,MADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,iCAAiC,CACzD,KAAK,CAAC,SADmD,EAEzD,OAFyD,CAA3D;AAID;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CACR,sBADQ,CAAV,GAEI,oDAAoD,CACtD,KAAK,CAAC,oBADgD,EAEtD,OAFsD,CAFxD;AAMD;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,oCAAoC,CACvD,KAAK,CAAC,IADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAK,CAAC,QAA/B;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,sCAAsC,CAC3D,KAAK,CAAC,MADqD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CACR,sBADQ,CAAV,GAEI,4CAA4C,CAC9C,KAAK,CAAC,oBADwC,EAE9C,OAF8C,CAFhD;AAMD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,gCAAgC,CACvD,KAAK,CAAC,QADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CACR,uBADQ,CAAV,GAEI,6CAA6C,CAC/C,KAAK,CAAC,qBADyC,EAE/C,OAF+C,CAFjD;AAMD;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CA9ED;;AAgFA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,qCAAqC,CAC9D,KAAK,CAAC,UADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,CAAC,gBAAvC;AACD;;AACD,MAAI,KAAK,CAAC,MAAN,KAAiB,SAArB,EAAgC;AAC9B,IAAA,UAAU,CAAC,QAAD,CAAV,GAAuB,qCAAqC,CAC1D,KAAK,CAAC,MADoD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,iCAAiC,CACzD,KAAK,CAAC,SADmD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,CAAC,gBAAvC;AACD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,uCAAuC,CAC9D,KAAK,CAAC,QADwD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,sCAAsC,CACnE,KAAK,CAAC,cAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CAzDD;;AA2DA,IAAM,2CAA2C,GAAG,UAClD,KADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,yCAAyC,CAClE,KAAK,CAAC,UAD4D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,wCAAwC,CACpE,KAAK,CAAC,aAD8D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,qCAAqC,CACxD,KAAK,CAAC,IADkD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,UAAP;AACD,CA3BD;;AA6BA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CACR,sBADQ,CAAV,GAEI,4CAA4C,CAC9C,KAAK,CAAC,oBADwC,EAE9C,OAF8C,CAFhD;AAMD;;AACD,MAAI,KAAK,CAAC,QAAN,KAAmB,SAAvB,EAAkC;AAChC,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,gCAAgC,CACvD,KAAK,CAAC,QADiD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CACR,uBADQ,CAAV,GAEI,6CAA6C,CAC/C,KAAK,CAAC,qBADyC,EAE/C,OAF+C,CAFjD;AAMD;;AACD,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,SAAO,UAAP;AACD,CArCD;;AAuCA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,OAAO,EAAE,SAJS;AAKlB,IAAA,aAAa,EAAE,SALG;AAMlB,IAAA,EAAE,EAAE,SANc;AAOlB,IAAA,UAAU,EAAE,SAPM;AAQlB,IAAA,cAAc,EAAE,SARE;AASlB,IAAA,gBAAgB,EAAE,SATA;AAUlB,IAAA,QAAQ,EAAE,SAVQ;AAWlB,IAAA,OAAO,EAAE;AAXS,GAApB;;AAaA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAnDD;;AAqDA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,2BAA2B,EAAE,SAJX;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,WAAW,EAAE,SAPK;AAQlB,IAAA,EAAE,EAAE,SARc;AASlB,IAAA,UAAU,EAAE,SATM;AAUlB,IAAA,cAAc,EAAE,SAVE;AAWlB,IAAA,gBAAgB,EAAE,SAXA;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,OAAO,EAAE;AAbS,GAApB;;AAeA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,2BAAP,KAAuC,SAAvC,IACA,MAAM,CAAC,2BAAP,KAAuC,IAFzC,EAGE;AACA,IAAA,QAAQ,CAAC,2BAAT,GAAuC,MAAM,CAAC,2BAA9C;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA9DD;;AAgEA,IAAM,sDAAsD,GAAG,UAC7D,MAD6D,EAE7D,OAF6D,EAEtC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,8BADU;AAElB,IAAA,MAAM,EAAE,SAFU;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,QAAQ,EAAE,SAJQ;AAKlB,IAAA,UAAU,EAAE,SALM;AAMlB,IAAA,KAAK,EAAE,SANW;AAOlB,IAAA,KAAK,EAAE,SAPW;AAQlB,IAAA,GAAG,EAAE;AARa,GAApB;;AAUA,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,SAAO,QAAP;AACD,CApCD;;AAsCA,IAAM,oDAAoD,GAAG,UAC3D,MAD2D,EAE3D,OAF2D,EAEpC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,4BADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,2BAA2B,EAAE,SAJX;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,WAAW,EAAE,SAPK;AAQlB,IAAA,EAAE,EAAE,SARc;AASlB,IAAA,UAAU,EAAE,SATM;AAUlB,IAAA,cAAc,EAAE,SAVE;AAWlB,IAAA,gBAAgB,EAAE,SAXA;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,OAAO,EAAE;AAbS,GAApB;;AAeA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,2BAAP,KAAuC,SAAvC,IACA,MAAM,CAAC,2BAAP,KAAuC,IAFzC,EAGE;AACA,IAAA,QAAQ,CAAC,2BAAT,GAAuC,MAAM,CAAC,2BAA9C;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA9DD;;AAgEA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,yBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,2BAA2B,EAAE,SAJX;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,WAAW,EAAE,SAPK;AAQlB,IAAA,EAAE,EAAE,SARc;AASlB,IAAA,UAAU,EAAE,SATM;AAUlB,IAAA,cAAc,EAAE,SAVE;AAWlB,IAAA,gBAAgB,EAAE,SAXA;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,OAAO,EAAE;AAbS,GAApB;;AAeA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,2BAAP,KAAuC,SAAvC,IACA,MAAM,CAAC,2BAAP,KAAuC,IAFzC,EAGE;AACA,IAAA,QAAQ,CAAC,2BAAT,GAAuC,MAAM,CAAC,2BAA9C;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA9DD;;AAgEA,IAAM,wDAAwD,GAAG,UAC/D,MAD+D,EAE/D,OAF+D,EAExC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gCADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,2BAA2B,EAAE,SAJX;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,WAAW,EAAE,SAPK;AAQlB,IAAA,EAAE,EAAE,SARc;AASlB,IAAA,UAAU,EAAE,SATM;AAUlB,IAAA,cAAc,EAAE,SAVE;AAWlB,IAAA,gBAAgB,EAAE,SAXA;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,OAAO,EAAE;AAbS,GAApB;;AAeA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,2BAAP,KAAuC,SAAvC,IACA,MAAM,CAAC,2BAAP,KAAuC,IAFzC,EAGE;AACA,IAAA,QAAQ,CAAC,2BAAT,GAAuC,MAAM,CAAC,2BAA9C;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA9DD;;AAgEA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,gDAAgD,CAC9D,MAAM,CAAC,IADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,kCAAkC,GAAG,UACzC,MADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,UADU;AAElB,IAAA,gBAAgB,EAAE,SAFA;AAGlB,IAAA,WAAW,EAAE,SAHK;AAIlB,IAAA,KAAK,EAAE,SAJW;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,cAAc,EAAE,SANE;AAOlB,IAAA,WAAW,EAAE,SAPK;AAQlB,IAAA,IAAI,EAAE;AARY,GAApB;;AAUA,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,kDAAkD,CAC5E,MAAM,CAAC,gBADqE,EAE5E,OAF4E,CAA9E;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,8CAA8C,CAC7D,MAAM,CAAC,KADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,yCAAyC,CAC1D,MAAM,CAAC,OADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,uDAAuD,CAC/E,MAAM,CAAC,cADwE,EAE/E,OAF+E,CAAjF;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,6CAA6C,CAClE,MAAM,CAAC,WAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,sCAAsC,CACpD,MAAM,CAAC,IAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,SAAO,QAAP;AACD,CAzDD;;AA2DA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,UAAU,EAAE,SAHM;AAIlB,IAAA,GAAG,EAAE,SAJa;AAKlB,IAAA,EAAE,EAAE,SALc;AAMlB,IAAA,MAAM,EAAE,SANU;AAOlB,IAAA,cAAc,EAAE,SAPE;AAQlB,IAAA,KAAK,EAAE,SARW;AASlB,IAAA,KAAK,EAAE,SATW;AAUlB,IAAA,uBAAuB,EAAE,SAVP;AAWlB,IAAA,uBAAuB,EAAE,SAXP;AAYlB,IAAA,mBAAmB,EAAE,SAZH;AAalB,IAAA,kBAAkB,EAAE,SAbF;AAclB,IAAA,WAAW,EAAE;AAdK,GAApB;;AAgBA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MACE,MAAM,CAAC,uBAAP,KAAmC,SAAnC,IACA,MAAM,CAAC,uBAAP,KAAmC,IAFrC,EAGE;AACA,IAAA,QAAQ,CAAC,uBAAT,GAAmC,MAAM,CAAC,uBAA1C;AACD;;AACD,MACE,MAAM,CAAC,uBAAP,KAAmC,SAAnC,IACA,MAAM,CAAC,uBAAP,KAAmC,IAFrC,EAGE;AACA,IAAA,QAAQ,CAAC,uBAAT,GAAmC,MAAM,CAAC,uBAA1C;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,SAAO,QAAP;AACD,CAxED;;AA0EA,IAAM,yDAAyD,GAAG,UAChE,MADgE,EAEhE,OAFgE,EAEzC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iCADU;AAElB,IAAA,MAAM,EAAE,SAFU;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,QAAQ,EAAE,SALQ;AAMlB,IAAA,UAAU,EAAE,SANM;AAOlB,IAAA,iBAAiB,EAAE,SAPD;AAQlB,IAAA,KAAK,EAAE,SARW;AASlB,IAAA,KAAK,EAAE,SATW;AAUlB,IAAA,GAAG,EAAE;AAVa,GAApB;;AAYA,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,SAAO,QAAP;AACD,CA/CD;;AAiDA,IAAM,yDAAyD,GAAG,UAChE,MADgE,EAEhE,OAFgE,EAEzC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iCADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,OAAO,EAAE,SAHS;AAIlB,IAAA,OAAO,EAAE,SAJS;AAKlB,IAAA,SAAS,EAAE,SALO;AAMlB,IAAA,SAAS,EAAE,SANO;AAOlB,IAAA,SAAS,EAAE;AAPO,GAApB;;AASA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,OAAhB,CAAnB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,uCAAuC,CAC1D,MAAM,CAAC,SADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,IAAJ,CAAS,MAAM,CAAC,SAAhB,CAArB;AACD;;AACD,SAAO,QAAP;AACD,CAnCD;;AAqCA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,EAAE,EAAE,SAHc;AAIlB,IAAA,IAAI,EAAE,SAJY;AAKlB,IAAA,IAAI,EAAE;AALY,GAApB;;AAOA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CA3BD;;AA6BA,IAAM,qDAAqD,GAAG,UAC5D,MAD4D,EAE5D,OAF4D,EAErC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,6BADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,gBAAgB,EAAE,SAJA;AAKlB,IAAA,MAAM,EAAE,SALU;AAMlB,IAAA,SAAS,EAAE;AANO,GAApB;;AAQA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,sCAAsC,CAC5D,MAAM,CAAC,YADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,wCAAwC,CACxD,MAAM,CAAC,MADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,mCAAmC,CACtD,MAAM,CAAC,SAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,SAAO,QAAP;AACD,CAxCD;;AA0CA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,mDAAmD,CACjE,MAAM,CAAC,IAD0D,EAEjE,OAFiE,CAAnE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,MAAM,EAAE;AAHU,GAApB;;AAKA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,wCAAwC,CACxD,MAAM,CAAC,MADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,aAAa,EAAE,SAHG;AAIlB,IAAA,UAAU,EAAE;AAJM,GAApB;;AAMA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,wCAAwC,CAC5D,MAAM,CAAC,UADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,SAAO,QAAP;AACD,CAvBD;;AAyBA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,EAAE,EAAE,SAPc;AAQlB,IAAA,UAAU,EAAE,SARM;AASlB,IAAA,cAAc,EAAE,SATE;AAUlB,IAAA,gBAAgB,EAAE,SAVA;AAWlB,IAAA,QAAQ,EAAE,SAXQ;AAYlB,IAAA,OAAO,EAAE;AAZS,GAApB;;AAcA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAvDD;;AAyDA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,eADU;AAElB,IAAA,IAAI,EAAE;AAFY,GAApB;;AAIA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,yCAAyC,CACvD,MAAM,CAAC,IADgD,EAEvD,OAFuD,CAAzD;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,sDAAsD,GAAG,UAC7D,MAD6D,EAE7D,OAF6D,EAEtC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,8BADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,UAAU,EAAE,SAHM;AAIlB,IAAA,OAAO,EAAE,SAJS;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,SAAS,EAAE,SANO;AAOlB,IAAA,SAAS,EAAE,SAPO;AAQlB,IAAA,SAAS,EAAE;AARO,GAApB;;AAUA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,OAAhB,CAAnB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,uCAAuC,CAC1D,MAAM,CAAC,SADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,IAAJ,CAAS,MAAM,CAAC,SAAhB,CAArB;AACD;;AACD,SAAO,QAAP;AACD,CAvCD;;AAyCA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,WAAW,EAAE,SAHK;AAIlB,IAAA,QAAQ,EAAE,SAJQ;AAKlB,IAAA,KAAK,EAAE;AALW,GAApB;;AAOA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,SAAO,QAAP;AACD,CAxBD;;AA0BA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,UAAU,EAAE;AAHM,GAApB;;AAKA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,yCAAyC,CAC7D,MAAM,CAAC,UADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,kBAAkB,EAAE,SAFF;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,MAAM,EAAE;AAJU,GAApB;;AAMA,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,SAAO,QAAP;AACD,CAvBD;;AAyBA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gBADU;AAElB,IAAA,KAAK,EAAE,SAFW;AAGlB,IAAA,eAAe,EAAE,SAHC;AAIlB,IAAA,iBAAiB,EAAE,SAJD;AAKlB,IAAA,KAAK,EAAE;AALW,GAApB;;AAOA,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,SAAO,QAAP;AACD,CA3BD;;AA6BA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,oBAAoB,EAAE,SAFJ;AAGlB,IAAA,aAAa,EAAE,SAHG;AAIlB,IAAA,GAAG,EAAE,SAJa;AAKlB,IAAA,YAAY,EAAE,SALI;AAMlB,IAAA,YAAY,EAAE,SANI;AAOlB,IAAA,WAAW,EAAE,SAPK;AAQlB,IAAA,cAAc,EAAE,SARE;AASlB,IAAA,IAAI,EAAE,SATY;AAUlB,IAAA,EAAE,EAAE,SAVc;AAWlB,IAAA,QAAQ,EAAE,SAXQ;AAYlB,IAAA,gBAAgB,EAAE,SAZA;AAalB,IAAA,MAAM,EAAE,SAbU;AAclB,IAAA,oBAAoB,EAAE,SAdJ;AAelB,IAAA,IAAI,EAAE,SAfY;AAgBlB,IAAA,QAAQ,EAAE,SAhBQ;AAiBlB,IAAA,SAAS,EAAE,SAjBO;AAkBlB,IAAA,cAAc,EAAE,SAlBE;AAmBlB,IAAA,KAAK,EAAE,SAnBW;AAoBlB,IAAA,qBAAqB,EAAE,SApBL;AAqBlB,IAAA,oBAAoB,EAAE,SArBJ;AAsBlB,IAAA,aAAa,EAAE,SAtBG;AAuBlB,IAAA,OAAO,EAAE,SAvBS;AAwBlB,IAAA,IAAI,EAAE;AAxBY,GAApB;;AA0BA,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,iDAAiD,CAC/E,MAAM,CAAC,oBADwE,EAE/E,OAF+E,CAAjF;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,uCAAuC,CAC7D,MAAM,CAAC,YADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,sCAAsC,CACpD,MAAM,CAAC,IAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,wCAAwC,CACxD,MAAM,CAAC,MADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,MAAM,CAAC,oBADqE,EAE5E,OAF4E,CAA9E;AAID;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,kCAAkC,CACpD,MAAM,CAAC,QAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,uCAAuC,CACtD,MAAM,CAAC,KAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,MACE,MAAM,CAAC,qBAAP,KAAiC,SAAjC,IACA,MAAM,CAAC,qBAAP,KAAiC,IAFnC,EAGE;AACA,IAAA,QAAQ,CAAC,qBAAT,GAAiC,+CAA+C,CAC9E,MAAM,CAAC,qBADuE,EAE9E,OAF8E,CAAhF;AAID;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CA9ID;;AAgJA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,WAAW,EAAE,SAHK;AAIlB,IAAA,QAAQ,EAAE;AAJQ,GAApB;;AAMA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,SAAO,QAAP;AACD,CApBD;;AAsBA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,eADU;AAElB,IAAA,cAAc,EAAE;AAFE,GAApB;;AAIA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,gDAAgD,CAC9D,MAAM,CAAC,IADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,OAAO,EAAE,SAJS;AAKlB,IAAA,aAAa,EAAE,SALG;AAMlB,IAAA,EAAE,EAAE,SANc;AAOlB,IAAA,UAAU,EAAE,SAPM;AAQlB,IAAA,cAAc,EAAE,SARE;AASlB,IAAA,gBAAgB,EAAE,SATA;AAUlB,IAAA,OAAO,EAAE;AAVS,GAApB;;AAYA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA/CD;;AAiDA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,QAAQ,EAAE;AAFQ,GAApB;;AAIA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,8CAA8C,CAChE,MAAM,CAAC,QADyD,EAEhE,OAFgE,CAAlE;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,mCAAmC,GAAG,UAC1C,MAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,WADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,QAAQ,EAAE;AAHQ,GAApB;;AAKA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,+CAA+C,CACnE,MAAM,CAAC,UAD4D,EAEnE,OAFmE,CAArE;AAID;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,kDAAkD,GAAG,UACzD,MADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,SAAS,EAAE,SAFO;AAGlB,IAAA,kBAAkB,EAAE,SAHF;AAIlB,IAAA,aAAa,EAAE,SAJG;AAKlB,IAAA,YAAY,EAAE;AALI,GAApB;;AAOA,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,mCAAmC,CACtD,MAAM,CAAC,SAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,kCAAkC,CAC9D,MAAM,CAAC,kBADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,SAAO,QAAP;AACD,CAjCD;;AAmCA,IAAM,mDAAmD,GAAG,UAC1D,MAD0D,EAE1D,OAF0D,EAEnC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,2BADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,OAAO,EAAE,SAHS;AAIlB,IAAA,SAAS,EAAE;AAJO,GAApB;;AAMA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CApBD;;AAsBA,IAAM,yDAAyD,GAAG,UAChE,MADgE,EAEhE,OAFgE,EAEzC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iCADU;AAElB,IAAA,MAAM,EAAE,SAFU;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,KAAK,EAAE,SAJW;AAKlB,IAAA,KAAK,EAAE,SALW;AAMlB,IAAA,GAAG,EAAE;AANa,GAApB;;AAQA,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,SAAO,QAAP;AACD,CA5BD;;AA8BA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,gBAAgB,EAAE,SAHA;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,WAAW,EAAE,SANK;AAOlB,IAAA,aAAa,EAAE,SAPG;AAQlB,IAAA,EAAE,EAAE,SARc;AASlB,IAAA,QAAQ,EAAE,SATQ;AAUlB,IAAA,UAAU,EAAE,SAVM;AAWlB,IAAA,cAAc,EAAE,SAXE;AAYlB,IAAA,gBAAgB,EAAE,SAZA;AAalB,IAAA,iBAAiB,EAAE,SAbD;AAclB,IAAA,QAAQ,EAAE,SAdQ;AAelB,IAAA,OAAO,EAAE,SAfS;AAgBlB,IAAA,OAAO,EAAE;AAhBS,GAApB;;AAkBA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA7ED;;AA+EA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,eAAe,EAAE;AALC,GAApB;;AAOA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,6CAA6C,CACpE,MAAM,CAAC,aAD6D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,SAAO,QAAP;AACD,CA3BD;;AA6BA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,oBAAoB,EAAE,SAJJ;AAKlB,IAAA,QAAQ,EAAE,SALQ;AAMlB,IAAA,gBAAgB,EAAE,SANA;AAOlB,IAAA,OAAO,EAAE,SAPS;AAQlB,IAAA,mBAAmB,EAAE,SARH;AASlB,IAAA,YAAY,EAAE,SATI;AAUlB,IAAA,YAAY,EAAE,SAVI;AAWlB,IAAA,QAAQ,EAAE,SAXQ;AAYlB,IAAA,OAAO,EAAE,SAZS;AAalB,IAAA,IAAI,EAAE;AAbY,GAApB;;AAeA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CApED;;AAsEA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,MAAM,EAAE,SAHU;AAIlB,IAAA,IAAI,EAAE,SAJY;AAKlB,IAAA,KAAK,EAAE,SALW;AAMlB,IAAA,YAAY,EAAE,SANI;AAOlB,IAAA,QAAQ,EAAE,SAPQ;AAQlB,IAAA,eAAe,EAAE,SARC;AASlB,IAAA,QAAQ,EAAE;AATQ,GAApB;;AAWA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,SAAO,QAAP;AACD,CAxCD;;AA0CA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,UAAU,EAAE;AAHM,GAApB;;AAKA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,OAAO,EAAE,SAHS;AAIlB,IAAA,QAAQ,EAAE,SAJQ;AAKlB,IAAA,SAAS,EAAE,SALO;AAMlB,IAAA,UAAU,EAAE,SANM;AAOlB,IAAA,MAAM,EAAE;AAPU,GAApB;;AASA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,SAAO,QAAP;AACD,CAhCD;;AAkCA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,cAAc,EAAE,SAHE;AAIlB,IAAA,SAAS,EAAE,SAJO;AAKlB,IAAA,UAAU,EAAE,SALM;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,YAAY,EAAE;AAPI,GAApB;;AASA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,SAAO,QAAP;AACD,CAhCD;;AAkCA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,aAAa,EAAE,SAHG;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,WAAW,EAAE,SALK;AAMlB,IAAA,QAAQ,EAAE,SANQ;AAOlB,IAAA,YAAY,EAAE,SAPI;AAQlB,IAAA,WAAW,EAAE,SARK;AASlB,IAAA,aAAa,EAAE,SATG;AAUlB,IAAA,cAAc,EAAE,SAVE;AAWlB,IAAA,EAAE,EAAE,SAXc;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,OAAO,EAAE,SAbS;AAclB,IAAA,MAAM,EAAE,SAdU;AAelB,IAAA,SAAS,EAAE,SAfO;AAgBlB,IAAA,IAAI,EAAE;AAhBY,GAApB;;AAkBA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,6CAA6C,CACjE,MAAM,CAAC,UAD0D,EAEjE,OAFiE,CAAnE;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,6CAA6C,CAClE,MAAM,CAAC,WAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,0CAA0C,CAC5D,MAAM,CAAC,QADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,uCAAuC,CACxD,MAAM,CAAC,OADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,sCAAsC,CACpD,MAAM,CAAC,IAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,SAAO,QAAP;AACD,CAnFD;;AAqFA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,MAAM,EAAE;AAHU,GAApB;;AAKA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,6CAA6C,CACrE,MAAM,CAAC,cAD8D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,IAAI,EAAE;AAFY,GAApB;;AAIA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,gDAAgD,CAC9D,MAAM,CAAC,IADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,eAAe,EAAE;AAHC,GAApB;;AAKA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,yCAAyC,CAC7D,MAAM,CAAC,UADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,SAAS,EAAE,SAHO;AAIlB,IAAA,OAAO,EAAE;AAJS,GAApB;;AAMA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,iDAAiD,CACrE,MAAM,CAAC,UAD8D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,sCAAsC,CACzD,MAAM,CAAC,SADkD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,8CAA8C,CAC/D,MAAM,CAAC,OADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,SAAO,QAAP;AACD,CA7BD;;AA+BA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,UAAU,EAAE;AAHM,GAApB;;AAKA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,qCAAqC,GAAG,UAC5C,MAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,aADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,oBAAoB,EAAE,SAHJ;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,gBAAgB,EAAE,SALA;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,OAAO,EAAE;AAPS,GAApB;;AASA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAtCD;;AAwCA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,2CAA2C,CAC5D,MAAM,CAAC,OADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,WAAW,EAAE,SAHK;AAIlB,IAAA,SAAS,EAAE,SAJO;AAKlB,IAAA,cAAc,EAAE;AALE,GAApB;;AAOA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,SAAO,QAAP;AACD,CAxBD;;AA0BA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,eAAe,EAAE,SAHC;AAIlB,IAAA,cAAc,EAAE,SAJE;AAKlB,IAAA,YAAY,EAAE,SALI;AAMlB,IAAA,UAAU,EAAE,SANM;AAOlB,IAAA,YAAY,EAAE,SAPI;AAQlB,IAAA,QAAQ,EAAE,SARQ;AASlB,IAAA,EAAE,EAAE,SATc;AAUlB,IAAA,SAAS,EAAE,SAVO;AAWlB,IAAA,aAAa,EAAE,SAXG;AAYlB,IAAA,WAAW,EAAE,SAZK;AAalB,IAAA,cAAc,EAAE,SAbE;AAclB,IAAA,IAAI,EAAE;AAdY,GAApB;;AAgBA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,2CAA2C,CAC/D,MAAM,CAAC,UADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,wCAAwC,CAC1D,MAAM,CAAC,QADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,SAAO,QAAP;AACD,CAlED;;AAoEA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,iDAAiD,CAC/D,MAAM,CAAC,IADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,aAAa,EAAE,SANG;AAOlB,IAAA,EAAE,EAAE,SAPc;AAQlB,IAAA,UAAU,EAAE,SARM;AASlB,IAAA,cAAc,EAAE,SATE;AAUlB,IAAA,gBAAgB,EAAE,SAVA;AAWlB,IAAA,QAAQ,EAAE,SAXQ;AAYlB,IAAA,OAAO,EAAE;AAZS,GAApB;;AAcA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAvDD;;AAyDA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gBADU;AAElB,IAAA,QAAQ,EAAE,SAFQ;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,WAAW,EAAE,SAFK;AAGlB,IAAA,iBAAiB,EAAE;AAHD,GAApB;;AAKA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,wCAAwC,CAC7D,MAAM,CAAC,WADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,SAAO,QAAP;AACD,CAtBD;;AAwBA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,YAAY,EAAE,SAFI;AAGlB,IAAA,UAAU,EAAE;AAHM,GAApB;;AAKA,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,UAAU,EAAE,SAHM;AAIlB,IAAA,MAAM,EAAE,SAJU;AAKlB,IAAA,iBAAiB,EAAE,SALD;AAMlB,IAAA,OAAO,EAAE,SANS;AAOlB,IAAA,KAAK,EAAE,SAPW;AAQlB,IAAA,SAAS,EAAE,SARO;AASlB,IAAA,WAAW,EAAE;AATK,GAApB;;AAWA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,SAAO,QAAP;AACD,CA3CD;;AA6CA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,eAAe,EAAE,SAHC;AAIlB,IAAA,cAAc,EAAE,SAJE;AAKlB,IAAA,YAAY,EAAE,SALI;AAMlB,IAAA,UAAU,EAAE,SANM;AAOlB,IAAA,YAAY,EAAE,SAPI;AAQlB,IAAA,QAAQ,EAAE,SARQ;AASlB,IAAA,EAAE,EAAE,SATc;AAUlB,IAAA,SAAS,EAAE,SAVO;AAWlB,IAAA,aAAa,EAAE,SAXG;AAYlB,IAAA,WAAW,EAAE,SAZK;AAalB,IAAA,cAAc,EAAE,SAbE;AAclB,IAAA,IAAI,EAAE;AAdY,GAApB;;AAgBA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,2CAA2C,CAC/D,MAAM,CAAC,UADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,wCAAwC,CAC1D,MAAM,CAAC,QADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,SAAO,QAAP;AACD,CAlED;;AAoEA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,iDAAiD,CAC/D,MAAM,CAAC,IADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,oBAAoB,EAAE,SAFJ;AAGlB,IAAA,kBAAkB,EAAE;AAHF,GAApB;;AAKA,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,MAAM,CAAC,oBADqE,EAE5E,OAF4E,CAA9E;AAID;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,gDAAgD,CAC5E,MAAM,CAAC,kBADqE,EAE5E,OAF4E,CAA9E;AAID;;AACD,SAAO,QAAP;AACD,CA5BD;;AA8BA,IAAM,qDAAqD,GAAG,UAC5D,MAD4D,EAE5D,OAF4D,EAErC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,6BADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,OAAO,EAAE,SAHS;AAIlB,IAAA,SAAS,EAAE,SAJO;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,SAAS,EAAE,SANO;AAOlB,IAAA,SAAS,EAAE,SAPO;AAQlB,IAAA,SAAS,EAAE;AARO,GAApB;;AAUA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,OAAhB,CAAnB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,uCAAuC,CAC1D,MAAM,CAAC,SADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,IAAJ,CAAS,MAAM,CAAC,SAAhB,CAArB;AACD;;AACD,SAAO,QAAP;AACD,CAvCD;;AAyCA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,WAAW,EAAE;AAFK,GAApB;;AAIA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,iEAAiE,GAAG,UACxE,MADwE,EAExE,OAFwE,EAEjD;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,yCADU;AAElB,IAAA,YAAY,EAAE,SAFI;AAGlB,IAAA,aAAa,EAAE,SAHG;AAIlB,IAAA,iBAAiB,EAAE,SAJD;AAKlB,IAAA,SAAS,EAAE,SALO;AAMlB,IAAA,iBAAiB,EAAE,SAND;AAOlB,IAAA,OAAO,EAAE;AAPS,GAApB;;AASA,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,uCAAuC,CACxD,MAAM,CAAC,OADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,QAAP;AACD,CAzCD;;AA2CA,IAAM,yDAAyD,GAAG,UAChE,MADgE,EAEhE,OAFgE,EAEzC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iCADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,SAAS,EAAE,SAHO;AAIlB,IAAA,iBAAiB,EAAE,SAJD;AAKlB,IAAA,OAAO,EAAE;AALS,GAApB;;AAOA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,uCAAuC,CACxD,MAAM,CAAC,OADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,QAAP;AACD,CA9BD;;AAgCA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,eADU;AAElB,IAAA,QAAQ,EAAE,SAFQ;AAGlB,IAAA,kBAAkB,EAAE,SAHF;AAIlB,IAAA,iBAAiB,EAAE;AAJD,GAApB;;AAMA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,SAAO,QAAP;AACD,CA1BD;;AA4BA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,aAAa,EAAE,SAHG;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,EAAE,EAAE,SALc;AAMlB,IAAA,gBAAgB,EAAE,SANA;AAOlB,IAAA,MAAM,EAAE,SAPU;AAQlB,IAAA,SAAS,EAAE,SARO;AASlB,IAAA,IAAI,EAAE,SATY;AAUlB,IAAA,SAAS,EAAE,SAVO;AAWlB,IAAA,gBAAgB,EAAE,SAXA;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,aAAa,EAAE,SAbG;AAclB,IAAA,cAAc,EAAE,SAdE;AAelB,IAAA,KAAK,EAAE,SAfW;AAgBlB,IAAA,IAAI,EAAE;AAhBY,GAApB;;AAkBA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,uCAAuC,CAC3D,MAAM,CAAC,UADoD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,uCAAuC,CACvD,MAAM,CAAC,MADgD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,mCAAmC,CACtD,MAAM,CAAC,SAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,yCAAyC,CAC3D,MAAM,CAAC,QADoD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,wCAAwC,CAChE,MAAM,CAAC,cADyD,EAEhE,OAFgE,CAAlE;AAID;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CA5FD;;AA8FA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,SAAS,EAAE,SAHO;AAIlB,IAAA,QAAQ,EAAE;AAJQ,GAApB;;AAMA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,OAAhB,CAAnB;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,IAAI,IAAJ,CAAS,MAAM,CAAC,SAAhB,CAArB;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,SAAO,QAAP;AACD,CApBD;;AAsBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,+CAA+C,CAC7D,MAAM,CAAC,IADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAA1C;AAA0D,GADrD,CAAP;AAGD,CAPD;;AASA,IAAM,mDAAmD,GAAG,UAC1D,MAD0D,EAE1D,OAF0D,EAEnC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,6CAA6C,CAAC,KAAD,EAAQ,OAAR,CAA7C;AAA6D,GADxD,CAAP;AAGD,CAPD;;AASA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAA1C;AAA0D,GADrD,CAAP;AAGD,CAPD;;AASA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAA1C;AAA0D,GADrD,CAAP;AAGD,CAPD;;AASA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,2CAA2C,CAAC,KAAD,EAAQ,OAAR,CAA3C;AAA2D,GADtD,CAAP;AAGD,CAPD;;AASA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,2CAA2C,CAAC,KAAD,EAAQ,OAAR,CAA3C;AAA2D,GADtD,CAAP;AAGD,CAPD;;AASA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CAAzC;AAAyD,GADpD,CAAP;AAGD,CAPD;;AASA,IAAM,sDAAsD,GAAG,UAC7D,MAD6D,EAE7D,OAF6D,EAEtC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,gDAAgD,CAAC,KAAD,EAAQ,OAAR,CAAhD;AAAgE,GAD3D,CAAP;AAGD,CAPD;;AASA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAA1C;AAA0D,GADrD,CAAP;AAGD,CAPD;;AASA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,mCAAmC,CAAC,KAAD,EAAQ,OAAR,CAAnC;AAAmD,GAD9C,CAAP;AAGD,CAPD;;AASA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,wCAAwC,CAAC,KAAD,EAAQ,OAAR,CAAxC;AAAwD,GADnD,CAAP;AAGD,CAPD;;AASA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,2CAA2C,CAAC,KAAD,EAAQ,OAAR,CAA3C;AAA2D,GADtD,CAAP;AAGD,CAPD;;AASA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,sCAAsC,CAAC,KAAD,EAAQ,OAAR,CAAtC;AAAsD,GADjD,CAAP;AAGD,CAPD;;AASA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAA1C;AAA0D,GADrD,CAAP;AAGD,CAPD;;AASA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CAAzC;AAAyD,GADpD,CAAP;AAGD,CAPD;;AASA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CAAzC;AAAyD,GADpD,CAAP;AAGD,CAPD;;AASA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAA1C;AAA0D,GADrD,CAAP;AAGD,CAPD;;AASA,IAAM,uDAAuD,GAAG,UAC9D,MAD8D,EAE9D,OAF8D,EAEvC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,iDAAiD,CAAC,KAAD,EAAQ,OAAR,CAAjD;AAAiE,GAD5D,CAAP;AAGD,CAPD;;AASA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,2CAA2C,CAAC,KAAD,EAAQ,OAAR,CAA3C;AAA2D,GADtD,CAAP;AAGD,CAPD;;AASA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AAAK,WAAA,KAAA;AAAK,GAAxC,CAAP;AACD,CALD;;AAOA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,kCAAkC,CAAC,MAAM,CAAC,GAAD,CAAP,EAAc,OAAd,CAAnD;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,4CAA4C,CAC3D,MAAM,CAAC,GAAD,CADqD,EAE3D,OAF2D,CAA7D;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,yCAAyC,CACxD,MAAM,CAAC,GAAD,CADkD,EAExD,OAFwD,CAA1D;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,oDAAoD,GAAG,UAC3D,MAD2D,EAE3D,OAF2D,EAEpC;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,+CAA+C,CAC9D,MAAM,CAAC,GAAD,CADwD,EAE9D,OAF8D,CAAhE;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,2CAA2C,CAC1D,MAAM,CAAC,GAAD,CADoD,EAE1D,OAF0D,CAA5D;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,sCAAsC,CACrD,MAAM,CAAC,GAAD,CAD+C,EAErD,OAFqD,CAAvD;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,wCAAwC,CACvD,MAAM,CAAC,GAAD,CADiD,EAEvD,OAFuD,CAAzD;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,yDAAyD,GAAG,UAChE,MADgE,EAEhE,OAFgE,EAEzC;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,oDAAoD,CACnE,MAAM,CAAC,GAAD,CAD6D,EAEnE,OAFmE,CAArE;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,uCAAuC,CACtD,MAAM,CAAC,GAAD,CADgD,EAEtD,OAFsD,CAAxD;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,yCAAyC,CACxD,MAAM,CAAC,GAAD,CADkD,EAExD,OAFwD,CAA1D;AAID,GALD;AAMA,SAAO,SAAP;AACD,CAZD;;AAcA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,MAAM,CAAC,GAAD,CAAvB;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,MAAM,CAAC,GAAD,CAAvB;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;AAC7B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,MAAM,CAAC,GAAD,CAAvB;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,iCAAiC,GAAG,UACxC,MADwC,EAExC,OAFwC,EAEjB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,SADU;AAElB,IAAA,MAAM,EAAE,SAFU;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,iBAAiB,EAAE,SALD;AAMlB,IAAA,QAAQ,EAAE,SANQ;AAOlB,IAAA,QAAQ,EAAE,SAPQ;AAQlB,IAAA,QAAQ,EAAE,SARQ;AASlB,IAAA,UAAU,EAAE,SATM;AAUlB,IAAA,UAAU,EAAE,SAVM;AAWlB,IAAA,UAAU,EAAE,SAXM;AAYlB,IAAA,KAAK,EAAE,SAZW;AAalB,IAAA,GAAG,EAAE;AAba,GAApB;;AAeA,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,SAAO,QAAP;AACD,CA3DD;;AA6DA,IAAM,qCAAqC,GAAG,UAC5C,MAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,aADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,WAAW,EAAE,SAHK;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,cAAc,EAAE,SALE;AAMlB,IAAA,YAAY,EAAE,SANI;AAOlB,IAAA,UAAU,EAAE,SAPM;AAQlB,IAAA,UAAU,EAAE;AARM,GAApB;;AAUA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,iCAAiC,CACrD,MAAM,CAAC,UAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,iCAAiC,CACtD,MAAM,CAAC,WAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,iCAAiC,CACvD,MAAM,CAAC,YADgD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,iCAAiC,CACzD,MAAM,CAAC,cADkD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,8CAA8C,CACpE,MAAM,CAAC,YAD6D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,iCAAiC,CACrD,MAAM,CAAC,UAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,4CAA4C,CAChE,MAAM,CAAC,UADyD,EAEhE,OAFgE,CAAlE;AAID;;AACD,SAAO,QAAP;AACD,CAzDD;;AA2DA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,cAAc,EAAE,SAHE;AAIlB,IAAA,SAAS,EAAE,SAJO;AAKlB,IAAA,MAAM,EAAE;AALU,GAApB;;AAOA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,oDAAoD,CAC5E,MAAM,CAAC,cADqE,EAE5E,OAF4E,CAA9E;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,4CAA4C,CAC5D,MAAM,CAAC,MADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,SAAO,QAAP;AACD,CA9BD;;AAgCA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,eADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,SAAS,EAAE,SAHO;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,aAAa,EAAE,SALG;AAMlB,IAAA,YAAY,EAAE;AANI,GAApB;;AAQA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,SAAO,QAAP;AACD,CA5BD;;AA8BA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,kBAAkB,EAAE,SAFF;AAGlB,IAAA,KAAK,EAAE;AAHW,GAApB;;AAKA,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,SAAS,EAAE,SAFO;AAGlB,IAAA,YAAY,EAAE;AAHI,GAApB;;AAKA,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,yCAAyC,CAC5D,MAAM,CAAC,SADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,uDAAuD,GAAG,UAC9D,MAD8D,EAE9D,OAF8D,EAEvC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,+BADU;AAElB,IAAA,QAAQ,EAAE,SAFQ;AAGlB,IAAA,eAAe,EAAE,SAHC;AAIlB,IAAA,kBAAkB,EAAE;AAJF,GAApB;;AAMA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,sDAAsD,CACxE,MAAM,CAAC,QADiE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,kCAAkC,CAC9D,MAAM,CAAC,kBADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,SAAO,QAAP;AACD,CA7BD;;AA+BA,IAAM,gDAAgD,GAAG,UACvD,MADuD,EAEvD,OAFuD,EAEhC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,uBAAuB,EAAE,SAJP;AAKlB,IAAA,2BAA2B,EAAE,SALX;AAMlB,IAAA,OAAO,EAAE,SANS;AAOlB,IAAA,eAAe,EAAE,SAPC;AAQlB,IAAA,kBAAkB,EAAE,SARF;AASlB,IAAA,MAAM,EAAE,SATU;AAUlB,IAAA,uBAAuB,EAAE,SAVP;AAWlB,IAAA,mBAAmB,EAAE,SAXH;AAYlB,IAAA,SAAS,EAAE,SAZO;AAalB,IAAA,aAAa,EAAE,SAbG;AAclB,IAAA,QAAQ,EAAE,SAdQ;AAelB,IAAA,OAAO,EAAE;AAfS,GAApB;;AAiBA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MACE,MAAM,CAAC,uBAAP,KAAmC,SAAnC,IACA,MAAM,CAAC,uBAAP,KAAmC,IAFrC,EAGE;AACA,IAAA,QAAQ,CAAC,uBAAT,GAAmC,MAAM,CAAC,uBAA1C;AACD;;AACD,MACE,MAAM,CAAC,2BAAP,KAAuC,SAAvC,IACA,MAAM,CAAC,2BAAP,KAAuC,IAFzC,EAGE;AACA,IAAA,QAAQ,CAAC,2BAAT,GAAuC,MAAM,CAAC,2BAA9C;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MACE,MAAM,CAAC,uBAAP,KAAmC,SAAnC,IACA,MAAM,CAAC,uBAAP,KAAmC,IAFrC,EAGE;AACA,IAAA,QAAQ,CAAC,uBAAT,GAAmC,MAAM,CAAC,uBAA1C;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA/ED;;AAiFA,IAAM,0DAA0D,GAAG,UACjE,MADiE,EAEjE,OAFiE,EAE1C;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kCADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,GAAG,EAAE,SAJa;AAKlB,IAAA,KAAK,EAAE,SALW;AAMlB,IAAA,YAAY,EAAE,SANI;AAOlB,IAAA,OAAO,EAAE,SAPS;AAQlB,IAAA,oBAAoB,EAAE,SARJ;AASlB,IAAA,GAAG,EAAE,SATa;AAUlB,IAAA,gBAAgB,EAAE,SAVA;AAWlB,IAAA,mBAAmB,EAAE,SAXH;AAYlB,IAAA,YAAY,EAAE,SAZI;AAalB,IAAA,YAAY,EAAE,SAbI;AAclB,IAAA,OAAO,EAAE,SAdS;AAelB,IAAA,IAAI,EAAE;AAfY,GAApB;;AAiBA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,yDAAyD,CACtE,MAAM,CAAC,GAD+D,EAEtE,OAFsE,CAAxE;AAID;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,sDAAsD,CACpE,MAAM,CAAC,IAD6D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,yDAAyD,CACxE,MAAM,CAAC,KADiE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,yDAAyD,CAC1E,MAAM,CAAC,OADmE,EAE1E,OAF0E,CAA5E;AAID;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,yDAAyD,CACtE,MAAM,CAAC,GAD+D,EAEtE,OAFsE,CAAxE;AAID;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CA3FD;;AA6FA,IAAM,mCAAmC,GAAG,UAC1C,MAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,WADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,KAAK,EAAE;AAHW,GAApB;;AAKA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,QAAQ,EAAE;AAFQ,GAApB;;AAIA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,gDAAgD,CAClE,MAAM,CAAC,QAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,YAAY,EAAE,SAFI;AAGlB,IAAA,UAAU,EAAE;AAHM,GAApB;;AAKA,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,QAAQ,EAAE,SAFQ;AAGlB,IAAA,WAAW,EAAE;AAHK,GAApB;;AAKA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,mCAAmC,GAAG,UAC1C,MAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,WADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,MAAM,EAAE;AAHU,GAApB;;AAKA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,8CAA8C,CAClE,MAAM,CAAC,UAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,8CAA8C,CAC9D,MAAM,CAAC,MADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,SAAO,QAAP;AACD,CAtBD;;AAwBA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gBADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,KAAK,EAAE;AAJW,GAApB;;AAMA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,SAAO,QAAP;AACD,CApBD;;AAsBA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,oBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,OAAO,EAAE,SAJS;AAKlB,IAAA,aAAa,EAAE,SALG;AAMlB,IAAA,EAAE,EAAE,SANc;AAOlB,IAAA,UAAU,EAAE,SAPM;AAQlB,IAAA,cAAc,EAAE,SARE;AASlB,IAAA,gBAAgB,EAAE,SATA;AAUlB,IAAA,QAAQ,EAAE,SAVQ;AAWlB,IAAA,4BAA4B,EAAE,SAXZ;AAYlB,IAAA,QAAQ,EAAE,SAZQ;AAalB,IAAA,SAAS,EAAE,SAbO;AAclB,IAAA,8BAA8B,EAAE,SAdd;AAelB,IAAA,OAAO,EAAE;AAfS,GAApB;;AAiBA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MACE,MAAM,CAAC,4BAAP,KAAwC,SAAxC,IACA,MAAM,CAAC,4BAAP,KAAwC,IAF1C,EAGE;AACA,IAAA,QAAQ,CAAC,4BAAT,GAAwC,MAAM,CAAC,4BAA/C;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MACE,MAAM,CAAC,8BAAP,KAA0C,SAA1C,IACA,MAAM,CAAC,8BAAP,KAA0C,IAF5C,EAGE;AACA,IAAA,QAAQ,CAAC,8BAAT,GACE,MAAM,CAAC,8BADT;AAED;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA1ED;;AA4EA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,oBAAoB,EAAE,SALJ;AAMlB,IAAA,gBAAgB,EAAE,SANA;AAOlB,IAAA,mBAAmB,EAAE,SAPH;AAQlB,IAAA,YAAY,EAAE,SARI;AASlB,IAAA,YAAY,EAAE,SATI;AAUlB,IAAA,OAAO,EAAE,SAVS;AAWlB,IAAA,IAAI,EAAE;AAXY,GAApB;;AAaA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CA5DD;;AA8DA,IAAM,kCAAkC,GAAG,UACzC,MADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,UADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,WAAW,EAAE,SAHK;AAIlB,IAAA,SAAS,EAAE,SAJO;AAKlB,IAAA,WAAW,EAAE,SALK;AAMlB,IAAA,SAAS,EAAE,SANO;AAOlB,IAAA,SAAS,EAAE,SAPO;AAQlB,IAAA,QAAQ,EAAE;AARQ,GAApB;;AAUA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,6CAA6C,CAClE,MAAM,CAAC,WAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,mCAAmC,CACtD,MAAM,CAAC,SAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,SAAO,QAAP;AACD,CA1CD;;AA4CA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,0CAA0C,CAC3D,MAAM,CAAC,OADoD,EAE3D,OAF2D,CAA7D;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,SAAS,EAAE;AAFO,GAApB;;AAIA,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,OAAO,EAAE,SAHS;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,IAAI,EAAE,SALY;AAMlB,IAAA,KAAK,EAAE,SANW;AAOlB,IAAA,QAAQ,EAAE;AAPQ,GAApB;;AASA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,sCAAsC,CAC1D,MAAM,CAAC,UADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,sCAAsC,CACvD,MAAM,CAAC,OADgD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,sCAAsC,CAC1D,MAAM,CAAC,UADmD,EAE1D,OAF0D,CAA5D;AAID;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,sCAAsC,CACpD,MAAM,CAAC,IAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,sCAAsC,CACrD,MAAM,CAAC,KAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,sCAAsC,CACxD,MAAM,CAAC,QADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,QAAP;AACD,CAlDD;;AAoDA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,QAAQ,EAAE,SAHQ;AAIlB,IAAA,WAAW,EAAE,SAJK;AAKlB,IAAA,QAAQ,EAAE,SALQ;AAMlB,IAAA,OAAO,EAAE,SANS;AAOlB,IAAA,cAAc,EAAE;AAPE,GAApB;;AASA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,iDAAiD,CACrE,MAAM,CAAC,UAD8D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,0CAA0C,CAC5D,MAAM,CAAC,QADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,6CAA6C,CAClE,MAAM,CAAC,WAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,yCAAyC,CAC3D,MAAM,CAAC,QADoD,EAE3D,OAF2D,CAA7D;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,8CAA8C,CAC/D,MAAM,CAAC,OADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,iDAAiD,CACzE,MAAM,CAAC,cADkE,EAEzE,OAFyE,CAA3E;AAID;;AACD,SAAO,QAAP;AACD,CAlDD;;AAoDA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,UAAU,EAAE,SAFM;AAGlB,IAAA,cAAc,EAAE,SAHE;AAIlB,IAAA,UAAU,EAAE,SAJM;AAKlB,IAAA,IAAI,EAAE;AALY,GAApB;;AAOA,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,iDAAiD,CACrE,MAAM,CAAC,UAD8D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,gDAAgD,CACxE,MAAM,CAAC,cADiE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,SAAO,QAAP;AACD,CA9BD;;AAgCA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,MAAM,EAAE,SAFU;AAGlB,IAAA,OAAO,EAAE;AAHS,GAApB;;AAKA,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,4CAA4C,CAC5D,MAAM,CAAC,MADqD,EAE5D,OAF4D,CAA9D;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,UAAU,EAAE,SAHM;AAIlB,IAAA,MAAM,EAAE,SAJU;AAKlB,IAAA,OAAO,EAAE,SALS;AAMlB,IAAA,KAAK,EAAE,SANW;AAOlB,IAAA,IAAI,EAAE;AAPY,GAApB;;AASA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,wCAAwC,CAC/D,MAAM,CAAC,aADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAAzB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,SAAO,QAAP;AACD,CAnCD;;AAqCA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,QAAQ,EAAE;AAHQ,GAApB;;AAKA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,sCAAsC,CACvD,MAAM,CAAC,OADgD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,2CAA2C,CAC7D,MAAM,CAAC,QADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,SAAO,QAAP;AACD,CAtBD;;AAwBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,EAAE,EAAE,SAFc;AAGlB,IAAA,OAAO,EAAE;AAHS,GAApB;;AAKA,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,GAAG,EAAE,SAHa;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,UAAU,EAAE,SALM;AAMlB,IAAA,EAAE,EAAE,SANc;AAOlB,IAAA,gBAAgB,EAAE,SAPA;AAQlB,IAAA,gBAAgB,EAAE,SARA;AASlB,IAAA,IAAI,EAAE,SATY;AAUlB,IAAA,aAAa,EAAE,SAVG;AAWlB,IAAA,WAAW,EAAE,SAXK;AAYlB,IAAA,OAAO,EAAE,SAZS;AAalB,IAAA,IAAI,EAAE;AAbY,GAApB;;AAeA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,2CAA2C,CAC/D,MAAM,CAAC,UADwD,EAE/D,OAF+D,CAAjE;AAID;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,+CAA+C,CACzE,MAAM,CAAC,gBADkE,EAEzE,OAFyE,CAA3E;AAID;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,0CAA0C,CACjE,MAAM,CAAC,aAD0D,EAEjE,OAFiE,CAAnE;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CA1ED;;AA4EA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,+CAA+C,CAC7D,MAAM,CAAC,IADsD,EAE7D,OAF6D,CAA/D;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,kDAAkD,GAAG,UACzD,MADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,SAAS,EAAE,SAHO;AAIlB,IAAA,MAAM,EAAE;AAJU,GAApB;;AAMA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,yDAAyD,CACzE,MAAM,CAAC,MADkE,EAEzE,OAFyE,CAA3E;AAID;;AACD,SAAO,QAAP;AACD,CAvBD;;AAyBA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,MAAM,EAAE;AAHU,GAApB;;AAKA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,wCAAwC,CACxD,MAAM,CAAC,MADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,gBAAgB,EAAE,SAHA;AAIlB,IAAA,iBAAiB,EAAE;AAJD,GAApB;;AAMA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,wCAAwC,CAChE,MAAM,CAAC,cADyD,EAEhE,OAFgE,CAAlE;AAID;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,0CAA0C,CACpE,MAAM,CAAC,gBAD6D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,2CAA2C,CACtE,MAAM,CAAC,iBAD+D,EAEtE,OAFsE,CAAxE;AAID;;AACD,SAAO,QAAP;AACD,CAnCD;;AAqCA,IAAM,wCAAwC,GAAG,UAC/C,MAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,gBADU;AAElB,IAAA,WAAW,EAAE,SAFK;AAGlB,IAAA,qBAAqB,EAAE;AAHL,GAApB;;AAKA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MACE,MAAM,CAAC,qBAAP,KAAiC,SAAjC,IACA,MAAM,CAAC,qBAAP,KAAiC,IAFnC,EAGE;AACA,IAAA,QAAQ,CAAC,qBAAT,GAAiC,0CAA0C,CACzE,MAAM,CAAC,qBADkE,EAEzE,OAFyE,CAA3E;AAID;;AACD,SAAO,QAAP;AACD,CAtBD;;AAwBA,IAAM,mCAAmC,GAAG,UAC1C,MAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,WADU;AAElB,IAAA,IAAI,EAAE;AAFY,GAApB;;AAIA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,kCAAkC,GAAG,UACzC,MADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,UADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,OAAO,EAAE;AAHS,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,WAAW,EAAE,SAJK;AAKlB,IAAA,aAAa,EAAE;AALG,GAApB;;AAOA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,kCAAkC,CACzD,MAAM,CAAC,aADkD,EAEzD,OAFyD,CAA3D;AAID;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,kCAAkC,CACxD,MAAM,CAAC,YADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,kCAAkC,CACvD,MAAM,CAAC,WADgD,EAEvD,OAFuD,CAAzD;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,kCAAkC,CACzD,MAAM,CAAC,aADkD,EAEzD,OAFyD,CAA3D;AAID;;AACD,SAAO,QAAP;AACD,CApCD;;AAsCA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,oBAAoB,EAAE,SAJJ;AAKlB,IAAA,gBAAgB,EAAE,SALA;AAMlB,IAAA,mBAAmB,EAAE,SANH;AAOlB,IAAA,YAAY,EAAE,SAPI;AAQlB,IAAA,YAAY,EAAE,SARI;AASlB,IAAA,OAAO,EAAE,SATS;AAUlB,IAAA,IAAI,EAAE;AAVY,GAApB;;AAYA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CAxDD;;AA0DA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,yBADU;AAElB,IAAA,YAAY,EAAE,SAFI;AAGlB,IAAA,oBAAoB,EAAE,SAHJ;AAIlB,IAAA,gBAAgB,EAAE,SAJA;AAKlB,IAAA,mBAAmB,EAAE,SALH;AAMlB,IAAA,YAAY,EAAE,SANI;AAOlB,IAAA,YAAY,EAAE,SAPI;AAQlB,IAAA,OAAO,EAAE;AARS,GAApB;;AAUA,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CA7CD;;AA+CA,IAAM,kDAAkD,GAAG,UACzD,MADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,OAAO,EAAE,SAHS;AAIlB,IAAA,SAAS,EAAE,SAJO;AAKlB,IAAA,SAAS,EAAE;AALO,GAApB;;AAOA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uDAAuD,CACrE,MAAM,CAAC,IAD8D,EAErE,OAFqE,CAAvE;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CA3BD;;AA6BA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,IAAI,EAAE,SAFY;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,gDAAgD,CAC9D,MAAM,CAAC,IADuD,EAE9D,OAF8D,CAAhE;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,EAAE,EAAE,SAFc;AAGlB,IAAA,oBAAoB,EAAE,SAHJ;AAIlB,IAAA,QAAQ,EAAE,SAJQ;AAKlB,IAAA,WAAW,EAAE,SALK;AAMlB,IAAA,KAAK,EAAE,SANW;AAOlB,IAAA,qBAAqB,EAAE,SAPL;AAQlB,IAAA,oBAAoB,EAAE,SARJ;AASlB,IAAA,aAAa,EAAE;AATG,GAApB;;AAWA,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,8CAA8C,CAC5E,MAAM,CAAC,oBADqE,EAE5E,OAF4E,CAA9E;AAID;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,kCAAkC,CACpD,MAAM,CAAC,QAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,uCAAuC,CACtD,MAAM,CAAC,KAD+C,EAEtD,OAFsD,CAAxD;AAID;;AACD,MACE,MAAM,CAAC,qBAAP,KAAiC,SAAjC,IACA,MAAM,CAAC,qBAAP,KAAiC,IAFnC,EAGE;AACA,IAAA,QAAQ,CAAC,qBAAT,GAAiC,+CAA+C,CAC9E,MAAM,CAAC,qBADuE,EAE9E,OAF8E,CAAhF;AAID;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,SAAO,QAAP;AACD,CA7DD;;AA+DA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,OAAO,EAAE,SAJS;AAKlB,IAAA,aAAa,EAAE,SALG;AAMlB,IAAA,EAAE,EAAE,SANc;AAOlB,IAAA,UAAU,EAAE,SAPM;AAQlB,IAAA,cAAc,EAAE,SARE;AASlB,IAAA,gBAAgB,EAAE,SATA;AAUlB,IAAA,QAAQ,EAAE,SAVQ;AAWlB,IAAA,OAAO,EAAE;AAXS,GAApB;;AAaA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,EAAP,KAAc,SAAd,IAA2B,MAAM,CAAC,EAAP,KAAc,IAA7C,EAAmD;AACjD,IAAA,QAAQ,CAAC,EAAT,GAAc,MAAM,CAAC,EAArB;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,QAA3B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAnDD;;AAqDA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,oBAAoB,EAAE,SALJ;AAMlB,IAAA,YAAY,EAAE,SANI;AAOlB,IAAA,gBAAgB,EAAE,SAPA;AAQlB,IAAA,mBAAmB,EAAE,SARH;AASlB,IAAA,YAAY,EAAE,SATI;AAUlB,IAAA,YAAY,EAAE,SAVI;AAWlB,IAAA,OAAO,EAAE,SAXS;AAYlB,IAAA,OAAO,EAAE,SAZS;AAalB,IAAA,IAAI,EAAE;AAbY,GAApB;;AAeA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,MAAM,CAAC,IAAvB;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,MAAM,CAAC,mBAAtC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,uCAAuC,CACrD,MAAM,CAAC,IAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,SAAO,QAAP;AACD,CApED;;AAsEA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,YAAY,EAAE,SAFI;AAGlB,IAAA,QAAQ,EAAE;AAHQ,GAApB;;AAKA,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,kCAAkC,CACpD,MAAM,CAAC,QAD6C,EAEpD,OAFoD,CAAtD;AAID;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,kCAAkC,GAAG,UACzC,MADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,UADU;AAElB,IAAA,OAAO,EAAE,SAFS;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,mBAAmB,GAAG,UAAC,MAAD,EAAuB;AAAyB,SAAC;AAC3E,IAAA,cAAc,EAAE,MAAM,CAAC,UADoD;AAE3E,IAAA,WAAW,EAAE,MAAM,CAAC,OAFuD;AAG3E,IAAA,SAAS,EAAE,MAAM,CAAC,OAAP,CAAe,kBAAf;AAHgE,GAAD;AAI1E,CAJF,C,CAMA;;;AACA,IAAM,WAAW,GAAG,UAClB,UADkB,EAElB,OAFkB,EAEK;AAEvB,MAAI,UAAU,YAAY,UAA1B,EAAsC;AACpC,WAAO,OAAO,CAAC,OAAR,CAAgB,UAAhB,CAAP;AACD;;AACD,SACE,OAAO,CAAC,eAAR,CAAwB,UAAxB,KAAuC,OAAO,CAAC,OAAR,CAAgB,IAAI,UAAJ,EAAhB,CADzC;AAGD,CAVD,C,CAYA;;;AACA,IAAM,iBAAiB,GAAG,UACxB,UADwB,EAExB,OAFwB,EAED;AAEvB,SAAO,WAAW,CAAC,UAAD,EAAa,OAAb,CAAX,CAAiC,IAAjC,CAAsC,UAAA,IAAA,EAAI;AAC/C,WAAA,OAAO,CAAC,WAAR,CAAoB,IAApB,CAAA;AAAyB,GADpB,CAAP;AAGD,CAPD;;AASA,IAAM,SAAS,GAAG,UAAC,UAAD,EAAkB,OAAlB,EAAyC;AACzD,SAAO,iBAAiB,CAAC,UAAD,EAAa,OAAb,CAAjB,CAAuC,IAAvC,CAA4C,UAAA,OAAA,EAAO;AACxD,QAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,aAAO,IAAI,CAAC,KAAL,CAAW,OAAX,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GALM,CAAP;AAMD,CAPD;AASA;;;;;AAGA,IAAM,qBAAqB,GAAG,UAAC,MAAD,EAAyB,IAAzB,EAAkC;AAC9D,MAAM,OAAO,GAAG,UAAC,MAAD,EAAc,GAAd,EAAyB;AACvC,WAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,IAApB,CAAyB,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,WAAF,OAAoB,GAAG,CAAvB,WAAoB,EAApB;AAAqC,KAAnE,CAAA;AAAoE,GADtE;;AAGA,MAAM,iBAAiB,GAAG,UAAC,QAAD,EAAiB;AACzC,QAAI,UAAU,GAAG,QAAjB;;AACA,QAAI,UAAU,CAAC,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;AAChC,MAAA,UAAU,GAAG,UAAU,CAAC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;AACD;;AACD,QAAI,UAAU,CAAC,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;AAChC,MAAA,UAAU,GAAG,UAAU,CAAC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;AACD;;AACD,WAAO,UAAP;AACD,GATD;;AAWA,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,OAAR,EAAiB,kBAAjB,CAAzB;;AACA,MAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,WAAO,iBAAiB,CAAC,MAAM,CAAC,OAAP,CAAe,SAAf,CAAD,CAAxB;AACD;;AAED,MAAI,IAAI,CAAC,IAAL,KAAc,SAAlB,EAA6B;AAC3B,WAAO,iBAAiB,CAAC,IAAI,CAAC,IAAN,CAAxB;AACD;;AAED,MAAI,IAAI,CAAC,QAAD,CAAJ,KAAmB,SAAvB,EAAkC;AAChC,WAAO,iBAAiB,CAAC,IAAI,CAAC,QAAD,CAAL,CAAxB;AACD;;AAED,SAAO,EAAP;AACD,CA7BD","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport function serializeAws_restJson1_1CreateAppCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps\";\n            if (input.CreateApplicationRequest !== undefined) {\n                body = serializeAws_restJson1_1CreateApplicationRequest(input.CreateApplicationRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateCampaignCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.WriteCampaignRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteCampaignRequest(input.WriteCampaignRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateEmailTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/email\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            if (input.EmailTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1EmailTemplateRequest(input.EmailTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateExportJobCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.ExportJobRequest !== undefined) {\n                body = serializeAws_restJson1_1ExportJobRequest(input.ExportJobRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateImportJobCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.ImportJobRequest !== undefined) {\n                body = serializeAws_restJson1_1ImportJobRequest(input.ImportJobRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateJourneyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.WriteJourneyRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteJourneyRequest(input.WriteJourneyRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreatePushTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/push\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            if (input.PushNotificationTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateSegmentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.WriteSegmentRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteSegmentRequest(input.WriteSegmentRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateSmsTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            if (input.SMSTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1SMSTemplateRequest(input.SMSTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1CreateVoiceTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            if (input.VoiceTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteAdmChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteApnsChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteApnsSandboxChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteApnsVoipChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteAppCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteBaiduChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteCampaignCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteEmailChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteEmailTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/email\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteEndpointCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.EndpointId !== undefined) {\n                labelValue = input.EndpointId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteEventStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteGcmChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteJourneyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeletePushTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/push\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteSegmentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteSmsChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteSmsTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteUserEndpointsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.UserId !== undefined) {\n                labelValue = input.UserId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: UserId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteVoiceChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1DeleteVoiceTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetAdmChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetApnsChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetApnsSandboxChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetApnsVoipChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetApnsVoipSandboxChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetAppCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetApplicationDateRangeKpiCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.KpiName !== undefined) {\n                labelValue = input.KpiName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: KpiName.\");\n            }\n            query = {};\n            if (input.EndTime !== undefined) {\n                query[\"end-time\"] = (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.StartTime !== undefined) {\n                query[\"start-time\"] = (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetApplicationSettingsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetAppsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps\";\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetBaiduChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetCampaignCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetCampaignActivitiesCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetCampaignDateRangeKpiCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            if (input.KpiName !== undefined) {\n                labelValue = input.KpiName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: KpiName.\");\n            }\n            query = {};\n            if (input.EndTime !== undefined) {\n                query[\"end-time\"] = (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.StartTime !== undefined) {\n                query[\"start-time\"] = (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetCampaignVersionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            if (input.Version !== undefined) {\n                labelValue = input.Version;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Version.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Version.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetCampaignVersionsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetCampaignsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetChannelsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetEmailChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetEmailTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/email\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetEndpointCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.EndpointId !== undefined) {\n                labelValue = input.EndpointId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetEventStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetExportJobCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JobId !== undefined) {\n                labelValue = input.JobId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JobId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetExportJobsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetGcmChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetImportJobCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JobId !== undefined) {\n                labelValue = input.JobId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JobId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetImportJobsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetJourneyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetJourneyDateRangeKpiCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            if (input.KpiName !== undefined) {\n                labelValue = input.KpiName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: KpiName.\");\n            }\n            query = {};\n            if (input.EndTime !== undefined) {\n                query[\"end-time\"] = (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.StartTime !== undefined) {\n                query[\"start-time\"] = (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString();\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyActivityId !== undefined) {\n                labelValue = input.JourneyActivityId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            query = {};\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetJourneyExecutionMetricsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            query = {};\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetPushTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/push\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSegmentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSegmentExportJobsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSegmentImportJobsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSegmentVersionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            if (input.Version !== undefined) {\n                labelValue = input.Version;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: Version.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: Version.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSegmentVersionsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSegmentsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSmsChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetSmsTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetUserEndpointsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.UserId !== undefined) {\n                labelValue = input.UserId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: UserId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetVoiceChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1GetVoiceTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1ListJourneysCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            query = {};\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Token !== undefined) {\n                query[\"token\"] = input.Token;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1ListTagsForResourceCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/tags/{ResourceArn}\";\n            if (input.ResourceArn !== undefined) {\n                labelValue = input.ResourceArn;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1ListTemplateVersionsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            if (input.TemplateType !== undefined) {\n                labelValue = input.TemplateType;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n            }\n            query = {};\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1ListTemplatesCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/templates\";\n            query = {};\n            if (input.NextToken !== undefined) {\n                query[\"next-token\"] = input.NextToken;\n            }\n            if (input.PageSize !== undefined) {\n                query[\"page-size\"] = input.PageSize;\n            }\n            if (input.Prefix !== undefined) {\n                query[\"prefix\"] = input.Prefix;\n            }\n            if (input.TemplateType !== undefined) {\n                query[\"template-type\"] = input.TemplateType;\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"GET\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1PhoneNumberValidateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/phone/number/validate\";\n            if (input.NumberValidateRequest !== undefined) {\n                body = serializeAws_restJson1_1NumberValidateRequest(input.NumberValidateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1PutEventStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.WriteEventStream !== undefined) {\n                body = serializeAws_restJson1_1WriteEventStream(input.WriteEventStream, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1PutEventsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.EventsRequest !== undefined) {\n                body = serializeAws_restJson1_1EventsRequest(input.EventsRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1RemoveAttributesCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.AttributeType !== undefined) {\n                labelValue = input.AttributeType;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n            }\n            if (input.UpdateAttributesRequest !== undefined) {\n                body = serializeAws_restJson1_1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1SendMessagesCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.MessageRequest !== undefined) {\n                body = serializeAws_restJson1_1MessageRequest(input.MessageRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1SendUsersMessagesCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SendUsersMessageRequest !== undefined) {\n                body = serializeAws_restJson1_1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1TagResourceCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/tags/{ResourceArn}\";\n            if (input.ResourceArn !== undefined) {\n                labelValue = input.ResourceArn;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n            }\n            if (input.TagsModel !== undefined) {\n                body = serializeAws_restJson1_1TagsModel(input.TagsModel, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UntagResourceCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"\";\n            resolvedPath = \"/v1/tags/{ResourceArn}\";\n            if (input.ResourceArn !== undefined) {\n                labelValue = input.ResourceArn;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n            }\n            query = {};\n            if (input.TagKeys !== undefined) {\n                query[\"tagKeys\"] = (input.TagKeys || []).map(function (_entry) { return _entry; });\n            }\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"DELETE\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateAdmChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.ADMChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1ADMChannelRequest(input.ADMChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateApnsChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.APNSChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1APNSChannelRequest(input.APNSChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateApnsSandboxChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.APNSSandboxChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateApnsVoipChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.APNSVoipChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.APNSVoipSandboxChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateApplicationSettingsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.WriteApplicationSettingsRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateBaiduChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.BaiduChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1BaiduChannelRequest(input.BaiduChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateCampaignCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.CampaignId !== undefined) {\n                labelValue = input.CampaignId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n            }\n            if (input.WriteCampaignRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteCampaignRequest(input.WriteCampaignRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateEmailChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.EmailChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1EmailChannelRequest(input.EmailChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateEmailTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/email\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.CreateNewVersion !== undefined) {\n                query[\"create-new-version\"] = input.CreateNewVersion.toString();\n            }\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            if (input.EmailTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1EmailTemplateRequest(input.EmailTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateEndpointCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.EndpointId !== undefined) {\n                labelValue = input.EndpointId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n            }\n            if (input.EndpointRequest !== undefined) {\n                body = serializeAws_restJson1_1EndpointRequest(input.EndpointRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateEndpointsBatchCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.EndpointBatchRequest !== undefined) {\n                body = serializeAws_restJson1_1EndpointBatchRequest(input.EndpointBatchRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateGcmChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.GCMChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1GCMChannelRequest(input.GCMChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateJourneyCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            if (input.WriteJourneyRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteJourneyRequest(input.WriteJourneyRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateJourneyStateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.JourneyId !== undefined) {\n                labelValue = input.JourneyId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n            }\n            if (input.JourneyStateRequest !== undefined) {\n                body = serializeAws_restJson1_1JourneyStateRequest(input.JourneyStateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdatePushTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/push\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.CreateNewVersion !== undefined) {\n                query[\"create-new-version\"] = input.CreateNewVersion.toString();\n            }\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            if (input.PushNotificationTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateSegmentCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SegmentId !== undefined) {\n                labelValue = input.SegmentId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n            }\n            if (input.WriteSegmentRequest !== undefined) {\n                body = serializeAws_restJson1_1WriteSegmentRequest(input.WriteSegmentRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateSmsChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.SMSChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1SMSChannelRequest(input.SMSChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateSmsTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.CreateNewVersion !== undefined) {\n                query[\"create-new-version\"] = input.CreateNewVersion.toString();\n            }\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            if (input.SMSTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1SMSTemplateRequest(input.SMSTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateTemplateActiveVersionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            if (input.TemplateType !== undefined) {\n                labelValue = input.TemplateType;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n            }\n            if (input.TemplateActiveVersionRequest !== undefined) {\n                body = serializeAws_restJson1_1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateVoiceChannelCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n            if (input.ApplicationId !== undefined) {\n                labelValue = input.ApplicationId;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n            }\n            if (input.VoiceChannelRequest !== undefined) {\n                body = serializeAws_restJson1_1VoiceChannelRequest(input.VoiceChannelRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, body: body }))];\n        });\n    });\n}\nexport function serializeAws_restJson1_1UpdateVoiceTemplateCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, resolvedPath, labelValue, query, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/json\";\n            resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n            if (input.TemplateName !== undefined) {\n                labelValue = input.TemplateName;\n                if (labelValue.length <= 0) {\n                    throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                }\n                resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n            }\n            else {\n                throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n            }\n            query = {};\n            if (input.CreateNewVersion !== undefined) {\n                query[\"create-new-version\"] = input.CreateNewVersion.toString();\n            }\n            if (input.Version !== undefined) {\n                query[\"version\"] = input.Version;\n            }\n            if (input.VoiceTemplateRequest !== undefined) {\n                body = serializeAws_restJson1_1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n            }\n            if (body === undefined) {\n                body = {};\n            }\n            body = JSON.stringify(body);\n            return [2 /*return*/, new __HttpRequest(__assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"PUT\", headers: headers, path: resolvedPath, query: query, body: body }))];\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateAppCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateAppCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateAppResponse\",\n                        ApplicationResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationResponse = deserializeAws_restJson1_1ApplicationResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateAppCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateCampaignCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateCampaignCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateCampaignResponse\",\n                        CampaignResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateCampaignCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateEmailTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateEmailTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateEmailTemplateResponse\",\n                        CreateTemplateMessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateEmailTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateExportJobCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateExportJobCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateExportJobResponse\",\n                        ExportJobResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ExportJobResponse = deserializeAws_restJson1_1ExportJobResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateExportJobCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateImportJobCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateImportJobCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateImportJobResponse\",\n                        ImportJobResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ImportJobResponse = deserializeAws_restJson1_1ImportJobResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateImportJobCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateJourneyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateJourneyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateJourneyResponse\",\n                        JourneyResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateJourneyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreatePushTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreatePushTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreatePushTemplateResponse\",\n                        CreateTemplateMessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreatePushTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateSegmentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateSegmentCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateSegmentResponse\",\n                        SegmentResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateSegmentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateSmsTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateSmsTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateSmsTemplateResponse\",\n                        CreateTemplateMessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateSmsTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1CreateVoiceTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 201 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1CreateVoiceTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"CreateVoiceTemplateResponse\",\n                        CreateTemplateMessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CreateTemplateMessageBody = deserializeAws_restJson1_1CreateTemplateMessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1CreateVoiceTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteAdmChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteAdmChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteAdmChannelResponse\",\n                        ADMChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ADMChannelResponse = deserializeAws_restJson1_1ADMChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteAdmChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteApnsChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteApnsChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteApnsChannelResponse\",\n                        APNSChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSChannelResponse = deserializeAws_restJson1_1APNSChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteApnsChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteApnsSandboxChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteApnsSandboxChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteApnsSandboxChannelResponse\",\n                        APNSSandboxChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSSandboxChannelResponse = deserializeAws_restJson1_1APNSSandboxChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteApnsSandboxChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteApnsVoipChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteApnsVoipChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteApnsVoipChannelResponse\",\n                        APNSVoipChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSVoipChannelResponse = deserializeAws_restJson1_1APNSVoipChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteApnsVoipChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteApnsVoipSandboxChannelResponse\",\n                        APNSVoipSandboxChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1_1APNSVoipSandboxChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteApnsVoipSandboxChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteAppCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteAppCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteAppResponse\",\n                        ApplicationResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationResponse = deserializeAws_restJson1_1ApplicationResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteAppCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteBaiduChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteBaiduChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteBaiduChannelResponse\",\n                        BaiduChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.BaiduChannelResponse = deserializeAws_restJson1_1BaiduChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteBaiduChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteCampaignCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteCampaignCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteCampaignResponse\",\n                        CampaignResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteCampaignCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteEmailChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteEmailChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteEmailChannelResponse\",\n                        EmailChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EmailChannelResponse = deserializeAws_restJson1_1EmailChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteEmailChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteEmailTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteEmailTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteEmailTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteEmailTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteEndpointCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteEndpointCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteEndpointResponse\",\n                        EndpointResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EndpointResponse = deserializeAws_restJson1_1EndpointResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteEndpointCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteEventStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteEventStreamCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteEventStreamResponse\",\n                        EventStream: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EventStream = deserializeAws_restJson1_1EventStream(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteEventStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteGcmChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteGcmChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteGcmChannelResponse\",\n                        GCMChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.GCMChannelResponse = deserializeAws_restJson1_1GCMChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteGcmChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteJourneyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteJourneyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteJourneyResponse\",\n                        JourneyResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteJourneyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeletePushTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeletePushTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeletePushTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeletePushTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteSegmentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteSegmentCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteSegmentResponse\",\n                        SegmentResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteSegmentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteSmsChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteSmsChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteSmsChannelResponse\",\n                        SMSChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SMSChannelResponse = deserializeAws_restJson1_1SMSChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteSmsChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteSmsTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteSmsTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteSmsTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteSmsTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteUserEndpointsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteUserEndpointsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteUserEndpointsResponse\",\n                        EndpointsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EndpointsResponse = deserializeAws_restJson1_1EndpointsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteUserEndpointsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteVoiceChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteVoiceChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteVoiceChannelResponse\",\n                        VoiceChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.VoiceChannelResponse = deserializeAws_restJson1_1VoiceChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteVoiceChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1DeleteVoiceTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1DeleteVoiceTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"DeleteVoiceTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1DeleteVoiceTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetAdmChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetAdmChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetAdmChannelResponse\",\n                        ADMChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ADMChannelResponse = deserializeAws_restJson1_1ADMChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetAdmChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetApnsChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetApnsChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetApnsChannelResponse\",\n                        APNSChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSChannelResponse = deserializeAws_restJson1_1APNSChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetApnsChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetApnsSandboxChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetApnsSandboxChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetApnsSandboxChannelResponse\",\n                        APNSSandboxChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSSandboxChannelResponse = deserializeAws_restJson1_1APNSSandboxChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetApnsSandboxChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetApnsVoipChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetApnsVoipChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetApnsVoipChannelResponse\",\n                        APNSVoipChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSVoipChannelResponse = deserializeAws_restJson1_1APNSVoipChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetApnsVoipChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetApnsVoipSandboxChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetApnsVoipSandboxChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetApnsVoipSandboxChannelResponse\",\n                        APNSVoipSandboxChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1_1APNSVoipSandboxChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetApnsVoipSandboxChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetAppCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetAppCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetAppResponse\",\n                        ApplicationResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationResponse = deserializeAws_restJson1_1ApplicationResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetAppCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetApplicationDateRangeKpiCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetApplicationDateRangeKpiCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetApplicationDateRangeKpiResponse\",\n                        ApplicationDateRangeKpiResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1_1ApplicationDateRangeKpiResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetApplicationDateRangeKpiCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetApplicationSettingsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetApplicationSettingsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetApplicationSettingsResponse\",\n                        ApplicationSettingsResource: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationSettingsResource = deserializeAws_restJson1_1ApplicationSettingsResource(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetApplicationSettingsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetAppsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetAppsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetAppsResponse\",\n                        ApplicationsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationsResponse = deserializeAws_restJson1_1ApplicationsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetAppsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetBaiduChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetBaiduChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetBaiduChannelResponse\",\n                        BaiduChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.BaiduChannelResponse = deserializeAws_restJson1_1BaiduChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetBaiduChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetCampaignCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetCampaignCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetCampaignResponse\",\n                        CampaignResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetCampaignCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetCampaignActivitiesCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetCampaignActivitiesCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetCampaignActivitiesResponse\",\n                        ActivitiesResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ActivitiesResponse = deserializeAws_restJson1_1ActivitiesResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetCampaignActivitiesCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetCampaignDateRangeKpiCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetCampaignDateRangeKpiCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetCampaignDateRangeKpiResponse\",\n                        CampaignDateRangeKpiResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1_1CampaignDateRangeKpiResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetCampaignDateRangeKpiCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetCampaignVersionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetCampaignVersionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetCampaignVersionResponse\",\n                        CampaignResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetCampaignVersionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetCampaignVersionsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetCampaignVersionsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetCampaignVersionsResponse\",\n                        CampaignsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignsResponse = deserializeAws_restJson1_1CampaignsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetCampaignVersionsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetCampaignsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetCampaignsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetCampaignsResponse\",\n                        CampaignsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignsResponse = deserializeAws_restJson1_1CampaignsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetCampaignsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetChannelsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetChannelsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetChannelsResponse\",\n                        ChannelsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ChannelsResponse = deserializeAws_restJson1_1ChannelsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetChannelsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetEmailChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetEmailChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetEmailChannelResponse\",\n                        EmailChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EmailChannelResponse = deserializeAws_restJson1_1EmailChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetEmailChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetEmailTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetEmailTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetEmailTemplateResponse\",\n                        EmailTemplateResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EmailTemplateResponse = deserializeAws_restJson1_1EmailTemplateResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetEmailTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetEndpointCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetEndpointCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetEndpointResponse\",\n                        EndpointResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EndpointResponse = deserializeAws_restJson1_1EndpointResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetEndpointCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetEventStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetEventStreamCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetEventStreamResponse\",\n                        EventStream: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EventStream = deserializeAws_restJson1_1EventStream(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetEventStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetExportJobCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetExportJobCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetExportJobResponse\",\n                        ExportJobResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ExportJobResponse = deserializeAws_restJson1_1ExportJobResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetExportJobCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetExportJobsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetExportJobsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetExportJobsResponse\",\n                        ExportJobsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ExportJobsResponse = deserializeAws_restJson1_1ExportJobsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetExportJobsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetGcmChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetGcmChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetGcmChannelResponse\",\n                        GCMChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.GCMChannelResponse = deserializeAws_restJson1_1GCMChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetGcmChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetImportJobCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetImportJobCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetImportJobResponse\",\n                        ImportJobResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ImportJobResponse = deserializeAws_restJson1_1ImportJobResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetImportJobCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetImportJobsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetImportJobsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetImportJobsResponse\",\n                        ImportJobsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ImportJobsResponse = deserializeAws_restJson1_1ImportJobsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetImportJobsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetJourneyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetJourneyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetJourneyResponse\",\n                        JourneyResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetJourneyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetJourneyDateRangeKpiCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetJourneyDateRangeKpiCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetJourneyDateRangeKpiResponse\",\n                        JourneyDateRangeKpiResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1_1JourneyDateRangeKpiResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetJourneyDateRangeKpiCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetJourneyExecutionActivityMetricsResponse\",\n                        JourneyExecutionActivityMetricsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1_1JourneyExecutionActivityMetricsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetJourneyExecutionActivityMetricsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetJourneyExecutionMetricsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetJourneyExecutionMetricsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetJourneyExecutionMetricsResponse\",\n                        JourneyExecutionMetricsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1_1JourneyExecutionMetricsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetJourneyExecutionMetricsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetPushTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetPushTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetPushTemplateResponse\",\n                        PushNotificationTemplateResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.PushNotificationTemplateResponse = deserializeAws_restJson1_1PushNotificationTemplateResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetPushTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSegmentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSegmentCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSegmentResponse\",\n                        SegmentResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSegmentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSegmentExportJobsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSegmentExportJobsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSegmentExportJobsResponse\",\n                        ExportJobsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ExportJobsResponse = deserializeAws_restJson1_1ExportJobsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSegmentExportJobsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSegmentImportJobsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSegmentImportJobsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSegmentImportJobsResponse\",\n                        ImportJobsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ImportJobsResponse = deserializeAws_restJson1_1ImportJobsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSegmentImportJobsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSegmentVersionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSegmentVersionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSegmentVersionResponse\",\n                        SegmentResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSegmentVersionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSegmentVersionsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSegmentVersionsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSegmentVersionsResponse\",\n                        SegmentsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentsResponse = deserializeAws_restJson1_1SegmentsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSegmentVersionsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSegmentsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSegmentsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSegmentsResponse\",\n                        SegmentsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentsResponse = deserializeAws_restJson1_1SegmentsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSegmentsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSmsChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSmsChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSmsChannelResponse\",\n                        SMSChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SMSChannelResponse = deserializeAws_restJson1_1SMSChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSmsChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetSmsTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetSmsTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetSmsTemplateResponse\",\n                        SMSTemplateResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SMSTemplateResponse = deserializeAws_restJson1_1SMSTemplateResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetSmsTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetUserEndpointsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetUserEndpointsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetUserEndpointsResponse\",\n                        EndpointsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EndpointsResponse = deserializeAws_restJson1_1EndpointsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetUserEndpointsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetVoiceChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetVoiceChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetVoiceChannelResponse\",\n                        VoiceChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.VoiceChannelResponse = deserializeAws_restJson1_1VoiceChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetVoiceChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1GetVoiceTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1GetVoiceTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"GetVoiceTemplateResponse\",\n                        VoiceTemplateResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.VoiceTemplateResponse = deserializeAws_restJson1_1VoiceTemplateResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1GetVoiceTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1ListJourneysCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1ListJourneysCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListJourneysResponse\",\n                        JourneysResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneysResponse = deserializeAws_restJson1_1JourneysResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1ListJourneysCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1ListTagsForResourceCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1ListTagsForResourceCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListTagsForResourceResponse\",\n                        TagsModel: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.TagsModel = deserializeAws_restJson1_1TagsModel(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1ListTagsForResourceCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1ListTemplateVersionsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1ListTemplateVersionsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListTemplateVersionsResponse\",\n                        TemplateVersionsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.TemplateVersionsResponse = deserializeAws_restJson1_1TemplateVersionsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1ListTemplateVersionsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1ListTemplatesCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1ListTemplatesCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"ListTemplatesResponse\",\n                        TemplatesResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.TemplatesResponse = deserializeAws_restJson1_1TemplatesResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1ListTemplatesCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1PhoneNumberValidateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1PhoneNumberValidateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PhoneNumberValidateResponse\",\n                        NumberValidateResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.NumberValidateResponse = deserializeAws_restJson1_1NumberValidateResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1PhoneNumberValidateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1PutEventStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1PutEventStreamCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutEventStreamResponse\",\n                        EventStream: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EventStream = deserializeAws_restJson1_1EventStream(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1PutEventStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1PutEventsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1PutEventsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"PutEventsResponse\",\n                        EventsResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EventsResponse = deserializeAws_restJson1_1EventsResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1PutEventsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1RemoveAttributesCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1RemoveAttributesCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"RemoveAttributesResponse\",\n                        AttributesResource: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.AttributesResource = deserializeAws_restJson1_1AttributesResource(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1RemoveAttributesCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1SendMessagesCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1SendMessagesCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"SendMessagesResponse\",\n                        MessageResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageResponse = deserializeAws_restJson1_1MessageResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1SendMessagesCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1SendUsersMessagesCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1SendUsersMessagesCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"SendUsersMessagesResponse\",\n                        SendUsersMessageResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SendUsersMessageResponse = deserializeAws_restJson1_1SendUsersMessageResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1SendUsersMessagesCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1TagResourceCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1TagResourceCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1TagResourceCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UntagResourceCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 204 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UntagResourceCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UntagResourceCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    switch (errorCode) {\n                        default:\n                            parsedBody = parsedOutput.body;\n                            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                            response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    }\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateAdmChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateAdmChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateAdmChannelResponse\",\n                        ADMChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ADMChannelResponse = deserializeAws_restJson1_1ADMChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateAdmChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateApnsChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateApnsChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateApnsChannelResponse\",\n                        APNSChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSChannelResponse = deserializeAws_restJson1_1APNSChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateApnsChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateApnsSandboxChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateApnsSandboxChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateApnsSandboxChannelResponse\",\n                        APNSSandboxChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSSandboxChannelResponse = deserializeAws_restJson1_1APNSSandboxChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateApnsSandboxChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateApnsVoipChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateApnsVoipChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateApnsVoipChannelResponse\",\n                        APNSVoipChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSVoipChannelResponse = deserializeAws_restJson1_1APNSVoipChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateApnsVoipChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateApnsVoipSandboxChannelResponse\",\n                        APNSVoipSandboxChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1_1APNSVoipSandboxChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateApnsVoipSandboxChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateApplicationSettingsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateApplicationSettingsCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateApplicationSettingsResponse\",\n                        ApplicationSettingsResource: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.ApplicationSettingsResource = deserializeAws_restJson1_1ApplicationSettingsResource(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateApplicationSettingsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateBaiduChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateBaiduChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateBaiduChannelResponse\",\n                        BaiduChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.BaiduChannelResponse = deserializeAws_restJson1_1BaiduChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateBaiduChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateCampaignCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateCampaignCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateCampaignResponse\",\n                        CampaignResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.CampaignResponse = deserializeAws_restJson1_1CampaignResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateCampaignCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateEmailChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateEmailChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateEmailChannelResponse\",\n                        EmailChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.EmailChannelResponse = deserializeAws_restJson1_1EmailChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateEmailChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateEmailTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateEmailTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateEmailTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateEmailTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateEndpointCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateEndpointCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateEndpointResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateEndpointCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateEndpointsBatchCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateEndpointsBatchCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateEndpointsBatchResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateEndpointsBatchCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateGcmChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateGcmChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateGcmChannelResponse\",\n                        GCMChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.GCMChannelResponse = deserializeAws_restJson1_1GCMChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateGcmChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateJourneyCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateJourneyCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateJourneyResponse\",\n                        JourneyResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateJourneyCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateJourneyStateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateJourneyStateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateJourneyStateResponse\",\n                        JourneyResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.JourneyResponse = deserializeAws_restJson1_1JourneyResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateJourneyStateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdatePushTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdatePushTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdatePushTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdatePushTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateSegmentCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateSegmentCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateSegmentResponse\",\n                        SegmentResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SegmentResponse = deserializeAws_restJson1_1SegmentResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateSegmentCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateSmsChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateSmsChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateSmsChannelResponse\",\n                        SMSChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.SMSChannelResponse = deserializeAws_restJson1_1SMSChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateSmsChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateSmsTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateSmsTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateSmsTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateSmsTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateTemplateActiveVersionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateTemplateActiveVersionCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateTemplateActiveVersionResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateTemplateActiveVersionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateVoiceChannelCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 200 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateVoiceChannelCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateVoiceChannelResponse\",\n                        VoiceChannelResponse: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.VoiceChannelResponse = deserializeAws_restJson1_1VoiceChannelResponse(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateVoiceChannelCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_restJson1_1UpdateVoiceTemplateCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contents, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode !== 202 && output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_restJson1_1UpdateVoiceTemplateCommandError(output, context)];\n                    }\n                    contents = {\n                        $metadata: deserializeMetadata(output),\n                        __type: \"UpdateVoiceTemplateResponse\",\n                        MessageBody: undefined\n                    };\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents.MessageBody = deserializeAws_restJson1_1MessageBody(data, context);\n                    return [2 /*return*/, Promise.resolve(contents)];\n            }\n        });\n    });\n}\nfunction deserializeAws_restJson1_1UpdateVoiceTemplateCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"BadRequestException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.pinpoint#BadRequestException\": return [3 /*break*/, 2];\n                        case \"ForbiddenException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.pinpoint#ForbiddenException\": return [3 /*break*/, 4];\n                        case \"InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.pinpoint#InternalServerErrorException\": return [3 /*break*/, 6];\n                        case \"MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.pinpoint#MethodNotAllowedException\": return [3 /*break*/, 8];\n                        case \"NotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.pinpoint#NotFoundException\": return [3 /*break*/, 10];\n                        case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.pinpoint#TooManyRequestsException\": return [3 /*break*/, 12];\n                    }\n                    return [3 /*break*/, 14];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1BadRequestExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1ForbiddenExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1InternalServerErrorExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1NotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_restJson1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 15];\n                case 14:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _k.label = 15;\n                case 15:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nvar deserializeAws_restJson1_1BadRequestExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BadRequestException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n            RequestID: undefined\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        if (data.RequestID !== undefined && data.RequestID !== null) {\n            contents.RequestID = data.RequestID;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1_1ForbiddenExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ForbiddenException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n            RequestID: undefined\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        if (data.RequestID !== undefined && data.RequestID !== null) {\n            contents.RequestID = data.RequestID;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1_1InternalServerErrorExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InternalServerErrorException\",\n            $fault: \"server\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n            RequestID: undefined\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        if (data.RequestID !== undefined && data.RequestID !== null) {\n            contents.RequestID = data.RequestID;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1_1MethodNotAllowedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"MethodNotAllowedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n            RequestID: undefined\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        if (data.RequestID !== undefined && data.RequestID !== null) {\n            contents.RequestID = data.RequestID;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1_1NotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NotFoundException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n            RequestID: undefined\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        if (data.RequestID !== undefined && data.RequestID !== null) {\n            contents.RequestID = data.RequestID;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n            RequestID: undefined\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        if (data.RequestID !== undefined && data.RequestID !== null) {\n            contents.RequestID = data.RequestID;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_restJson1_1ADMChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.ClientId !== undefined) {\n        bodyParams[\"ClientId\"] = input.ClientId;\n    }\n    if (input.ClientSecret !== undefined) {\n        bodyParams[\"ClientSecret\"] = input.ClientSecret;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1ADMMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.ConsolidationKey !== undefined) {\n        bodyParams[\"ConsolidationKey\"] = input.ConsolidationKey;\n    }\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n    }\n    if (input.ExpiresAfter !== undefined) {\n        bodyParams[\"ExpiresAfter\"] = input.ExpiresAfter;\n    }\n    if (input.IconReference !== undefined) {\n        bodyParams[\"IconReference\"] = input.IconReference;\n    }\n    if (input.ImageIconUrl !== undefined) {\n        bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n    }\n    if (input.ImageUrl !== undefined) {\n        bodyParams[\"ImageUrl\"] = input.ImageUrl;\n    }\n    if (input.MD5 !== undefined) {\n        bodyParams[\"MD5\"] = input.MD5;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.SilentPush !== undefined) {\n        bodyParams[\"SilentPush\"] = input.SilentPush;\n    }\n    if (input.SmallImageIconUrl !== undefined) {\n        bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1APNSChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.BundleId !== undefined) {\n        bodyParams[\"BundleId\"] = input.BundleId;\n    }\n    if (input.Certificate !== undefined) {\n        bodyParams[\"Certificate\"] = input.Certificate;\n    }\n    if (input.DefaultAuthenticationMethod !== undefined) {\n        bodyParams[\"DefaultAuthenticationMethod\"] =\n            input.DefaultAuthenticationMethod;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.PrivateKey !== undefined) {\n        bodyParams[\"PrivateKey\"] = input.PrivateKey;\n    }\n    if (input.TeamId !== undefined) {\n        bodyParams[\"TeamId\"] = input.TeamId;\n    }\n    if (input.TokenKey !== undefined) {\n        bodyParams[\"TokenKey\"] = input.TokenKey;\n    }\n    if (input.TokenKeyId !== undefined) {\n        bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1APNSMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.APNSPushType !== undefined) {\n        bodyParams[\"APNSPushType\"] = input.APNSPushType;\n    }\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Badge !== undefined) {\n        bodyParams[\"Badge\"] = input.Badge;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.Category !== undefined) {\n        bodyParams[\"Category\"] = input.Category;\n    }\n    if (input.CollapseId !== undefined) {\n        bodyParams[\"CollapseId\"] = input.CollapseId;\n    }\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n    }\n    if (input.MediaUrl !== undefined) {\n        bodyParams[\"MediaUrl\"] = input.MediaUrl;\n    }\n    if (input.PreferredAuthenticationMethod !== undefined) {\n        bodyParams[\"PreferredAuthenticationMethod\"] =\n            input.PreferredAuthenticationMethod;\n    }\n    if (input.Priority !== undefined) {\n        bodyParams[\"Priority\"] = input.Priority;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.SilentPush !== undefined) {\n        bodyParams[\"SilentPush\"] = input.SilentPush;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.ThreadId !== undefined) {\n        bodyParams[\"ThreadId\"] = input.ThreadId;\n    }\n    if (input.TimeToLive !== undefined) {\n        bodyParams[\"TimeToLive\"] = input.TimeToLive;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1APNSPushNotificationTemplate = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.MediaUrl !== undefined) {\n        bodyParams[\"MediaUrl\"] = input.MediaUrl;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1APNSSandboxChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.BundleId !== undefined) {\n        bodyParams[\"BundleId\"] = input.BundleId;\n    }\n    if (input.Certificate !== undefined) {\n        bodyParams[\"Certificate\"] = input.Certificate;\n    }\n    if (input.DefaultAuthenticationMethod !== undefined) {\n        bodyParams[\"DefaultAuthenticationMethod\"] =\n            input.DefaultAuthenticationMethod;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.PrivateKey !== undefined) {\n        bodyParams[\"PrivateKey\"] = input.PrivateKey;\n    }\n    if (input.TeamId !== undefined) {\n        bodyParams[\"TeamId\"] = input.TeamId;\n    }\n    if (input.TokenKey !== undefined) {\n        bodyParams[\"TokenKey\"] = input.TokenKey;\n    }\n    if (input.TokenKeyId !== undefined) {\n        bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1APNSVoipChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.BundleId !== undefined) {\n        bodyParams[\"BundleId\"] = input.BundleId;\n    }\n    if (input.Certificate !== undefined) {\n        bodyParams[\"Certificate\"] = input.Certificate;\n    }\n    if (input.DefaultAuthenticationMethod !== undefined) {\n        bodyParams[\"DefaultAuthenticationMethod\"] =\n            input.DefaultAuthenticationMethod;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.PrivateKey !== undefined) {\n        bodyParams[\"PrivateKey\"] = input.PrivateKey;\n    }\n    if (input.TeamId !== undefined) {\n        bodyParams[\"TeamId\"] = input.TeamId;\n    }\n    if (input.TokenKey !== undefined) {\n        bodyParams[\"TokenKey\"] = input.TokenKey;\n    }\n    if (input.TokenKeyId !== undefined) {\n        bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1APNSVoipSandboxChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.BundleId !== undefined) {\n        bodyParams[\"BundleId\"] = input.BundleId;\n    }\n    if (input.Certificate !== undefined) {\n        bodyParams[\"Certificate\"] = input.Certificate;\n    }\n    if (input.DefaultAuthenticationMethod !== undefined) {\n        bodyParams[\"DefaultAuthenticationMethod\"] =\n            input.DefaultAuthenticationMethod;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.PrivateKey !== undefined) {\n        bodyParams[\"PrivateKey\"] = input.PrivateKey;\n    }\n    if (input.TeamId !== undefined) {\n        bodyParams[\"TeamId\"] = input.TeamId;\n    }\n    if (input.TokenKey !== undefined) {\n        bodyParams[\"TokenKey\"] = input.TokenKey;\n    }\n    if (input.TokenKeyId !== undefined) {\n        bodyParams[\"TokenKeyId\"] = input.TokenKeyId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1Activity = function (input, context) {\n    var bodyParams = {};\n    if (input.ConditionalSplit !== undefined) {\n        bodyParams[\"ConditionalSplit\"] = serializeAws_restJson1_1ConditionalSplitActivity(input.ConditionalSplit, context);\n    }\n    if (input.Description !== undefined) {\n        bodyParams[\"Description\"] = input.Description;\n    }\n    if (input.EMAIL !== undefined) {\n        bodyParams[\"EMAIL\"] = serializeAws_restJson1_1EmailMessageActivity(input.EMAIL, context);\n    }\n    if (input.Holdout !== undefined) {\n        bodyParams[\"Holdout\"] = serializeAws_restJson1_1HoldoutActivity(input.Holdout, context);\n    }\n    if (input.MultiCondition !== undefined) {\n        bodyParams[\"MultiCondition\"] = serializeAws_restJson1_1MultiConditionalSplitActivity(input.MultiCondition, context);\n    }\n    if (input.RandomSplit !== undefined) {\n        bodyParams[\"RandomSplit\"] = serializeAws_restJson1_1RandomSplitActivity(input.RandomSplit, context);\n    }\n    if (input.Wait !== undefined) {\n        bodyParams[\"Wait\"] = serializeAws_restJson1_1WaitActivity(input.Wait, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1AddressConfiguration = function (input, context) {\n    var bodyParams = {};\n    if (input.BodyOverride !== undefined) {\n        bodyParams[\"BodyOverride\"] = input.BodyOverride;\n    }\n    if (input.ChannelType !== undefined) {\n        bodyParams[\"ChannelType\"] = input.ChannelType;\n    }\n    if (input.Context !== undefined) {\n        bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.TitleOverride !== undefined) {\n        bodyParams[\"TitleOverride\"] = input.TitleOverride;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1AndroidPushNotificationTemplate = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.ImageIconUrl !== undefined) {\n        bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n    }\n    if (input.ImageUrl !== undefined) {\n        bodyParams[\"ImageUrl\"] = input.ImageUrl;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.SmallImageIconUrl !== undefined) {\n        bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1AttributeDimension = function (input, context) {\n    var bodyParams = {};\n    if (input.AttributeType !== undefined) {\n        bodyParams[\"AttributeType\"] = input.AttributeType;\n    }\n    if (input.Values !== undefined) {\n        bodyParams[\"Values\"] = serializeAws_restJson1_1ListOf__string(input.Values, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1BaiduChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.ApiKey !== undefined) {\n        bodyParams[\"ApiKey\"] = input.ApiKey;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.SecretKey !== undefined) {\n        bodyParams[\"SecretKey\"] = input.SecretKey;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1BaiduMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n    }\n    if (input.IconReference !== undefined) {\n        bodyParams[\"IconReference\"] = input.IconReference;\n    }\n    if (input.ImageIconUrl !== undefined) {\n        bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n    }\n    if (input.ImageUrl !== undefined) {\n        bodyParams[\"ImageUrl\"] = input.ImageUrl;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.SilentPush !== undefined) {\n        bodyParams[\"SilentPush\"] = input.SilentPush;\n    }\n    if (input.SmallImageIconUrl !== undefined) {\n        bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.TimeToLive !== undefined) {\n        bodyParams[\"TimeToLive\"] = input.TimeToLive;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1CampaignEmailMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.FromAddress !== undefined) {\n        bodyParams[\"FromAddress\"] = input.FromAddress;\n    }\n    if (input.HtmlBody !== undefined) {\n        bodyParams[\"HtmlBody\"] = input.HtmlBody;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1CampaignEventFilter = function (input, context) {\n    var bodyParams = {};\n    if (input.Dimensions !== undefined) {\n        bodyParams[\"Dimensions\"] = serializeAws_restJson1_1EventDimensions(input.Dimensions, context);\n    }\n    if (input.FilterType !== undefined) {\n        bodyParams[\"FilterType\"] = input.FilterType;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1CampaignHook = function (input, context) {\n    var bodyParams = {};\n    if (input.LambdaFunctionName !== undefined) {\n        bodyParams[\"LambdaFunctionName\"] = input.LambdaFunctionName;\n    }\n    if (input.Mode !== undefined) {\n        bodyParams[\"Mode\"] = input.Mode;\n    }\n    if (input.WebUrl !== undefined) {\n        bodyParams[\"WebUrl\"] = input.WebUrl;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1CampaignLimits = function (input, context) {\n    var bodyParams = {};\n    if (input.Daily !== undefined) {\n        bodyParams[\"Daily\"] = input.Daily;\n    }\n    if (input.MaximumDuration !== undefined) {\n        bodyParams[\"MaximumDuration\"] = input.MaximumDuration;\n    }\n    if (input.MessagesPerSecond !== undefined) {\n        bodyParams[\"MessagesPerSecond\"] = input.MessagesPerSecond;\n    }\n    if (input.Total !== undefined) {\n        bodyParams[\"Total\"] = input.Total;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1CampaignSmsMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.MessageType !== undefined) {\n        bodyParams[\"MessageType\"] = input.MessageType;\n    }\n    if (input.SenderId !== undefined) {\n        bodyParams[\"SenderId\"] = input.SenderId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1Condition = function (input, context) {\n    var bodyParams = {};\n    if (input.Conditions !== undefined) {\n        bodyParams[\"Conditions\"] = serializeAws_restJson1_1ListOfSimpleCondition(input.Conditions, context);\n    }\n    if (input.Operator !== undefined) {\n        bodyParams[\"Operator\"] = input.Operator;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1ConditionalSplitActivity = function (input, context) {\n    var bodyParams = {};\n    if (input.Condition !== undefined) {\n        bodyParams[\"Condition\"] = serializeAws_restJson1_1Condition(input.Condition, context);\n    }\n    if (input.EvaluationWaitTime !== undefined) {\n        bodyParams[\"EvaluationWaitTime\"] = serializeAws_restJson1_1WaitTime(input.EvaluationWaitTime, context);\n    }\n    if (input.FalseActivity !== undefined) {\n        bodyParams[\"FalseActivity\"] = input.FalseActivity;\n    }\n    if (input.TrueActivity !== undefined) {\n        bodyParams[\"TrueActivity\"] = input.TrueActivity;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1CreateApplicationRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Name !== undefined) {\n        bodyParams[\"Name\"] = input.Name;\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1DefaultMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1DefaultPushNotificationMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n    }\n    if (input.SilentPush !== undefined) {\n        bodyParams[\"SilentPush\"] = input.SilentPush;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1DefaultPushNotificationTemplate = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1DirectMessageConfiguration = function (input, context) {\n    var bodyParams = {};\n    if (input.ADMMessage !== undefined) {\n        bodyParams[\"ADMMessage\"] = serializeAws_restJson1_1ADMMessage(input.ADMMessage, context);\n    }\n    if (input.APNSMessage !== undefined) {\n        bodyParams[\"APNSMessage\"] = serializeAws_restJson1_1APNSMessage(input.APNSMessage, context);\n    }\n    if (input.BaiduMessage !== undefined) {\n        bodyParams[\"BaiduMessage\"] = serializeAws_restJson1_1BaiduMessage(input.BaiduMessage, context);\n    }\n    if (input.DefaultMessage !== undefined) {\n        bodyParams[\"DefaultMessage\"] = serializeAws_restJson1_1DefaultMessage(input.DefaultMessage, context);\n    }\n    if (input.DefaultPushNotificationMessage !== undefined) {\n        bodyParams[\"DefaultPushNotificationMessage\"] = serializeAws_restJson1_1DefaultPushNotificationMessage(input.DefaultPushNotificationMessage, context);\n    }\n    if (input.EmailMessage !== undefined) {\n        bodyParams[\"EmailMessage\"] = serializeAws_restJson1_1EmailMessage(input.EmailMessage, context);\n    }\n    if (input.GCMMessage !== undefined) {\n        bodyParams[\"GCMMessage\"] = serializeAws_restJson1_1GCMMessage(input.GCMMessage, context);\n    }\n    if (input.SMSMessage !== undefined) {\n        bodyParams[\"SMSMessage\"] = serializeAws_restJson1_1SMSMessage(input.SMSMessage, context);\n    }\n    if (input.VoiceMessage !== undefined) {\n        bodyParams[\"VoiceMessage\"] = serializeAws_restJson1_1VoiceMessage(input.VoiceMessage, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EmailChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.ConfigurationSet !== undefined) {\n        bodyParams[\"ConfigurationSet\"] = input.ConfigurationSet;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.FromAddress !== undefined) {\n        bodyParams[\"FromAddress\"] = input.FromAddress;\n    }\n    if (input.Identity !== undefined) {\n        bodyParams[\"Identity\"] = input.Identity;\n    }\n    if (input.RoleArn !== undefined) {\n        bodyParams[\"RoleArn\"] = input.RoleArn;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EmailMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.FeedbackForwardingAddress !== undefined) {\n        bodyParams[\"FeedbackForwardingAddress\"] = input.FeedbackForwardingAddress;\n    }\n    if (input.FromAddress !== undefined) {\n        bodyParams[\"FromAddress\"] = input.FromAddress;\n    }\n    if (input.RawEmail !== undefined) {\n        bodyParams[\"RawEmail\"] = serializeAws_restJson1_1RawEmail(input.RawEmail, context);\n    }\n    if (input.ReplyToAddresses !== undefined) {\n        bodyParams[\"ReplyToAddresses\"] = serializeAws_restJson1_1ListOf__string(input.ReplyToAddresses, context);\n    }\n    if (input.SimpleEmail !== undefined) {\n        bodyParams[\"SimpleEmail\"] = serializeAws_restJson1_1SimpleEmail(input.SimpleEmail, context);\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EmailMessageActivity = function (input, context) {\n    var bodyParams = {};\n    if (input.MessageConfig !== undefined) {\n        bodyParams[\"MessageConfig\"] = serializeAws_restJson1_1JourneyEmailMessage(input.MessageConfig, context);\n    }\n    if (input.NextActivity !== undefined) {\n        bodyParams[\"NextActivity\"] = input.NextActivity;\n    }\n    if (input.TemplateName !== undefined) {\n        bodyParams[\"TemplateName\"] = input.TemplateName;\n    }\n    if (input.TemplateVersion !== undefined) {\n        bodyParams[\"TemplateVersion\"] = input.TemplateVersion;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EmailTemplateRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.DefaultSubstitutions !== undefined) {\n        bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n    }\n    if (input.HtmlPart !== undefined) {\n        bodyParams[\"HtmlPart\"] = input.HtmlPart;\n    }\n    if (input.Subject !== undefined) {\n        bodyParams[\"Subject\"] = input.Subject;\n    }\n    if (input.TemplateDescription !== undefined) {\n        bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n    }\n    if (input.TextPart !== undefined) {\n        bodyParams[\"TextPart\"] = input.TextPart;\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointBatchItem = function (input, context) {\n    var bodyParams = {};\n    if (input.Address !== undefined) {\n        bodyParams[\"Address\"] = input.Address;\n    }\n    if (input.Attributes !== undefined) {\n        bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.Attributes, context);\n    }\n    if (input.ChannelType !== undefined) {\n        bodyParams[\"ChannelType\"] = input.ChannelType;\n    }\n    if (input.Demographic !== undefined) {\n        bodyParams[\"Demographic\"] = serializeAws_restJson1_1EndpointDemographic(input.Demographic, context);\n    }\n    if (input.EffectiveDate !== undefined) {\n        bodyParams[\"EffectiveDate\"] = input.EffectiveDate;\n    }\n    if (input.EndpointStatus !== undefined) {\n        bodyParams[\"EndpointStatus\"] = input.EndpointStatus;\n    }\n    if (input.Id !== undefined) {\n        bodyParams[\"Id\"] = input.Id;\n    }\n    if (input.Location !== undefined) {\n        bodyParams[\"Location\"] = serializeAws_restJson1_1EndpointLocation(input.Location, context);\n    }\n    if (input.Metrics !== undefined) {\n        bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n    }\n    if (input.OptOut !== undefined) {\n        bodyParams[\"OptOut\"] = input.OptOut;\n    }\n    if (input.RequestId !== undefined) {\n        bodyParams[\"RequestId\"] = input.RequestId;\n    }\n    if (input.User !== undefined) {\n        bodyParams[\"User\"] = serializeAws_restJson1_1EndpointUser(input.User, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointBatchRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Item !== undefined) {\n        bodyParams[\"Item\"] = serializeAws_restJson1_1ListOfEndpointBatchItem(input.Item, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointDemographic = function (input, context) {\n    var bodyParams = {};\n    if (input.AppVersion !== undefined) {\n        bodyParams[\"AppVersion\"] = input.AppVersion;\n    }\n    if (input.Locale !== undefined) {\n        bodyParams[\"Locale\"] = input.Locale;\n    }\n    if (input.Make !== undefined) {\n        bodyParams[\"Make\"] = input.Make;\n    }\n    if (input.Model !== undefined) {\n        bodyParams[\"Model\"] = input.Model;\n    }\n    if (input.ModelVersion !== undefined) {\n        bodyParams[\"ModelVersion\"] = input.ModelVersion;\n    }\n    if (input.Platform !== undefined) {\n        bodyParams[\"Platform\"] = input.Platform;\n    }\n    if (input.PlatformVersion !== undefined) {\n        bodyParams[\"PlatformVersion\"] = input.PlatformVersion;\n    }\n    if (input.Timezone !== undefined) {\n        bodyParams[\"Timezone\"] = input.Timezone;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointLocation = function (input, context) {\n    var bodyParams = {};\n    if (input.City !== undefined) {\n        bodyParams[\"City\"] = input.City;\n    }\n    if (input.Country !== undefined) {\n        bodyParams[\"Country\"] = input.Country;\n    }\n    if (input.Latitude !== undefined) {\n        bodyParams[\"Latitude\"] = input.Latitude;\n    }\n    if (input.Longitude !== undefined) {\n        bodyParams[\"Longitude\"] = input.Longitude;\n    }\n    if (input.PostalCode !== undefined) {\n        bodyParams[\"PostalCode\"] = input.PostalCode;\n    }\n    if (input.Region !== undefined) {\n        bodyParams[\"Region\"] = input.Region;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Address !== undefined) {\n        bodyParams[\"Address\"] = input.Address;\n    }\n    if (input.Attributes !== undefined) {\n        bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.Attributes, context);\n    }\n    if (input.ChannelType !== undefined) {\n        bodyParams[\"ChannelType\"] = input.ChannelType;\n    }\n    if (input.Demographic !== undefined) {\n        bodyParams[\"Demographic\"] = serializeAws_restJson1_1EndpointDemographic(input.Demographic, context);\n    }\n    if (input.EffectiveDate !== undefined) {\n        bodyParams[\"EffectiveDate\"] = input.EffectiveDate;\n    }\n    if (input.EndpointStatus !== undefined) {\n        bodyParams[\"EndpointStatus\"] = input.EndpointStatus;\n    }\n    if (input.Location !== undefined) {\n        bodyParams[\"Location\"] = serializeAws_restJson1_1EndpointLocation(input.Location, context);\n    }\n    if (input.Metrics !== undefined) {\n        bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n    }\n    if (input.OptOut !== undefined) {\n        bodyParams[\"OptOut\"] = input.OptOut;\n    }\n    if (input.RequestId !== undefined) {\n        bodyParams[\"RequestId\"] = input.RequestId;\n    }\n    if (input.User !== undefined) {\n        bodyParams[\"User\"] = serializeAws_restJson1_1EndpointUser(input.User, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointSendConfiguration = function (input, context) {\n    var bodyParams = {};\n    if (input.BodyOverride !== undefined) {\n        bodyParams[\"BodyOverride\"] = input.BodyOverride;\n    }\n    if (input.Context !== undefined) {\n        bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.TitleOverride !== undefined) {\n        bodyParams[\"TitleOverride\"] = input.TitleOverride;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EndpointUser = function (input, context) {\n    var bodyParams = {};\n    if (input.UserAttributes !== undefined) {\n        bodyParams[\"UserAttributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.UserAttributes, context);\n    }\n    if (input.UserId !== undefined) {\n        bodyParams[\"UserId\"] = input.UserId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1Event = function (input, context) {\n    var bodyParams = {};\n    if (input.AppPackageName !== undefined) {\n        bodyParams[\"AppPackageName\"] = input.AppPackageName;\n    }\n    if (input.AppTitle !== undefined) {\n        bodyParams[\"AppTitle\"] = input.AppTitle;\n    }\n    if (input.AppVersionCode !== undefined) {\n        bodyParams[\"AppVersionCode\"] = input.AppVersionCode;\n    }\n    if (input.Attributes !== undefined) {\n        bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOf__string(input.Attributes, context);\n    }\n    if (input.ClientSdkVersion !== undefined) {\n        bodyParams[\"ClientSdkVersion\"] = input.ClientSdkVersion;\n    }\n    if (input.EventType !== undefined) {\n        bodyParams[\"EventType\"] = input.EventType;\n    }\n    if (input.Metrics !== undefined) {\n        bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n    }\n    if (input.SdkName !== undefined) {\n        bodyParams[\"SdkName\"] = input.SdkName;\n    }\n    if (input.Session !== undefined) {\n        bodyParams[\"Session\"] = serializeAws_restJson1_1Session(input.Session, context);\n    }\n    if (input.Timestamp !== undefined) {\n        bodyParams[\"Timestamp\"] = input.Timestamp;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EventCondition = function (input, context) {\n    var bodyParams = {};\n    if (input.Dimensions !== undefined) {\n        bodyParams[\"Dimensions\"] = serializeAws_restJson1_1EventDimensions(input.Dimensions, context);\n    }\n    if (input.MessageActivity !== undefined) {\n        bodyParams[\"MessageActivity\"] = input.MessageActivity;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EventDimensions = function (input, context) {\n    var bodyParams = {};\n    if (input.Attributes !== undefined) {\n        bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfAttributeDimension(input.Attributes, context);\n    }\n    if (input.EventType !== undefined) {\n        bodyParams[\"EventType\"] = serializeAws_restJson1_1SetDimension(input.EventType, context);\n    }\n    if (input.Metrics !== undefined) {\n        bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOfMetricDimension(input.Metrics, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EventsBatch = function (input, context) {\n    var bodyParams = {};\n    if (input.Endpoint !== undefined) {\n        bodyParams[\"Endpoint\"] = serializeAws_restJson1_1PublicEndpoint(input.Endpoint, context);\n    }\n    if (input.Events !== undefined) {\n        bodyParams[\"Events\"] = serializeAws_restJson1_1MapOfEvent(input.Events, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1EventsRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.BatchItem !== undefined) {\n        bodyParams[\"BatchItem\"] = serializeAws_restJson1_1MapOfEventsBatch(input.BatchItem, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1ExportJobRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.RoleArn !== undefined) {\n        bodyParams[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.S3UrlPrefix !== undefined) {\n        bodyParams[\"S3UrlPrefix\"] = input.S3UrlPrefix;\n    }\n    if (input.SegmentId !== undefined) {\n        bodyParams[\"SegmentId\"] = input.SegmentId;\n    }\n    if (input.SegmentVersion !== undefined) {\n        bodyParams[\"SegmentVersion\"] = input.SegmentVersion;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1GCMChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.ApiKey !== undefined) {\n        bodyParams[\"ApiKey\"] = input.ApiKey;\n    }\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1GCMMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.CollapseKey !== undefined) {\n        bodyParams[\"CollapseKey\"] = input.CollapseKey;\n    }\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = serializeAws_restJson1_1MapOf__string(input.Data, context);\n    }\n    if (input.IconReference !== undefined) {\n        bodyParams[\"IconReference\"] = input.IconReference;\n    }\n    if (input.ImageIconUrl !== undefined) {\n        bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n    }\n    if (input.ImageUrl !== undefined) {\n        bodyParams[\"ImageUrl\"] = input.ImageUrl;\n    }\n    if (input.Priority !== undefined) {\n        bodyParams[\"Priority\"] = input.Priority;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.RestrictedPackageName !== undefined) {\n        bodyParams[\"RestrictedPackageName\"] = input.RestrictedPackageName;\n    }\n    if (input.SilentPush !== undefined) {\n        bodyParams[\"SilentPush\"] = input.SilentPush;\n    }\n    if (input.SmallImageIconUrl !== undefined) {\n        bodyParams[\"SmallImageIconUrl\"] = input.SmallImageIconUrl;\n    }\n    if (input.Sound !== undefined) {\n        bodyParams[\"Sound\"] = input.Sound;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.TimeToLive !== undefined) {\n        bodyParams[\"TimeToLive\"] = input.TimeToLive;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1GPSCoordinates = function (input, context) {\n    var bodyParams = {};\n    if (input.Latitude !== undefined) {\n        bodyParams[\"Latitude\"] = input.Latitude;\n    }\n    if (input.Longitude !== undefined) {\n        bodyParams[\"Longitude\"] = input.Longitude;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1GPSPointDimension = function (input, context) {\n    var bodyParams = {};\n    if (input.Coordinates !== undefined) {\n        bodyParams[\"Coordinates\"] = serializeAws_restJson1_1GPSCoordinates(input.Coordinates, context);\n    }\n    if (input.RangeInKilometers !== undefined) {\n        bodyParams[\"RangeInKilometers\"] = input.RangeInKilometers;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1HoldoutActivity = function (input, context) {\n    var bodyParams = {};\n    if (input.NextActivity !== undefined) {\n        bodyParams[\"NextActivity\"] = input.NextActivity;\n    }\n    if (input.Percentage !== undefined) {\n        bodyParams[\"Percentage\"] = input.Percentage;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1ImportJobRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.DefineSegment !== undefined) {\n        bodyParams[\"DefineSegment\"] = input.DefineSegment;\n    }\n    if (input.ExternalId !== undefined) {\n        bodyParams[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.Format !== undefined) {\n        bodyParams[\"Format\"] = input.Format;\n    }\n    if (input.RegisterEndpoints !== undefined) {\n        bodyParams[\"RegisterEndpoints\"] = input.RegisterEndpoints;\n    }\n    if (input.RoleArn !== undefined) {\n        bodyParams[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.S3Url !== undefined) {\n        bodyParams[\"S3Url\"] = input.S3Url;\n    }\n    if (input.SegmentId !== undefined) {\n        bodyParams[\"SegmentId\"] = input.SegmentId;\n    }\n    if (input.SegmentName !== undefined) {\n        bodyParams[\"SegmentName\"] = input.SegmentName;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1JourneyEmailMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.FromAddress !== undefined) {\n        bodyParams[\"FromAddress\"] = input.FromAddress;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1JourneyLimits = function (input, context) {\n    var bodyParams = {};\n    if (input.DailyCap !== undefined) {\n        bodyParams[\"DailyCap\"] = input.DailyCap;\n    }\n    if (input.EndpointReentryCap !== undefined) {\n        bodyParams[\"EndpointReentryCap\"] = input.EndpointReentryCap;\n    }\n    if (input.MessagesPerSecond !== undefined) {\n        bodyParams[\"MessagesPerSecond\"] = input.MessagesPerSecond;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1JourneySchedule = function (input, context) {\n    var bodyParams = {};\n    if (input.EndTime !== undefined) {\n        bodyParams[\"EndTime\"] = input.EndTime.toISOString().split(\".\")[0] + \"Z\";\n    }\n    if (input.StartTime !== undefined) {\n        bodyParams[\"StartTime\"] = input.StartTime.toISOString().split(\".\")[0] + \"Z\";\n    }\n    if (input.Timezone !== undefined) {\n        bodyParams[\"Timezone\"] = input.Timezone;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1JourneyStateRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.State !== undefined) {\n        bodyParams[\"State\"] = input.State;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1ListOfEndpointBatchItem = function (input, context) {\n    var e_1, _a;\n    var contents = [];\n    try {\n        for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n            var entry = input_1_1.value;\n            contents.push(serializeAws_restJson1_1EndpointBatchItem(entry, context));\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfMultiConditionalBranch = function (input, context) {\n    var e_2, _a;\n    var contents = [];\n    try {\n        for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {\n            var entry = input_2_1.value;\n            contents.push(serializeAws_restJson1_1MultiConditionalBranch(entry, context));\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfRandomSplitEntry = function (input, context) {\n    var e_3, _a;\n    var contents = [];\n    try {\n        for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {\n            var entry = input_3_1.value;\n            contents.push(serializeAws_restJson1_1RandomSplitEntry(entry, context));\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfSegmentDimensions = function (input, context) {\n    var e_4, _a;\n    var contents = [];\n    try {\n        for (var input_4 = __values(input), input_4_1 = input_4.next(); !input_4_1.done; input_4_1 = input_4.next()) {\n            var entry = input_4_1.value;\n            contents.push(serializeAws_restJson1_1SegmentDimensions(entry, context));\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (input_4_1 && !input_4_1.done && (_a = input_4.return)) _a.call(input_4);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfSegmentGroup = function (input, context) {\n    var e_5, _a;\n    var contents = [];\n    try {\n        for (var input_5 = __values(input), input_5_1 = input_5.next(); !input_5_1.done; input_5_1 = input_5.next()) {\n            var entry = input_5_1.value;\n            contents.push(serializeAws_restJson1_1SegmentGroup(entry, context));\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (input_5_1 && !input_5_1.done && (_a = input_5.return)) _a.call(input_5);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfSegmentReference = function (input, context) {\n    var e_6, _a;\n    var contents = [];\n    try {\n        for (var input_6 = __values(input), input_6_1 = input_6.next(); !input_6_1.done; input_6_1 = input_6.next()) {\n            var entry = input_6_1.value;\n            contents.push(serializeAws_restJson1_1SegmentReference(entry, context));\n        }\n    }\n    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n    finally {\n        try {\n            if (input_6_1 && !input_6_1.done && (_a = input_6.return)) _a.call(input_6);\n        }\n        finally { if (e_6) throw e_6.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfSimpleCondition = function (input, context) {\n    var e_7, _a;\n    var contents = [];\n    try {\n        for (var input_7 = __values(input), input_7_1 = input_7.next(); !input_7_1.done; input_7_1 = input_7.next()) {\n            var entry = input_7_1.value;\n            contents.push(serializeAws_restJson1_1SimpleCondition(entry, context));\n        }\n    }\n    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n    finally {\n        try {\n            if (input_7_1 && !input_7_1.done && (_a = input_7.return)) _a.call(input_7);\n        }\n        finally { if (e_7) throw e_7.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOfWriteTreatmentResource = function (input, context) {\n    var e_8, _a;\n    var contents = [];\n    try {\n        for (var input_8 = __values(input), input_8_1 = input_8.next(); !input_8_1.done; input_8_1 = input_8.next()) {\n            var entry = input_8_1.value;\n            contents.push(serializeAws_restJson1_1WriteTreatmentResource(entry, context));\n        }\n    }\n    catch (e_8_1) { e_8 = { error: e_8_1 }; }\n    finally {\n        try {\n            if (input_8_1 && !input_8_1.done && (_a = input_8.return)) _a.call(input_8);\n        }\n        finally { if (e_8) throw e_8.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1ListOf__string = function (input, context) {\n    var e_9, _a;\n    var contents = [];\n    try {\n        for (var input_9 = __values(input), input_9_1 = input_9.next(); !input_9_1.done; input_9_1 = input_9.next()) {\n            var entry = input_9_1.value;\n            contents.push(entry);\n        }\n    }\n    catch (e_9_1) { e_9 = { error: e_9_1 }; }\n    finally {\n        try {\n            if (input_9_1 && !input_9_1.done && (_a = input_9.return)) _a.call(input_9);\n        }\n        finally { if (e_9) throw e_9.error; }\n    }\n    return contents;\n};\nvar serializeAws_restJson1_1MapOfActivity = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1Activity(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfAddressConfiguration = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1AddressConfiguration(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfAttributeDimension = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1AttributeDimension(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfEndpointSendConfiguration = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1EndpointSendConfiguration(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfEvent = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1Event(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfEventsBatch = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1EventsBatch(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfListOf__string = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1ListOf__string(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOfMetricDimension = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = serializeAws_restJson1_1MetricDimension(input[key], context);\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOf__double = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = input[key];\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1MapOf__string = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = input[key];\n    });\n    return mapParams;\n};\nvar serializeAws_restJson1_1Message = function (input, context) {\n    var bodyParams = {};\n    if (input.Action !== undefined) {\n        bodyParams[\"Action\"] = input.Action;\n    }\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.ImageIconUrl !== undefined) {\n        bodyParams[\"ImageIconUrl\"] = input.ImageIconUrl;\n    }\n    if (input.ImageSmallIconUrl !== undefined) {\n        bodyParams[\"ImageSmallIconUrl\"] = input.ImageSmallIconUrl;\n    }\n    if (input.ImageUrl !== undefined) {\n        bodyParams[\"ImageUrl\"] = input.ImageUrl;\n    }\n    if (input.JsonBody !== undefined) {\n        bodyParams[\"JsonBody\"] = input.JsonBody;\n    }\n    if (input.MediaUrl !== undefined) {\n        bodyParams[\"MediaUrl\"] = input.MediaUrl;\n    }\n    if (input.RawContent !== undefined) {\n        bodyParams[\"RawContent\"] = input.RawContent;\n    }\n    if (input.SilentPush !== undefined) {\n        bodyParams[\"SilentPush\"] = input.SilentPush;\n    }\n    if (input.TimeToLive !== undefined) {\n        bodyParams[\"TimeToLive\"] = input.TimeToLive;\n    }\n    if (input.Title !== undefined) {\n        bodyParams[\"Title\"] = input.Title;\n    }\n    if (input.Url !== undefined) {\n        bodyParams[\"Url\"] = input.Url;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1MessageConfiguration = function (input, context) {\n    var bodyParams = {};\n    if (input.ADMMessage !== undefined) {\n        bodyParams[\"ADMMessage\"] = serializeAws_restJson1_1Message(input.ADMMessage, context);\n    }\n    if (input.APNSMessage !== undefined) {\n        bodyParams[\"APNSMessage\"] = serializeAws_restJson1_1Message(input.APNSMessage, context);\n    }\n    if (input.BaiduMessage !== undefined) {\n        bodyParams[\"BaiduMessage\"] = serializeAws_restJson1_1Message(input.BaiduMessage, context);\n    }\n    if (input.DefaultMessage !== undefined) {\n        bodyParams[\"DefaultMessage\"] = serializeAws_restJson1_1Message(input.DefaultMessage, context);\n    }\n    if (input.EmailMessage !== undefined) {\n        bodyParams[\"EmailMessage\"] = serializeAws_restJson1_1CampaignEmailMessage(input.EmailMessage, context);\n    }\n    if (input.GCMMessage !== undefined) {\n        bodyParams[\"GCMMessage\"] = serializeAws_restJson1_1Message(input.GCMMessage, context);\n    }\n    if (input.SMSMessage !== undefined) {\n        bodyParams[\"SMSMessage\"] = serializeAws_restJson1_1CampaignSmsMessage(input.SMSMessage, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1MessageRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Addresses !== undefined) {\n        bodyParams[\"Addresses\"] = serializeAws_restJson1_1MapOfAddressConfiguration(input.Addresses, context);\n    }\n    if (input.Context !== undefined) {\n        bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n    }\n    if (input.Endpoints !== undefined) {\n        bodyParams[\"Endpoints\"] = serializeAws_restJson1_1MapOfEndpointSendConfiguration(input.Endpoints, context);\n    }\n    if (input.MessageConfiguration !== undefined) {\n        bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1DirectMessageConfiguration(input.MessageConfiguration, context);\n    }\n    if (input.TemplateConfiguration !== undefined) {\n        bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n    }\n    if (input.TraceId !== undefined) {\n        bodyParams[\"TraceId\"] = input.TraceId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1MetricDimension = function (input, context) {\n    var bodyParams = {};\n    if (input.ComparisonOperator !== undefined) {\n        bodyParams[\"ComparisonOperator\"] = input.ComparisonOperator;\n    }\n    if (input.Value !== undefined) {\n        bodyParams[\"Value\"] = input.Value;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1MultiConditionalBranch = function (input, context) {\n    var bodyParams = {};\n    if (input.Condition !== undefined) {\n        bodyParams[\"Condition\"] = serializeAws_restJson1_1SimpleCondition(input.Condition, context);\n    }\n    if (input.NextActivity !== undefined) {\n        bodyParams[\"NextActivity\"] = input.NextActivity;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1MultiConditionalSplitActivity = function (input, context) {\n    var bodyParams = {};\n    if (input.Branches !== undefined) {\n        bodyParams[\"Branches\"] = serializeAws_restJson1_1ListOfMultiConditionalBranch(input.Branches, context);\n    }\n    if (input.DefaultActivity !== undefined) {\n        bodyParams[\"DefaultActivity\"] = input.DefaultActivity;\n    }\n    if (input.EvaluationWaitTime !== undefined) {\n        bodyParams[\"EvaluationWaitTime\"] = serializeAws_restJson1_1WaitTime(input.EvaluationWaitTime, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1NumberValidateRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.IsoCountryCode !== undefined) {\n        bodyParams[\"IsoCountryCode\"] = input.IsoCountryCode;\n    }\n    if (input.PhoneNumber !== undefined) {\n        bodyParams[\"PhoneNumber\"] = input.PhoneNumber;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1PublicEndpoint = function (input, context) {\n    var bodyParams = {};\n    if (input.Address !== undefined) {\n        bodyParams[\"Address\"] = input.Address;\n    }\n    if (input.Attributes !== undefined) {\n        bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfListOf__string(input.Attributes, context);\n    }\n    if (input.ChannelType !== undefined) {\n        bodyParams[\"ChannelType\"] = input.ChannelType;\n    }\n    if (input.Demographic !== undefined) {\n        bodyParams[\"Demographic\"] = serializeAws_restJson1_1EndpointDemographic(input.Demographic, context);\n    }\n    if (input.EffectiveDate !== undefined) {\n        bodyParams[\"EffectiveDate\"] = input.EffectiveDate;\n    }\n    if (input.EndpointStatus !== undefined) {\n        bodyParams[\"EndpointStatus\"] = input.EndpointStatus;\n    }\n    if (input.Location !== undefined) {\n        bodyParams[\"Location\"] = serializeAws_restJson1_1EndpointLocation(input.Location, context);\n    }\n    if (input.Metrics !== undefined) {\n        bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOf__double(input.Metrics, context);\n    }\n    if (input.OptOut !== undefined) {\n        bodyParams[\"OptOut\"] = input.OptOut;\n    }\n    if (input.RequestId !== undefined) {\n        bodyParams[\"RequestId\"] = input.RequestId;\n    }\n    if (input.User !== undefined) {\n        bodyParams[\"User\"] = serializeAws_restJson1_1EndpointUser(input.User, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1PushNotificationTemplateRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.ADM !== undefined) {\n        bodyParams[\"ADM\"] = serializeAws_restJson1_1AndroidPushNotificationTemplate(input.ADM, context);\n    }\n    if (input.APNS !== undefined) {\n        bodyParams[\"APNS\"] = serializeAws_restJson1_1APNSPushNotificationTemplate(input.APNS, context);\n    }\n    if (input.Baidu !== undefined) {\n        bodyParams[\"Baidu\"] = serializeAws_restJson1_1AndroidPushNotificationTemplate(input.Baidu, context);\n    }\n    if (input.Default !== undefined) {\n        bodyParams[\"Default\"] = serializeAws_restJson1_1DefaultPushNotificationTemplate(input.Default, context);\n    }\n    if (input.DefaultSubstitutions !== undefined) {\n        bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n    }\n    if (input.GCM !== undefined) {\n        bodyParams[\"GCM\"] = serializeAws_restJson1_1AndroidPushNotificationTemplate(input.GCM, context);\n    }\n    if (input.TemplateDescription !== undefined) {\n        bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1QuietTime = function (input, context) {\n    var bodyParams = {};\n    if (input.End !== undefined) {\n        bodyParams[\"End\"] = input.End;\n    }\n    if (input.Start !== undefined) {\n        bodyParams[\"Start\"] = input.Start;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1RandomSplitActivity = function (input, context) {\n    var bodyParams = {};\n    if (input.Branches !== undefined) {\n        bodyParams[\"Branches\"] = serializeAws_restJson1_1ListOfRandomSplitEntry(input.Branches, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1RandomSplitEntry = function (input, context) {\n    var bodyParams = {};\n    if (input.NextActivity !== undefined) {\n        bodyParams[\"NextActivity\"] = input.NextActivity;\n    }\n    if (input.Percentage !== undefined) {\n        bodyParams[\"Percentage\"] = input.Percentage;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1RawEmail = function (input, context) {\n    var bodyParams = {};\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = context.base64Encoder(input.Data);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1RecencyDimension = function (input, context) {\n    var bodyParams = {};\n    if (input.Duration !== undefined) {\n        bodyParams[\"Duration\"] = input.Duration;\n    }\n    if (input.RecencyType !== undefined) {\n        bodyParams[\"RecencyType\"] = input.RecencyType;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SMSChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    if (input.SenderId !== undefined) {\n        bodyParams[\"SenderId\"] = input.SenderId;\n    }\n    if (input.ShortCode !== undefined) {\n        bodyParams[\"ShortCode\"] = input.ShortCode;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SMSMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.Keyword !== undefined) {\n        bodyParams[\"Keyword\"] = input.Keyword;\n    }\n    if (input.MessageType !== undefined) {\n        bodyParams[\"MessageType\"] = input.MessageType;\n    }\n    if (input.OriginationNumber !== undefined) {\n        bodyParams[\"OriginationNumber\"] = input.OriginationNumber;\n    }\n    if (input.SenderId !== undefined) {\n        bodyParams[\"SenderId\"] = input.SenderId;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SMSTemplateRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.DefaultSubstitutions !== undefined) {\n        bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n    }\n    if (input.TemplateDescription !== undefined) {\n        bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1Schedule = function (input, context) {\n    var bodyParams = {};\n    if (input.EndTime !== undefined) {\n        bodyParams[\"EndTime\"] = input.EndTime;\n    }\n    if (input.EventFilter !== undefined) {\n        bodyParams[\"EventFilter\"] = serializeAws_restJson1_1CampaignEventFilter(input.EventFilter, context);\n    }\n    if (input.Frequency !== undefined) {\n        bodyParams[\"Frequency\"] = input.Frequency;\n    }\n    if (input.IsLocalTime !== undefined) {\n        bodyParams[\"IsLocalTime\"] = input.IsLocalTime;\n    }\n    if (input.QuietTime !== undefined) {\n        bodyParams[\"QuietTime\"] = serializeAws_restJson1_1QuietTime(input.QuietTime, context);\n    }\n    if (input.StartTime !== undefined) {\n        bodyParams[\"StartTime\"] = input.StartTime;\n    }\n    if (input.Timezone !== undefined) {\n        bodyParams[\"Timezone\"] = input.Timezone;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentBehaviors = function (input, context) {\n    var bodyParams = {};\n    if (input.Recency !== undefined) {\n        bodyParams[\"Recency\"] = serializeAws_restJson1_1RecencyDimension(input.Recency, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentCondition = function (input, context) {\n    var bodyParams = {};\n    if (input.SegmentId !== undefined) {\n        bodyParams[\"SegmentId\"] = input.SegmentId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentDemographics = function (input, context) {\n    var bodyParams = {};\n    if (input.AppVersion !== undefined) {\n        bodyParams[\"AppVersion\"] = serializeAws_restJson1_1SetDimension(input.AppVersion, context);\n    }\n    if (input.Channel !== undefined) {\n        bodyParams[\"Channel\"] = serializeAws_restJson1_1SetDimension(input.Channel, context);\n    }\n    if (input.DeviceType !== undefined) {\n        bodyParams[\"DeviceType\"] = serializeAws_restJson1_1SetDimension(input.DeviceType, context);\n    }\n    if (input.Make !== undefined) {\n        bodyParams[\"Make\"] = serializeAws_restJson1_1SetDimension(input.Make, context);\n    }\n    if (input.Model !== undefined) {\n        bodyParams[\"Model\"] = serializeAws_restJson1_1SetDimension(input.Model, context);\n    }\n    if (input.Platform !== undefined) {\n        bodyParams[\"Platform\"] = serializeAws_restJson1_1SetDimension(input.Platform, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentDimensions = function (input, context) {\n    var bodyParams = {};\n    if (input.Attributes !== undefined) {\n        bodyParams[\"Attributes\"] = serializeAws_restJson1_1MapOfAttributeDimension(input.Attributes, context);\n    }\n    if (input.Behavior !== undefined) {\n        bodyParams[\"Behavior\"] = serializeAws_restJson1_1SegmentBehaviors(input.Behavior, context);\n    }\n    if (input.Demographic !== undefined) {\n        bodyParams[\"Demographic\"] = serializeAws_restJson1_1SegmentDemographics(input.Demographic, context);\n    }\n    if (input.Location !== undefined) {\n        bodyParams[\"Location\"] = serializeAws_restJson1_1SegmentLocation(input.Location, context);\n    }\n    if (input.Metrics !== undefined) {\n        bodyParams[\"Metrics\"] = serializeAws_restJson1_1MapOfMetricDimension(input.Metrics, context);\n    }\n    if (input.UserAttributes !== undefined) {\n        bodyParams[\"UserAttributes\"] = serializeAws_restJson1_1MapOfAttributeDimension(input.UserAttributes, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentGroup = function (input, context) {\n    var bodyParams = {};\n    if (input.Dimensions !== undefined) {\n        bodyParams[\"Dimensions\"] = serializeAws_restJson1_1ListOfSegmentDimensions(input.Dimensions, context);\n    }\n    if (input.SourceSegments !== undefined) {\n        bodyParams[\"SourceSegments\"] = serializeAws_restJson1_1ListOfSegmentReference(input.SourceSegments, context);\n    }\n    if (input.SourceType !== undefined) {\n        bodyParams[\"SourceType\"] = input.SourceType;\n    }\n    if (input.Type !== undefined) {\n        bodyParams[\"Type\"] = input.Type;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentGroupList = function (input, context) {\n    var bodyParams = {};\n    if (input.Groups !== undefined) {\n        bodyParams[\"Groups\"] = serializeAws_restJson1_1ListOfSegmentGroup(input.Groups, context);\n    }\n    if (input.Include !== undefined) {\n        bodyParams[\"Include\"] = input.Include;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentLocation = function (input, context) {\n    var bodyParams = {};\n    if (input.Country !== undefined) {\n        bodyParams[\"Country\"] = serializeAws_restJson1_1SetDimension(input.Country, context);\n    }\n    if (input.GPSPoint !== undefined) {\n        bodyParams[\"GPSPoint\"] = serializeAws_restJson1_1GPSPointDimension(input.GPSPoint, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SegmentReference = function (input, context) {\n    var bodyParams = {};\n    if (input.Id !== undefined) {\n        bodyParams[\"Id\"] = input.Id;\n    }\n    if (input.Version !== undefined) {\n        bodyParams[\"Version\"] = input.Version;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SendUsersMessageRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Context !== undefined) {\n        bodyParams[\"Context\"] = serializeAws_restJson1_1MapOf__string(input.Context, context);\n    }\n    if (input.MessageConfiguration !== undefined) {\n        bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1DirectMessageConfiguration(input.MessageConfiguration, context);\n    }\n    if (input.TemplateConfiguration !== undefined) {\n        bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n    }\n    if (input.TraceId !== undefined) {\n        bodyParams[\"TraceId\"] = input.TraceId;\n    }\n    if (input.Users !== undefined) {\n        bodyParams[\"Users\"] = serializeAws_restJson1_1MapOfEndpointSendConfiguration(input.Users, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1Session = function (input, context) {\n    var bodyParams = {};\n    if (input.Duration !== undefined) {\n        bodyParams[\"Duration\"] = input.Duration;\n    }\n    if (input.Id !== undefined) {\n        bodyParams[\"Id\"] = input.Id;\n    }\n    if (input.StartTimestamp !== undefined) {\n        bodyParams[\"StartTimestamp\"] = input.StartTimestamp;\n    }\n    if (input.StopTimestamp !== undefined) {\n        bodyParams[\"StopTimestamp\"] = input.StopTimestamp;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SetDimension = function (input, context) {\n    var bodyParams = {};\n    if (input.DimensionType !== undefined) {\n        bodyParams[\"DimensionType\"] = input.DimensionType;\n    }\n    if (input.Values !== undefined) {\n        bodyParams[\"Values\"] = serializeAws_restJson1_1ListOf__string(input.Values, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SimpleCondition = function (input, context) {\n    var bodyParams = {};\n    if (input.EventCondition !== undefined) {\n        bodyParams[\"EventCondition\"] = serializeAws_restJson1_1EventCondition(input.EventCondition, context);\n    }\n    if (input.SegmentCondition !== undefined) {\n        bodyParams[\"SegmentCondition\"] = serializeAws_restJson1_1SegmentCondition(input.SegmentCondition, context);\n    }\n    if (input.SegmentDimensions !== undefined) {\n        bodyParams[\"segmentDimensions\"] = serializeAws_restJson1_1SegmentDimensions(input.SegmentDimensions, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SimpleEmail = function (input, context) {\n    var bodyParams = {};\n    if (input.HtmlPart !== undefined) {\n        bodyParams[\"HtmlPart\"] = serializeAws_restJson1_1SimpleEmailPart(input.HtmlPart, context);\n    }\n    if (input.Subject !== undefined) {\n        bodyParams[\"Subject\"] = serializeAws_restJson1_1SimpleEmailPart(input.Subject, context);\n    }\n    if (input.TextPart !== undefined) {\n        bodyParams[\"TextPart\"] = serializeAws_restJson1_1SimpleEmailPart(input.TextPart, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1SimpleEmailPart = function (input, context) {\n    var bodyParams = {};\n    if (input.Charset !== undefined) {\n        bodyParams[\"Charset\"] = input.Charset;\n    }\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = input.Data;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1StartCondition = function (input, context) {\n    var bodyParams = {};\n    if (input.Description !== undefined) {\n        bodyParams[\"Description\"] = input.Description;\n    }\n    if (input.SegmentStartCondition !== undefined) {\n        bodyParams[\"SegmentStartCondition\"] = serializeAws_restJson1_1SegmentCondition(input.SegmentStartCondition, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1TagsModel = function (input, context) {\n    var bodyParams = {};\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1Template = function (input, context) {\n    var bodyParams = {};\n    if (input.Name !== undefined) {\n        bodyParams[\"Name\"] = input.Name;\n    }\n    if (input.Version !== undefined) {\n        bodyParams[\"Version\"] = input.Version;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1TemplateActiveVersionRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Version !== undefined) {\n        bodyParams[\"Version\"] = input.Version;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1TemplateConfiguration = function (input, context) {\n    var bodyParams = {};\n    if (input.EmailTemplate !== undefined) {\n        bodyParams[\"EmailTemplate\"] = serializeAws_restJson1_1Template(input.EmailTemplate, context);\n    }\n    if (input.PushTemplate !== undefined) {\n        bodyParams[\"PushTemplate\"] = serializeAws_restJson1_1Template(input.PushTemplate, context);\n    }\n    if (input.SMSTemplate !== undefined) {\n        bodyParams[\"SMSTemplate\"] = serializeAws_restJson1_1Template(input.SMSTemplate, context);\n    }\n    if (input.VoiceTemplate !== undefined) {\n        bodyParams[\"VoiceTemplate\"] = serializeAws_restJson1_1Template(input.VoiceTemplate, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1UpdateAttributesRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Blacklist !== undefined) {\n        bodyParams[\"Blacklist\"] = serializeAws_restJson1_1ListOf__string(input.Blacklist, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1VoiceChannelRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Enabled !== undefined) {\n        bodyParams[\"Enabled\"] = input.Enabled;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1VoiceMessage = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.LanguageCode !== undefined) {\n        bodyParams[\"LanguageCode\"] = input.LanguageCode;\n    }\n    if (input.OriginationNumber !== undefined) {\n        bodyParams[\"OriginationNumber\"] = input.OriginationNumber;\n    }\n    if (input.Substitutions !== undefined) {\n        bodyParams[\"Substitutions\"] = serializeAws_restJson1_1MapOfListOf__string(input.Substitutions, context);\n    }\n    if (input.VoiceId !== undefined) {\n        bodyParams[\"VoiceId\"] = input.VoiceId;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1VoiceTemplateRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Body !== undefined) {\n        bodyParams[\"Body\"] = input.Body;\n    }\n    if (input.DefaultSubstitutions !== undefined) {\n        bodyParams[\"DefaultSubstitutions\"] = input.DefaultSubstitutions;\n    }\n    if (input.LanguageCode !== undefined) {\n        bodyParams[\"LanguageCode\"] = input.LanguageCode;\n    }\n    if (input.TemplateDescription !== undefined) {\n        bodyParams[\"TemplateDescription\"] = input.TemplateDescription;\n    }\n    if (input.VoiceId !== undefined) {\n        bodyParams[\"VoiceId\"] = input.VoiceId;\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WaitActivity = function (input, context) {\n    var bodyParams = {};\n    if (input.NextActivity !== undefined) {\n        bodyParams[\"NextActivity\"] = input.NextActivity;\n    }\n    if (input.WaitTime !== undefined) {\n        bodyParams[\"WaitTime\"] = serializeAws_restJson1_1WaitTime(input.WaitTime, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WaitTime = function (input, context) {\n    var bodyParams = {};\n    if (input.WaitFor !== undefined) {\n        bodyParams[\"WaitFor\"] = input.WaitFor;\n    }\n    if (input.WaitUntil !== undefined) {\n        bodyParams[\"WaitUntil\"] = input.WaitUntil;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WriteApplicationSettingsRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.CampaignHook !== undefined) {\n        bodyParams[\"CampaignHook\"] = serializeAws_restJson1_1CampaignHook(input.CampaignHook, context);\n    }\n    if (input.CloudWatchMetricsEnabled !== undefined) {\n        bodyParams[\"CloudWatchMetricsEnabled\"] = input.CloudWatchMetricsEnabled;\n    }\n    if (input.Limits !== undefined) {\n        bodyParams[\"Limits\"] = serializeAws_restJson1_1CampaignLimits(input.Limits, context);\n    }\n    if (input.QuietTime !== undefined) {\n        bodyParams[\"QuietTime\"] = serializeAws_restJson1_1QuietTime(input.QuietTime, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WriteCampaignRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.AdditionalTreatments !== undefined) {\n        bodyParams[\"AdditionalTreatments\"] = serializeAws_restJson1_1ListOfWriteTreatmentResource(input.AdditionalTreatments, context);\n    }\n    if (input.Description !== undefined) {\n        bodyParams[\"Description\"] = input.Description;\n    }\n    if (input.HoldoutPercent !== undefined) {\n        bodyParams[\"HoldoutPercent\"] = input.HoldoutPercent;\n    }\n    if (input.Hook !== undefined) {\n        bodyParams[\"Hook\"] = serializeAws_restJson1_1CampaignHook(input.Hook, context);\n    }\n    if (input.IsPaused !== undefined) {\n        bodyParams[\"IsPaused\"] = input.IsPaused;\n    }\n    if (input.Limits !== undefined) {\n        bodyParams[\"Limits\"] = serializeAws_restJson1_1CampaignLimits(input.Limits, context);\n    }\n    if (input.MessageConfiguration !== undefined) {\n        bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1MessageConfiguration(input.MessageConfiguration, context);\n    }\n    if (input.Name !== undefined) {\n        bodyParams[\"Name\"] = input.Name;\n    }\n    if (input.Schedule !== undefined) {\n        bodyParams[\"Schedule\"] = serializeAws_restJson1_1Schedule(input.Schedule, context);\n    }\n    if (input.SegmentId !== undefined) {\n        bodyParams[\"SegmentId\"] = input.SegmentId;\n    }\n    if (input.SegmentVersion !== undefined) {\n        bodyParams[\"SegmentVersion\"] = input.SegmentVersion;\n    }\n    if (input.TemplateConfiguration !== undefined) {\n        bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n    }\n    if (input.TreatmentDescription !== undefined) {\n        bodyParams[\"TreatmentDescription\"] = input.TreatmentDescription;\n    }\n    if (input.TreatmentName !== undefined) {\n        bodyParams[\"TreatmentName\"] = input.TreatmentName;\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WriteEventStream = function (input, context) {\n    var bodyParams = {};\n    if (input.DestinationStreamArn !== undefined) {\n        bodyParams[\"DestinationStreamArn\"] = input.DestinationStreamArn;\n    }\n    if (input.RoleArn !== undefined) {\n        bodyParams[\"RoleArn\"] = input.RoleArn;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WriteJourneyRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Activities !== undefined) {\n        bodyParams[\"Activities\"] = serializeAws_restJson1_1MapOfActivity(input.Activities, context);\n    }\n    if (input.CreationDate !== undefined) {\n        bodyParams[\"CreationDate\"] = input.CreationDate;\n    }\n    if (input.LastModifiedDate !== undefined) {\n        bodyParams[\"LastModifiedDate\"] = input.LastModifiedDate;\n    }\n    if (input.Limits !== undefined) {\n        bodyParams[\"Limits\"] = serializeAws_restJson1_1JourneyLimits(input.Limits, context);\n    }\n    if (input.LocalTime !== undefined) {\n        bodyParams[\"LocalTime\"] = input.LocalTime;\n    }\n    if (input.Name !== undefined) {\n        bodyParams[\"Name\"] = input.Name;\n    }\n    if (input.QuietTime !== undefined) {\n        bodyParams[\"QuietTime\"] = serializeAws_restJson1_1QuietTime(input.QuietTime, context);\n    }\n    if (input.RefreshFrequency !== undefined) {\n        bodyParams[\"RefreshFrequency\"] = input.RefreshFrequency;\n    }\n    if (input.Schedule !== undefined) {\n        bodyParams[\"Schedule\"] = serializeAws_restJson1_1JourneySchedule(input.Schedule, context);\n    }\n    if (input.StartActivity !== undefined) {\n        bodyParams[\"StartActivity\"] = input.StartActivity;\n    }\n    if (input.StartCondition !== undefined) {\n        bodyParams[\"StartCondition\"] = serializeAws_restJson1_1StartCondition(input.StartCondition, context);\n    }\n    if (input.State !== undefined) {\n        bodyParams[\"State\"] = input.State;\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WriteSegmentRequest = function (input, context) {\n    var bodyParams = {};\n    if (input.Dimensions !== undefined) {\n        bodyParams[\"Dimensions\"] = serializeAws_restJson1_1SegmentDimensions(input.Dimensions, context);\n    }\n    if (input.Name !== undefined) {\n        bodyParams[\"Name\"] = input.Name;\n    }\n    if (input.SegmentGroups !== undefined) {\n        bodyParams[\"SegmentGroups\"] = serializeAws_restJson1_1SegmentGroupList(input.SegmentGroups, context);\n    }\n    if (input.tags !== undefined) {\n        bodyParams[\"tags\"] = serializeAws_restJson1_1MapOf__string(input.tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_restJson1_1WriteTreatmentResource = function (input, context) {\n    var bodyParams = {};\n    if (input.MessageConfiguration !== undefined) {\n        bodyParams[\"MessageConfiguration\"] = serializeAws_restJson1_1MessageConfiguration(input.MessageConfiguration, context);\n    }\n    if (input.Schedule !== undefined) {\n        bodyParams[\"Schedule\"] = serializeAws_restJson1_1Schedule(input.Schedule, context);\n    }\n    if (input.SizePercent !== undefined) {\n        bodyParams[\"SizePercent\"] = input.SizePercent;\n    }\n    if (input.TemplateConfiguration !== undefined) {\n        bodyParams[\"TemplateConfiguration\"] = serializeAws_restJson1_1TemplateConfiguration(input.TemplateConfiguration, context);\n    }\n    if (input.TreatmentDescription !== undefined) {\n        bodyParams[\"TreatmentDescription\"] = input.TreatmentDescription;\n    }\n    if (input.TreatmentName !== undefined) {\n        bodyParams[\"TreatmentName\"] = input.TreatmentName;\n    }\n    return bodyParams;\n};\nvar deserializeAws_restJson1_1ADMChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"ADMChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1APNSChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"APNSChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        DefaultAuthenticationMethod: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        HasTokenKey: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultAuthenticationMethod !== undefined &&\n        output.DefaultAuthenticationMethod !== null) {\n        contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n        contents.HasTokenKey = output.HasTokenKey;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1APNSPushNotificationTemplate = function (output, context) {\n    var contents = {\n        __type: \"APNSPushNotificationTemplate\",\n        Action: undefined,\n        Body: undefined,\n        MediaUrl: undefined,\n        RawContent: undefined,\n        Sound: undefined,\n        Title: undefined,\n        Url: undefined\n    };\n    if (output.Action !== undefined && output.Action !== null) {\n        contents.Action = output.Action;\n    }\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.MediaUrl !== undefined && output.MediaUrl !== null) {\n        contents.MediaUrl = output.MediaUrl;\n    }\n    if (output.RawContent !== undefined && output.RawContent !== null) {\n        contents.RawContent = output.RawContent;\n    }\n    if (output.Sound !== undefined && output.Sound !== null) {\n        contents.Sound = output.Sound;\n    }\n    if (output.Title !== undefined && output.Title !== null) {\n        contents.Title = output.Title;\n    }\n    if (output.Url !== undefined && output.Url !== null) {\n        contents.Url = output.Url;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1APNSSandboxChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"APNSSandboxChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        DefaultAuthenticationMethod: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        HasTokenKey: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultAuthenticationMethod !== undefined &&\n        output.DefaultAuthenticationMethod !== null) {\n        contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n        contents.HasTokenKey = output.HasTokenKey;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1APNSVoipChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"APNSVoipChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        DefaultAuthenticationMethod: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        HasTokenKey: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultAuthenticationMethod !== undefined &&\n        output.DefaultAuthenticationMethod !== null) {\n        contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n        contents.HasTokenKey = output.HasTokenKey;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1APNSVoipSandboxChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"APNSVoipSandboxChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        DefaultAuthenticationMethod: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        HasTokenKey: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultAuthenticationMethod !== undefined &&\n        output.DefaultAuthenticationMethod !== null) {\n        contents.DefaultAuthenticationMethod = output.DefaultAuthenticationMethod;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.HasTokenKey !== undefined && output.HasTokenKey !== null) {\n        contents.HasTokenKey = output.HasTokenKey;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ActivitiesResponse = function (output, context) {\n    var contents = {\n        __type: \"ActivitiesResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfActivityResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1Activity = function (output, context) {\n    var contents = {\n        __type: \"Activity\",\n        ConditionalSplit: undefined,\n        Description: undefined,\n        EMAIL: undefined,\n        Holdout: undefined,\n        MultiCondition: undefined,\n        RandomSplit: undefined,\n        Wait: undefined\n    };\n    if (output.ConditionalSplit !== undefined &&\n        output.ConditionalSplit !== null) {\n        contents.ConditionalSplit = deserializeAws_restJson1_1ConditionalSplitActivity(output.ConditionalSplit, context);\n    }\n    if (output.Description !== undefined && output.Description !== null) {\n        contents.Description = output.Description;\n    }\n    if (output.EMAIL !== undefined && output.EMAIL !== null) {\n        contents.EMAIL = deserializeAws_restJson1_1EmailMessageActivity(output.EMAIL, context);\n    }\n    if (output.Holdout !== undefined && output.Holdout !== null) {\n        contents.Holdout = deserializeAws_restJson1_1HoldoutActivity(output.Holdout, context);\n    }\n    if (output.MultiCondition !== undefined && output.MultiCondition !== null) {\n        contents.MultiCondition = deserializeAws_restJson1_1MultiConditionalSplitActivity(output.MultiCondition, context);\n    }\n    if (output.RandomSplit !== undefined && output.RandomSplit !== null) {\n        contents.RandomSplit = deserializeAws_restJson1_1RandomSplitActivity(output.RandomSplit, context);\n    }\n    if (output.Wait !== undefined && output.Wait !== null) {\n        contents.Wait = deserializeAws_restJson1_1WaitActivity(output.Wait, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ActivityResponse = function (output, context) {\n    var contents = {\n        __type: \"ActivityResponse\",\n        ApplicationId: undefined,\n        CampaignId: undefined,\n        End: undefined,\n        Id: undefined,\n        Result: undefined,\n        ScheduledStart: undefined,\n        Start: undefined,\n        State: undefined,\n        SuccessfulEndpointCount: undefined,\n        TimezonesCompletedCount: undefined,\n        TimezonesTotalCount: undefined,\n        TotalEndpointCount: undefined,\n        TreatmentId: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CampaignId !== undefined && output.CampaignId !== null) {\n        contents.CampaignId = output.CampaignId;\n    }\n    if (output.End !== undefined && output.End !== null) {\n        contents.End = output.End;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.Result !== undefined && output.Result !== null) {\n        contents.Result = output.Result;\n    }\n    if (output.ScheduledStart !== undefined && output.ScheduledStart !== null) {\n        contents.ScheduledStart = output.ScheduledStart;\n    }\n    if (output.Start !== undefined && output.Start !== null) {\n        contents.Start = output.Start;\n    }\n    if (output.State !== undefined && output.State !== null) {\n        contents.State = output.State;\n    }\n    if (output.SuccessfulEndpointCount !== undefined &&\n        output.SuccessfulEndpointCount !== null) {\n        contents.SuccessfulEndpointCount = output.SuccessfulEndpointCount;\n    }\n    if (output.TimezonesCompletedCount !== undefined &&\n        output.TimezonesCompletedCount !== null) {\n        contents.TimezonesCompletedCount = output.TimezonesCompletedCount;\n    }\n    if (output.TimezonesTotalCount !== undefined &&\n        output.TimezonesTotalCount !== null) {\n        contents.TimezonesTotalCount = output.TimezonesTotalCount;\n    }\n    if (output.TotalEndpointCount !== undefined &&\n        output.TotalEndpointCount !== null) {\n        contents.TotalEndpointCount = output.TotalEndpointCount;\n    }\n    if (output.TreatmentId !== undefined && output.TreatmentId !== null) {\n        contents.TreatmentId = output.TreatmentId;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1AndroidPushNotificationTemplate = function (output, context) {\n    var contents = {\n        __type: \"AndroidPushNotificationTemplate\",\n        Action: undefined,\n        Body: undefined,\n        ImageIconUrl: undefined,\n        ImageUrl: undefined,\n        RawContent: undefined,\n        SmallImageIconUrl: undefined,\n        Sound: undefined,\n        Title: undefined,\n        Url: undefined\n    };\n    if (output.Action !== undefined && output.Action !== null) {\n        contents.Action = output.Action;\n    }\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.ImageIconUrl !== undefined && output.ImageIconUrl !== null) {\n        contents.ImageIconUrl = output.ImageIconUrl;\n    }\n    if (output.ImageUrl !== undefined && output.ImageUrl !== null) {\n        contents.ImageUrl = output.ImageUrl;\n    }\n    if (output.RawContent !== undefined && output.RawContent !== null) {\n        contents.RawContent = output.RawContent;\n    }\n    if (output.SmallImageIconUrl !== undefined &&\n        output.SmallImageIconUrl !== null) {\n        contents.SmallImageIconUrl = output.SmallImageIconUrl;\n    }\n    if (output.Sound !== undefined && output.Sound !== null) {\n        contents.Sound = output.Sound;\n    }\n    if (output.Title !== undefined && output.Title !== null) {\n        contents.Title = output.Title;\n    }\n    if (output.Url !== undefined && output.Url !== null) {\n        contents.Url = output.Url;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ApplicationDateRangeKpiResponse = function (output, context) {\n    var contents = {\n        __type: \"ApplicationDateRangeKpiResponse\",\n        ApplicationId: undefined,\n        EndTime: undefined,\n        KpiName: undefined,\n        KpiResult: undefined,\n        NextToken: undefined,\n        StartTime: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.EndTime !== undefined && output.EndTime !== null) {\n        contents.EndTime = new Date(output.EndTime);\n    }\n    if (output.KpiName !== undefined && output.KpiName !== null) {\n        contents.KpiName = output.KpiName;\n    }\n    if (output.KpiResult !== undefined && output.KpiResult !== null) {\n        contents.KpiResult = deserializeAws_restJson1_1BaseKpiResult(output.KpiResult, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    if (output.StartTime !== undefined && output.StartTime !== null) {\n        contents.StartTime = new Date(output.StartTime);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ApplicationResponse = function (output, context) {\n    var contents = {\n        __type: \"ApplicationResponse\",\n        Arn: undefined,\n        Id: undefined,\n        Name: undefined,\n        tags: undefined\n    };\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.Name !== undefined && output.Name !== null) {\n        contents.Name = output.Name;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ApplicationSettingsResource = function (output, context) {\n    var contents = {\n        __type: \"ApplicationSettingsResource\",\n        ApplicationId: undefined,\n        CampaignHook: undefined,\n        LastModifiedDate: undefined,\n        Limits: undefined,\n        QuietTime: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CampaignHook !== undefined && output.CampaignHook !== null) {\n        contents.CampaignHook = deserializeAws_restJson1_1CampaignHook(output.CampaignHook, context);\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Limits !== undefined && output.Limits !== null) {\n        contents.Limits = deserializeAws_restJson1_1CampaignLimits(output.Limits, context);\n    }\n    if (output.QuietTime !== undefined && output.QuietTime !== null) {\n        contents.QuietTime = deserializeAws_restJson1_1QuietTime(output.QuietTime, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ApplicationsResponse = function (output, context) {\n    var contents = {\n        __type: \"ApplicationsResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfApplicationResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1AttributeDimension = function (output, context) {\n    var contents = {\n        __type: \"AttributeDimension\",\n        AttributeType: undefined,\n        Values: undefined\n    };\n    if (output.AttributeType !== undefined && output.AttributeType !== null) {\n        contents.AttributeType = output.AttributeType;\n    }\n    if (output.Values !== undefined && output.Values !== null) {\n        contents.Values = deserializeAws_restJson1_1ListOf__string(output.Values, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1AttributesResource = function (output, context) {\n    var contents = {\n        __type: \"AttributesResource\",\n        ApplicationId: undefined,\n        AttributeType: undefined,\n        Attributes: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.AttributeType !== undefined && output.AttributeType !== null) {\n        contents.AttributeType = output.AttributeType;\n    }\n    if (output.Attributes !== undefined && output.Attributes !== null) {\n        contents.Attributes = deserializeAws_restJson1_1ListOf__string(output.Attributes, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1BaiduChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"BaiduChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Credential: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Credential !== undefined && output.Credential !== null) {\n        contents.Credential = output.Credential;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1BaseKpiResult = function (output, context) {\n    var contents = {\n        __type: \"BaseKpiResult\",\n        Rows: undefined\n    };\n    if (output.Rows !== undefined && output.Rows !== null) {\n        contents.Rows = deserializeAws_restJson1_1ListOfResultRow(output.Rows, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignDateRangeKpiResponse = function (output, context) {\n    var contents = {\n        __type: \"CampaignDateRangeKpiResponse\",\n        ApplicationId: undefined,\n        CampaignId: undefined,\n        EndTime: undefined,\n        KpiName: undefined,\n        KpiResult: undefined,\n        NextToken: undefined,\n        StartTime: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CampaignId !== undefined && output.CampaignId !== null) {\n        contents.CampaignId = output.CampaignId;\n    }\n    if (output.EndTime !== undefined && output.EndTime !== null) {\n        contents.EndTime = new Date(output.EndTime);\n    }\n    if (output.KpiName !== undefined && output.KpiName !== null) {\n        contents.KpiName = output.KpiName;\n    }\n    if (output.KpiResult !== undefined && output.KpiResult !== null) {\n        contents.KpiResult = deserializeAws_restJson1_1BaseKpiResult(output.KpiResult, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    if (output.StartTime !== undefined && output.StartTime !== null) {\n        contents.StartTime = new Date(output.StartTime);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignEmailMessage = function (output, context) {\n    var contents = {\n        __type: \"CampaignEmailMessage\",\n        Body: undefined,\n        FromAddress: undefined,\n        HtmlBody: undefined,\n        Title: undefined\n    };\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.FromAddress !== undefined && output.FromAddress !== null) {\n        contents.FromAddress = output.FromAddress;\n    }\n    if (output.HtmlBody !== undefined && output.HtmlBody !== null) {\n        contents.HtmlBody = output.HtmlBody;\n    }\n    if (output.Title !== undefined && output.Title !== null) {\n        contents.Title = output.Title;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignEventFilter = function (output, context) {\n    var contents = {\n        __type: \"CampaignEventFilter\",\n        Dimensions: undefined,\n        FilterType: undefined\n    };\n    if (output.Dimensions !== undefined && output.Dimensions !== null) {\n        contents.Dimensions = deserializeAws_restJson1_1EventDimensions(output.Dimensions, context);\n    }\n    if (output.FilterType !== undefined && output.FilterType !== null) {\n        contents.FilterType = output.FilterType;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignHook = function (output, context) {\n    var contents = {\n        __type: \"CampaignHook\",\n        LambdaFunctionName: undefined,\n        Mode: undefined,\n        WebUrl: undefined\n    };\n    if (output.LambdaFunctionName !== undefined &&\n        output.LambdaFunctionName !== null) {\n        contents.LambdaFunctionName = output.LambdaFunctionName;\n    }\n    if (output.Mode !== undefined && output.Mode !== null) {\n        contents.Mode = output.Mode;\n    }\n    if (output.WebUrl !== undefined && output.WebUrl !== null) {\n        contents.WebUrl = output.WebUrl;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignLimits = function (output, context) {\n    var contents = {\n        __type: \"CampaignLimits\",\n        Daily: undefined,\n        MaximumDuration: undefined,\n        MessagesPerSecond: undefined,\n        Total: undefined\n    };\n    if (output.Daily !== undefined && output.Daily !== null) {\n        contents.Daily = output.Daily;\n    }\n    if (output.MaximumDuration !== undefined && output.MaximumDuration !== null) {\n        contents.MaximumDuration = output.MaximumDuration;\n    }\n    if (output.MessagesPerSecond !== undefined &&\n        output.MessagesPerSecond !== null) {\n        contents.MessagesPerSecond = output.MessagesPerSecond;\n    }\n    if (output.Total !== undefined && output.Total !== null) {\n        contents.Total = output.Total;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignResponse = function (output, context) {\n    var contents = {\n        __type: \"CampaignResponse\",\n        AdditionalTreatments: undefined,\n        ApplicationId: undefined,\n        Arn: undefined,\n        CreationDate: undefined,\n        DefaultState: undefined,\n        Description: undefined,\n        HoldoutPercent: undefined,\n        Hook: undefined,\n        Id: undefined,\n        IsPaused: undefined,\n        LastModifiedDate: undefined,\n        Limits: undefined,\n        MessageConfiguration: undefined,\n        Name: undefined,\n        Schedule: undefined,\n        SegmentId: undefined,\n        SegmentVersion: undefined,\n        State: undefined,\n        TemplateConfiguration: undefined,\n        TreatmentDescription: undefined,\n        TreatmentName: undefined,\n        Version: undefined,\n        tags: undefined\n    };\n    if (output.AdditionalTreatments !== undefined &&\n        output.AdditionalTreatments !== null) {\n        contents.AdditionalTreatments = deserializeAws_restJson1_1ListOfTreatmentResource(output.AdditionalTreatments, context);\n    }\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultState !== undefined && output.DefaultState !== null) {\n        contents.DefaultState = deserializeAws_restJson1_1CampaignState(output.DefaultState, context);\n    }\n    if (output.Description !== undefined && output.Description !== null) {\n        contents.Description = output.Description;\n    }\n    if (output.HoldoutPercent !== undefined && output.HoldoutPercent !== null) {\n        contents.HoldoutPercent = output.HoldoutPercent;\n    }\n    if (output.Hook !== undefined && output.Hook !== null) {\n        contents.Hook = deserializeAws_restJson1_1CampaignHook(output.Hook, context);\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsPaused !== undefined && output.IsPaused !== null) {\n        contents.IsPaused = output.IsPaused;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Limits !== undefined && output.Limits !== null) {\n        contents.Limits = deserializeAws_restJson1_1CampaignLimits(output.Limits, context);\n    }\n    if (output.MessageConfiguration !== undefined &&\n        output.MessageConfiguration !== null) {\n        contents.MessageConfiguration = deserializeAws_restJson1_1MessageConfiguration(output.MessageConfiguration, context);\n    }\n    if (output.Name !== undefined && output.Name !== null) {\n        contents.Name = output.Name;\n    }\n    if (output.Schedule !== undefined && output.Schedule !== null) {\n        contents.Schedule = deserializeAws_restJson1_1Schedule(output.Schedule, context);\n    }\n    if (output.SegmentId !== undefined && output.SegmentId !== null) {\n        contents.SegmentId = output.SegmentId;\n    }\n    if (output.SegmentVersion !== undefined && output.SegmentVersion !== null) {\n        contents.SegmentVersion = output.SegmentVersion;\n    }\n    if (output.State !== undefined && output.State !== null) {\n        contents.State = deserializeAws_restJson1_1CampaignState(output.State, context);\n    }\n    if (output.TemplateConfiguration !== undefined &&\n        output.TemplateConfiguration !== null) {\n        contents.TemplateConfiguration = deserializeAws_restJson1_1TemplateConfiguration(output.TemplateConfiguration, context);\n    }\n    if (output.TreatmentDescription !== undefined &&\n        output.TreatmentDescription !== null) {\n        contents.TreatmentDescription = output.TreatmentDescription;\n    }\n    if (output.TreatmentName !== undefined && output.TreatmentName !== null) {\n        contents.TreatmentName = output.TreatmentName;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignSmsMessage = function (output, context) {\n    var contents = {\n        __type: \"CampaignSmsMessage\",\n        Body: undefined,\n        MessageType: undefined,\n        SenderId: undefined\n    };\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.MessageType !== undefined && output.MessageType !== null) {\n        contents.MessageType = output.MessageType;\n    }\n    if (output.SenderId !== undefined && output.SenderId !== null) {\n        contents.SenderId = output.SenderId;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignState = function (output, context) {\n    var contents = {\n        __type: \"CampaignState\",\n        CampaignStatus: undefined\n    };\n    if (output.CampaignStatus !== undefined && output.CampaignStatus !== null) {\n        contents.CampaignStatus = output.CampaignStatus;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CampaignsResponse = function (output, context) {\n    var contents = {\n        __type: \"CampaignsResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfCampaignResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"ChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ChannelsResponse = function (output, context) {\n    var contents = {\n        __type: \"ChannelsResponse\",\n        Channels: undefined\n    };\n    if (output.Channels !== undefined && output.Channels !== null) {\n        contents.Channels = deserializeAws_restJson1_1MapOfChannelResponse(output.Channels, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1Condition = function (output, context) {\n    var contents = {\n        __type: \"Condition\",\n        Conditions: undefined,\n        Operator: undefined\n    };\n    if (output.Conditions !== undefined && output.Conditions !== null) {\n        contents.Conditions = deserializeAws_restJson1_1ListOfSimpleCondition(output.Conditions, context);\n    }\n    if (output.Operator !== undefined && output.Operator !== null) {\n        contents.Operator = output.Operator;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ConditionalSplitActivity = function (output, context) {\n    var contents = {\n        __type: \"ConditionalSplitActivity\",\n        Condition: undefined,\n        EvaluationWaitTime: undefined,\n        FalseActivity: undefined,\n        TrueActivity: undefined\n    };\n    if (output.Condition !== undefined && output.Condition !== null) {\n        contents.Condition = deserializeAws_restJson1_1Condition(output.Condition, context);\n    }\n    if (output.EvaluationWaitTime !== undefined &&\n        output.EvaluationWaitTime !== null) {\n        contents.EvaluationWaitTime = deserializeAws_restJson1_1WaitTime(output.EvaluationWaitTime, context);\n    }\n    if (output.FalseActivity !== undefined && output.FalseActivity !== null) {\n        contents.FalseActivity = output.FalseActivity;\n    }\n    if (output.TrueActivity !== undefined && output.TrueActivity !== null) {\n        contents.TrueActivity = output.TrueActivity;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1CreateTemplateMessageBody = function (output, context) {\n    var contents = {\n        __type: \"CreateTemplateMessageBody\",\n        Arn: undefined,\n        Message: undefined,\n        RequestID: undefined\n    };\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.Message !== undefined && output.Message !== null) {\n        contents.Message = output.Message;\n    }\n    if (output.RequestID !== undefined && output.RequestID !== null) {\n        contents.RequestID = output.RequestID;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1DefaultPushNotificationTemplate = function (output, context) {\n    var contents = {\n        __type: \"DefaultPushNotificationTemplate\",\n        Action: undefined,\n        Body: undefined,\n        Sound: undefined,\n        Title: undefined,\n        Url: undefined\n    };\n    if (output.Action !== undefined && output.Action !== null) {\n        contents.Action = output.Action;\n    }\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.Sound !== undefined && output.Sound !== null) {\n        contents.Sound = output.Sound;\n    }\n    if (output.Title !== undefined && output.Title !== null) {\n        contents.Title = output.Title;\n    }\n    if (output.Url !== undefined && output.Url !== null) {\n        contents.Url = output.Url;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EmailChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"EmailChannelResponse\",\n        ApplicationId: undefined,\n        ConfigurationSet: undefined,\n        CreationDate: undefined,\n        Enabled: undefined,\n        FromAddress: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        Identity: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        MessagesPerSecond: undefined,\n        Platform: undefined,\n        RoleArn: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.ConfigurationSet !== undefined &&\n        output.ConfigurationSet !== null) {\n        contents.ConfigurationSet = output.ConfigurationSet;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.FromAddress !== undefined && output.FromAddress !== null) {\n        contents.FromAddress = output.FromAddress;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.Identity !== undefined && output.Identity !== null) {\n        contents.Identity = output.Identity;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.MessagesPerSecond !== undefined &&\n        output.MessagesPerSecond !== null) {\n        contents.MessagesPerSecond = output.MessagesPerSecond;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.RoleArn !== undefined && output.RoleArn !== null) {\n        contents.RoleArn = output.RoleArn;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EmailMessageActivity = function (output, context) {\n    var contents = {\n        __type: \"EmailMessageActivity\",\n        MessageConfig: undefined,\n        NextActivity: undefined,\n        TemplateName: undefined,\n        TemplateVersion: undefined\n    };\n    if (output.MessageConfig !== undefined && output.MessageConfig !== null) {\n        contents.MessageConfig = deserializeAws_restJson1_1JourneyEmailMessage(output.MessageConfig, context);\n    }\n    if (output.NextActivity !== undefined && output.NextActivity !== null) {\n        contents.NextActivity = output.NextActivity;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateVersion !== undefined && output.TemplateVersion !== null) {\n        contents.TemplateVersion = output.TemplateVersion;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EmailTemplateResponse = function (output, context) {\n    var contents = {\n        __type: \"EmailTemplateResponse\",\n        Arn: undefined,\n        CreationDate: undefined,\n        DefaultSubstitutions: undefined,\n        HtmlPart: undefined,\n        LastModifiedDate: undefined,\n        Subject: undefined,\n        TemplateDescription: undefined,\n        TemplateName: undefined,\n        TemplateType: undefined,\n        TextPart: undefined,\n        Version: undefined,\n        tags: undefined\n    };\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultSubstitutions !== undefined &&\n        output.DefaultSubstitutions !== null) {\n        contents.DefaultSubstitutions = output.DefaultSubstitutions;\n    }\n    if (output.HtmlPart !== undefined && output.HtmlPart !== null) {\n        contents.HtmlPart = output.HtmlPart;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Subject !== undefined && output.Subject !== null) {\n        contents.Subject = output.Subject;\n    }\n    if (output.TemplateDescription !== undefined &&\n        output.TemplateDescription !== null) {\n        contents.TemplateDescription = output.TemplateDescription;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateType !== undefined && output.TemplateType !== null) {\n        contents.TemplateType = output.TemplateType;\n    }\n    if (output.TextPart !== undefined && output.TextPart !== null) {\n        contents.TextPart = output.TextPart;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointDemographic = function (output, context) {\n    var contents = {\n        __type: \"EndpointDemographic\",\n        AppVersion: undefined,\n        Locale: undefined,\n        Make: undefined,\n        Model: undefined,\n        ModelVersion: undefined,\n        Platform: undefined,\n        PlatformVersion: undefined,\n        Timezone: undefined\n    };\n    if (output.AppVersion !== undefined && output.AppVersion !== null) {\n        contents.AppVersion = output.AppVersion;\n    }\n    if (output.Locale !== undefined && output.Locale !== null) {\n        contents.Locale = output.Locale;\n    }\n    if (output.Make !== undefined && output.Make !== null) {\n        contents.Make = output.Make;\n    }\n    if (output.Model !== undefined && output.Model !== null) {\n        contents.Model = output.Model;\n    }\n    if (output.ModelVersion !== undefined && output.ModelVersion !== null) {\n        contents.ModelVersion = output.ModelVersion;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.PlatformVersion !== undefined && output.PlatformVersion !== null) {\n        contents.PlatformVersion = output.PlatformVersion;\n    }\n    if (output.Timezone !== undefined && output.Timezone !== null) {\n        contents.Timezone = output.Timezone;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointItemResponse = function (output, context) {\n    var contents = {\n        __type: \"EndpointItemResponse\",\n        Message: undefined,\n        StatusCode: undefined\n    };\n    if (output.Message !== undefined && output.Message !== null) {\n        contents.Message = output.Message;\n    }\n    if (output.StatusCode !== undefined && output.StatusCode !== null) {\n        contents.StatusCode = output.StatusCode;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointLocation = function (output, context) {\n    var contents = {\n        __type: \"EndpointLocation\",\n        City: undefined,\n        Country: undefined,\n        Latitude: undefined,\n        Longitude: undefined,\n        PostalCode: undefined,\n        Region: undefined\n    };\n    if (output.City !== undefined && output.City !== null) {\n        contents.City = output.City;\n    }\n    if (output.Country !== undefined && output.Country !== null) {\n        contents.Country = output.Country;\n    }\n    if (output.Latitude !== undefined && output.Latitude !== null) {\n        contents.Latitude = output.Latitude;\n    }\n    if (output.Longitude !== undefined && output.Longitude !== null) {\n        contents.Longitude = output.Longitude;\n    }\n    if (output.PostalCode !== undefined && output.PostalCode !== null) {\n        contents.PostalCode = output.PostalCode;\n    }\n    if (output.Region !== undefined && output.Region !== null) {\n        contents.Region = output.Region;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointMessageResult = function (output, context) {\n    var contents = {\n        __type: \"EndpointMessageResult\",\n        Address: undefined,\n        DeliveryStatus: undefined,\n        MessageId: undefined,\n        StatusCode: undefined,\n        StatusMessage: undefined,\n        UpdatedToken: undefined\n    };\n    if (output.Address !== undefined && output.Address !== null) {\n        contents.Address = output.Address;\n    }\n    if (output.DeliveryStatus !== undefined && output.DeliveryStatus !== null) {\n        contents.DeliveryStatus = output.DeliveryStatus;\n    }\n    if (output.MessageId !== undefined && output.MessageId !== null) {\n        contents.MessageId = output.MessageId;\n    }\n    if (output.StatusCode !== undefined && output.StatusCode !== null) {\n        contents.StatusCode = output.StatusCode;\n    }\n    if (output.StatusMessage !== undefined && output.StatusMessage !== null) {\n        contents.StatusMessage = output.StatusMessage;\n    }\n    if (output.UpdatedToken !== undefined && output.UpdatedToken !== null) {\n        contents.UpdatedToken = output.UpdatedToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointResponse = function (output, context) {\n    var contents = {\n        __type: \"EndpointResponse\",\n        Address: undefined,\n        ApplicationId: undefined,\n        Attributes: undefined,\n        ChannelType: undefined,\n        CohortId: undefined,\n        CreationDate: undefined,\n        Demographic: undefined,\n        EffectiveDate: undefined,\n        EndpointStatus: undefined,\n        Id: undefined,\n        Location: undefined,\n        Metrics: undefined,\n        OptOut: undefined,\n        RequestId: undefined,\n        User: undefined\n    };\n    if (output.Address !== undefined && output.Address !== null) {\n        contents.Address = output.Address;\n    }\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.Attributes !== undefined && output.Attributes !== null) {\n        contents.Attributes = deserializeAws_restJson1_1MapOfListOf__string(output.Attributes, context);\n    }\n    if (output.ChannelType !== undefined && output.ChannelType !== null) {\n        contents.ChannelType = output.ChannelType;\n    }\n    if (output.CohortId !== undefined && output.CohortId !== null) {\n        contents.CohortId = output.CohortId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Demographic !== undefined && output.Demographic !== null) {\n        contents.Demographic = deserializeAws_restJson1_1EndpointDemographic(output.Demographic, context);\n    }\n    if (output.EffectiveDate !== undefined && output.EffectiveDate !== null) {\n        contents.EffectiveDate = output.EffectiveDate;\n    }\n    if (output.EndpointStatus !== undefined && output.EndpointStatus !== null) {\n        contents.EndpointStatus = output.EndpointStatus;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.Location !== undefined && output.Location !== null) {\n        contents.Location = deserializeAws_restJson1_1EndpointLocation(output.Location, context);\n    }\n    if (output.Metrics !== undefined && output.Metrics !== null) {\n        contents.Metrics = deserializeAws_restJson1_1MapOf__double(output.Metrics, context);\n    }\n    if (output.OptOut !== undefined && output.OptOut !== null) {\n        contents.OptOut = output.OptOut;\n    }\n    if (output.RequestId !== undefined && output.RequestId !== null) {\n        contents.RequestId = output.RequestId;\n    }\n    if (output.User !== undefined && output.User !== null) {\n        contents.User = deserializeAws_restJson1_1EndpointUser(output.User, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointUser = function (output, context) {\n    var contents = {\n        __type: \"EndpointUser\",\n        UserAttributes: undefined,\n        UserId: undefined\n    };\n    if (output.UserAttributes !== undefined && output.UserAttributes !== null) {\n        contents.UserAttributes = deserializeAws_restJson1_1MapOfListOf__string(output.UserAttributes, context);\n    }\n    if (output.UserId !== undefined && output.UserId !== null) {\n        contents.UserId = output.UserId;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EndpointsResponse = function (output, context) {\n    var contents = {\n        __type: \"EndpointsResponse\",\n        Item: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfEndpointResponse(output.Item, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EventCondition = function (output, context) {\n    var contents = {\n        __type: \"EventCondition\",\n        Dimensions: undefined,\n        MessageActivity: undefined\n    };\n    if (output.Dimensions !== undefined && output.Dimensions !== null) {\n        contents.Dimensions = deserializeAws_restJson1_1EventDimensions(output.Dimensions, context);\n    }\n    if (output.MessageActivity !== undefined && output.MessageActivity !== null) {\n        contents.MessageActivity = output.MessageActivity;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EventDimensions = function (output, context) {\n    var contents = {\n        __type: \"EventDimensions\",\n        Attributes: undefined,\n        EventType: undefined,\n        Metrics: undefined\n    };\n    if (output.Attributes !== undefined && output.Attributes !== null) {\n        contents.Attributes = deserializeAws_restJson1_1MapOfAttributeDimension(output.Attributes, context);\n    }\n    if (output.EventType !== undefined && output.EventType !== null) {\n        contents.EventType = deserializeAws_restJson1_1SetDimension(output.EventType, context);\n    }\n    if (output.Metrics !== undefined && output.Metrics !== null) {\n        contents.Metrics = deserializeAws_restJson1_1MapOfMetricDimension(output.Metrics, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EventItemResponse = function (output, context) {\n    var contents = {\n        __type: \"EventItemResponse\",\n        Message: undefined,\n        StatusCode: undefined\n    };\n    if (output.Message !== undefined && output.Message !== null) {\n        contents.Message = output.Message;\n    }\n    if (output.StatusCode !== undefined && output.StatusCode !== null) {\n        contents.StatusCode = output.StatusCode;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EventStream = function (output, context) {\n    var contents = {\n        __type: \"EventStream\",\n        ApplicationId: undefined,\n        DestinationStreamArn: undefined,\n        ExternalId: undefined,\n        LastModifiedDate: undefined,\n        LastUpdatedBy: undefined,\n        RoleArn: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.DestinationStreamArn !== undefined &&\n        output.DestinationStreamArn !== null) {\n        contents.DestinationStreamArn = output.DestinationStreamArn;\n    }\n    if (output.ExternalId !== undefined && output.ExternalId !== null) {\n        contents.ExternalId = output.ExternalId;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null) {\n        contents.LastUpdatedBy = output.LastUpdatedBy;\n    }\n    if (output.RoleArn !== undefined && output.RoleArn !== null) {\n        contents.RoleArn = output.RoleArn;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1EventsResponse = function (output, context) {\n    var contents = {\n        __type: \"EventsResponse\",\n        Results: undefined\n    };\n    if (output.Results !== undefined && output.Results !== null) {\n        contents.Results = deserializeAws_restJson1_1MapOfItemResponse(output.Results, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ExportJobResource = function (output, context) {\n    var contents = {\n        __type: \"ExportJobResource\",\n        RoleArn: undefined,\n        S3UrlPrefix: undefined,\n        SegmentId: undefined,\n        SegmentVersion: undefined\n    };\n    if (output.RoleArn !== undefined && output.RoleArn !== null) {\n        contents.RoleArn = output.RoleArn;\n    }\n    if (output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null) {\n        contents.S3UrlPrefix = output.S3UrlPrefix;\n    }\n    if (output.SegmentId !== undefined && output.SegmentId !== null) {\n        contents.SegmentId = output.SegmentId;\n    }\n    if (output.SegmentVersion !== undefined && output.SegmentVersion !== null) {\n        contents.SegmentVersion = output.SegmentVersion;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ExportJobResponse = function (output, context) {\n    var contents = {\n        __type: \"ExportJobResponse\",\n        ApplicationId: undefined,\n        CompletedPieces: undefined,\n        CompletionDate: undefined,\n        CreationDate: undefined,\n        Definition: undefined,\n        FailedPieces: undefined,\n        Failures: undefined,\n        Id: undefined,\n        JobStatus: undefined,\n        TotalFailures: undefined,\n        TotalPieces: undefined,\n        TotalProcessed: undefined,\n        Type: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CompletedPieces !== undefined && output.CompletedPieces !== null) {\n        contents.CompletedPieces = output.CompletedPieces;\n    }\n    if (output.CompletionDate !== undefined && output.CompletionDate !== null) {\n        contents.CompletionDate = output.CompletionDate;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Definition !== undefined && output.Definition !== null) {\n        contents.Definition = deserializeAws_restJson1_1ExportJobResource(output.Definition, context);\n    }\n    if (output.FailedPieces !== undefined && output.FailedPieces !== null) {\n        contents.FailedPieces = output.FailedPieces;\n    }\n    if (output.Failures !== undefined && output.Failures !== null) {\n        contents.Failures = deserializeAws_restJson1_1ListOf__string(output.Failures, context);\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.JobStatus !== undefined && output.JobStatus !== null) {\n        contents.JobStatus = output.JobStatus;\n    }\n    if (output.TotalFailures !== undefined && output.TotalFailures !== null) {\n        contents.TotalFailures = output.TotalFailures;\n    }\n    if (output.TotalPieces !== undefined && output.TotalPieces !== null) {\n        contents.TotalPieces = output.TotalPieces;\n    }\n    if (output.TotalProcessed !== undefined && output.TotalProcessed !== null) {\n        contents.TotalProcessed = output.TotalProcessed;\n    }\n    if (output.Type !== undefined && output.Type !== null) {\n        contents.Type = output.Type;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ExportJobsResponse = function (output, context) {\n    var contents = {\n        __type: \"ExportJobsResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfExportJobResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1GCMChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"GCMChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Credential: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Credential !== undefined && output.Credential !== null) {\n        contents.Credential = output.Credential;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1GPSCoordinates = function (output, context) {\n    var contents = {\n        __type: \"GPSCoordinates\",\n        Latitude: undefined,\n        Longitude: undefined\n    };\n    if (output.Latitude !== undefined && output.Latitude !== null) {\n        contents.Latitude = output.Latitude;\n    }\n    if (output.Longitude !== undefined && output.Longitude !== null) {\n        contents.Longitude = output.Longitude;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1GPSPointDimension = function (output, context) {\n    var contents = {\n        __type: \"GPSPointDimension\",\n        Coordinates: undefined,\n        RangeInKilometers: undefined\n    };\n    if (output.Coordinates !== undefined && output.Coordinates !== null) {\n        contents.Coordinates = deserializeAws_restJson1_1GPSCoordinates(output.Coordinates, context);\n    }\n    if (output.RangeInKilometers !== undefined &&\n        output.RangeInKilometers !== null) {\n        contents.RangeInKilometers = output.RangeInKilometers;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1HoldoutActivity = function (output, context) {\n    var contents = {\n        __type: \"HoldoutActivity\",\n        NextActivity: undefined,\n        Percentage: undefined\n    };\n    if (output.NextActivity !== undefined && output.NextActivity !== null) {\n        contents.NextActivity = output.NextActivity;\n    }\n    if (output.Percentage !== undefined && output.Percentage !== null) {\n        contents.Percentage = output.Percentage;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ImportJobResource = function (output, context) {\n    var contents = {\n        __type: \"ImportJobResource\",\n        DefineSegment: undefined,\n        ExternalId: undefined,\n        Format: undefined,\n        RegisterEndpoints: undefined,\n        RoleArn: undefined,\n        S3Url: undefined,\n        SegmentId: undefined,\n        SegmentName: undefined\n    };\n    if (output.DefineSegment !== undefined && output.DefineSegment !== null) {\n        contents.DefineSegment = output.DefineSegment;\n    }\n    if (output.ExternalId !== undefined && output.ExternalId !== null) {\n        contents.ExternalId = output.ExternalId;\n    }\n    if (output.Format !== undefined && output.Format !== null) {\n        contents.Format = output.Format;\n    }\n    if (output.RegisterEndpoints !== undefined &&\n        output.RegisterEndpoints !== null) {\n        contents.RegisterEndpoints = output.RegisterEndpoints;\n    }\n    if (output.RoleArn !== undefined && output.RoleArn !== null) {\n        contents.RoleArn = output.RoleArn;\n    }\n    if (output.S3Url !== undefined && output.S3Url !== null) {\n        contents.S3Url = output.S3Url;\n    }\n    if (output.SegmentId !== undefined && output.SegmentId !== null) {\n        contents.SegmentId = output.SegmentId;\n    }\n    if (output.SegmentName !== undefined && output.SegmentName !== null) {\n        contents.SegmentName = output.SegmentName;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ImportJobResponse = function (output, context) {\n    var contents = {\n        __type: \"ImportJobResponse\",\n        ApplicationId: undefined,\n        CompletedPieces: undefined,\n        CompletionDate: undefined,\n        CreationDate: undefined,\n        Definition: undefined,\n        FailedPieces: undefined,\n        Failures: undefined,\n        Id: undefined,\n        JobStatus: undefined,\n        TotalFailures: undefined,\n        TotalPieces: undefined,\n        TotalProcessed: undefined,\n        Type: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CompletedPieces !== undefined && output.CompletedPieces !== null) {\n        contents.CompletedPieces = output.CompletedPieces;\n    }\n    if (output.CompletionDate !== undefined && output.CompletionDate !== null) {\n        contents.CompletionDate = output.CompletionDate;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Definition !== undefined && output.Definition !== null) {\n        contents.Definition = deserializeAws_restJson1_1ImportJobResource(output.Definition, context);\n    }\n    if (output.FailedPieces !== undefined && output.FailedPieces !== null) {\n        contents.FailedPieces = output.FailedPieces;\n    }\n    if (output.Failures !== undefined && output.Failures !== null) {\n        contents.Failures = deserializeAws_restJson1_1ListOf__string(output.Failures, context);\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.JobStatus !== undefined && output.JobStatus !== null) {\n        contents.JobStatus = output.JobStatus;\n    }\n    if (output.TotalFailures !== undefined && output.TotalFailures !== null) {\n        contents.TotalFailures = output.TotalFailures;\n    }\n    if (output.TotalPieces !== undefined && output.TotalPieces !== null) {\n        contents.TotalPieces = output.TotalPieces;\n    }\n    if (output.TotalProcessed !== undefined && output.TotalProcessed !== null) {\n        contents.TotalProcessed = output.TotalProcessed;\n    }\n    if (output.Type !== undefined && output.Type !== null) {\n        contents.Type = output.Type;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ImportJobsResponse = function (output, context) {\n    var contents = {\n        __type: \"ImportJobsResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfImportJobResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ItemResponse = function (output, context) {\n    var contents = {\n        __type: \"ItemResponse\",\n        EndpointItemResponse: undefined,\n        EventsItemResponse: undefined\n    };\n    if (output.EndpointItemResponse !== undefined &&\n        output.EndpointItemResponse !== null) {\n        contents.EndpointItemResponse = deserializeAws_restJson1_1EndpointItemResponse(output.EndpointItemResponse, context);\n    }\n    if (output.EventsItemResponse !== undefined &&\n        output.EventsItemResponse !== null) {\n        contents.EventsItemResponse = deserializeAws_restJson1_1MapOfEventItemResponse(output.EventsItemResponse, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneyDateRangeKpiResponse = function (output, context) {\n    var contents = {\n        __type: \"JourneyDateRangeKpiResponse\",\n        ApplicationId: undefined,\n        EndTime: undefined,\n        JourneyId: undefined,\n        KpiName: undefined,\n        KpiResult: undefined,\n        NextToken: undefined,\n        StartTime: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.EndTime !== undefined && output.EndTime !== null) {\n        contents.EndTime = new Date(output.EndTime);\n    }\n    if (output.JourneyId !== undefined && output.JourneyId !== null) {\n        contents.JourneyId = output.JourneyId;\n    }\n    if (output.KpiName !== undefined && output.KpiName !== null) {\n        contents.KpiName = output.KpiName;\n    }\n    if (output.KpiResult !== undefined && output.KpiResult !== null) {\n        contents.KpiResult = deserializeAws_restJson1_1BaseKpiResult(output.KpiResult, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    if (output.StartTime !== undefined && output.StartTime !== null) {\n        contents.StartTime = new Date(output.StartTime);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneyEmailMessage = function (output, context) {\n    var contents = {\n        __type: \"JourneyEmailMessage\",\n        FromAddress: undefined\n    };\n    if (output.FromAddress !== undefined && output.FromAddress !== null) {\n        contents.FromAddress = output.FromAddress;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneyExecutionActivityMetricsResponse = function (output, context) {\n    var contents = {\n        __type: \"JourneyExecutionActivityMetricsResponse\",\n        ActivityType: undefined,\n        ApplicationId: undefined,\n        JourneyActivityId: undefined,\n        JourneyId: undefined,\n        LastEvaluatedTime: undefined,\n        Metrics: undefined\n    };\n    if (output.ActivityType !== undefined && output.ActivityType !== null) {\n        contents.ActivityType = output.ActivityType;\n    }\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.JourneyActivityId !== undefined &&\n        output.JourneyActivityId !== null) {\n        contents.JourneyActivityId = output.JourneyActivityId;\n    }\n    if (output.JourneyId !== undefined && output.JourneyId !== null) {\n        contents.JourneyId = output.JourneyId;\n    }\n    if (output.LastEvaluatedTime !== undefined &&\n        output.LastEvaluatedTime !== null) {\n        contents.LastEvaluatedTime = output.LastEvaluatedTime;\n    }\n    if (output.Metrics !== undefined && output.Metrics !== null) {\n        contents.Metrics = deserializeAws_restJson1_1MapOf__string(output.Metrics, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneyExecutionMetricsResponse = function (output, context) {\n    var contents = {\n        __type: \"JourneyExecutionMetricsResponse\",\n        ApplicationId: undefined,\n        JourneyId: undefined,\n        LastEvaluatedTime: undefined,\n        Metrics: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.JourneyId !== undefined && output.JourneyId !== null) {\n        contents.JourneyId = output.JourneyId;\n    }\n    if (output.LastEvaluatedTime !== undefined &&\n        output.LastEvaluatedTime !== null) {\n        contents.LastEvaluatedTime = output.LastEvaluatedTime;\n    }\n    if (output.Metrics !== undefined && output.Metrics !== null) {\n        contents.Metrics = deserializeAws_restJson1_1MapOf__string(output.Metrics, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneyLimits = function (output, context) {\n    var contents = {\n        __type: \"JourneyLimits\",\n        DailyCap: undefined,\n        EndpointReentryCap: undefined,\n        MessagesPerSecond: undefined\n    };\n    if (output.DailyCap !== undefined && output.DailyCap !== null) {\n        contents.DailyCap = output.DailyCap;\n    }\n    if (output.EndpointReentryCap !== undefined &&\n        output.EndpointReentryCap !== null) {\n        contents.EndpointReentryCap = output.EndpointReentryCap;\n    }\n    if (output.MessagesPerSecond !== undefined &&\n        output.MessagesPerSecond !== null) {\n        contents.MessagesPerSecond = output.MessagesPerSecond;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneyResponse = function (output, context) {\n    var contents = {\n        __type: \"JourneyResponse\",\n        Activities: undefined,\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Id: undefined,\n        LastModifiedDate: undefined,\n        Limits: undefined,\n        LocalTime: undefined,\n        Name: undefined,\n        QuietTime: undefined,\n        RefreshFrequency: undefined,\n        Schedule: undefined,\n        StartActivity: undefined,\n        StartCondition: undefined,\n        State: undefined,\n        tags: undefined\n    };\n    if (output.Activities !== undefined && output.Activities !== null) {\n        contents.Activities = deserializeAws_restJson1_1MapOfActivity(output.Activities, context);\n    }\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Limits !== undefined && output.Limits !== null) {\n        contents.Limits = deserializeAws_restJson1_1JourneyLimits(output.Limits, context);\n    }\n    if (output.LocalTime !== undefined && output.LocalTime !== null) {\n        contents.LocalTime = output.LocalTime;\n    }\n    if (output.Name !== undefined && output.Name !== null) {\n        contents.Name = output.Name;\n    }\n    if (output.QuietTime !== undefined && output.QuietTime !== null) {\n        contents.QuietTime = deserializeAws_restJson1_1QuietTime(output.QuietTime, context);\n    }\n    if (output.RefreshFrequency !== undefined &&\n        output.RefreshFrequency !== null) {\n        contents.RefreshFrequency = output.RefreshFrequency;\n    }\n    if (output.Schedule !== undefined && output.Schedule !== null) {\n        contents.Schedule = deserializeAws_restJson1_1JourneySchedule(output.Schedule, context);\n    }\n    if (output.StartActivity !== undefined && output.StartActivity !== null) {\n        contents.StartActivity = output.StartActivity;\n    }\n    if (output.StartCondition !== undefined && output.StartCondition !== null) {\n        contents.StartCondition = deserializeAws_restJson1_1StartCondition(output.StartCondition, context);\n    }\n    if (output.State !== undefined && output.State !== null) {\n        contents.State = output.State;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneySchedule = function (output, context) {\n    var contents = {\n        __type: \"JourneySchedule\",\n        EndTime: undefined,\n        StartTime: undefined,\n        Timezone: undefined\n    };\n    if (output.EndTime !== undefined && output.EndTime !== null) {\n        contents.EndTime = new Date(output.EndTime);\n    }\n    if (output.StartTime !== undefined && output.StartTime !== null) {\n        contents.StartTime = new Date(output.StartTime);\n    }\n    if (output.Timezone !== undefined && output.Timezone !== null) {\n        contents.Timezone = output.Timezone;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1JourneysResponse = function (output, context) {\n    var contents = {\n        __type: \"JourneysResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfJourneyResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ListOfActivityResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1ActivityResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfApplicationResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1ApplicationResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfCampaignResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1CampaignResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfEndpointResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1EndpointResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfExportJobResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1ExportJobResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfImportJobResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1ImportJobResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfJourneyResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1JourneyResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfMultiConditionalBranch = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1MultiConditionalBranch(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfRandomSplitEntry = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1RandomSplitEntry(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfResultRow = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1ResultRow(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfResultRowValue = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1ResultRowValue(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfSegmentDimensions = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1SegmentDimensions(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfSegmentGroup = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1SegmentGroup(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfSegmentReference = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1SegmentReference(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfSegmentResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1SegmentResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfSimpleCondition = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1SimpleCondition(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfTemplateResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1TemplateResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfTemplateVersionResponse = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1TemplateVersionResponse(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOfTreatmentResource = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_restJson1_1TreatmentResource(entry, context);\n    });\n};\nvar deserializeAws_restJson1_1ListOf__string = function (output, context) {\n    return (output || []).map(function (entry) { return entry; });\n};\nvar deserializeAws_restJson1_1MapOfActivity = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1Activity(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfAttributeDimension = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1AttributeDimension(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfChannelResponse = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1ChannelResponse(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfEndpointMessageResult = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1EndpointMessageResult(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfEventItemResponse = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1EventItemResponse(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfItemResponse = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1ItemResponse(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfListOf__string = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1ListOf__string(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfMapOfEndpointMessageResult = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1MapOfEndpointMessageResult(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfMessageResult = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1MessageResult(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOfMetricDimension = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = deserializeAws_restJson1_1MetricDimension(output[key], context);\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOf__double = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = output[key];\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOf__integer = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = output[key];\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1MapOf__string = function (output, context) {\n    var mapParams = {};\n    Object.keys(output).forEach(function (key) {\n        mapParams[key] = output[key];\n    });\n    return mapParams;\n};\nvar deserializeAws_restJson1_1Message = function (output, context) {\n    var contents = {\n        __type: \"Message\",\n        Action: undefined,\n        Body: undefined,\n        ImageIconUrl: undefined,\n        ImageSmallIconUrl: undefined,\n        ImageUrl: undefined,\n        JsonBody: undefined,\n        MediaUrl: undefined,\n        RawContent: undefined,\n        SilentPush: undefined,\n        TimeToLive: undefined,\n        Title: undefined,\n        Url: undefined\n    };\n    if (output.Action !== undefined && output.Action !== null) {\n        contents.Action = output.Action;\n    }\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.ImageIconUrl !== undefined && output.ImageIconUrl !== null) {\n        contents.ImageIconUrl = output.ImageIconUrl;\n    }\n    if (output.ImageSmallIconUrl !== undefined &&\n        output.ImageSmallIconUrl !== null) {\n        contents.ImageSmallIconUrl = output.ImageSmallIconUrl;\n    }\n    if (output.ImageUrl !== undefined && output.ImageUrl !== null) {\n        contents.ImageUrl = output.ImageUrl;\n    }\n    if (output.JsonBody !== undefined && output.JsonBody !== null) {\n        contents.JsonBody = output.JsonBody;\n    }\n    if (output.MediaUrl !== undefined && output.MediaUrl !== null) {\n        contents.MediaUrl = output.MediaUrl;\n    }\n    if (output.RawContent !== undefined && output.RawContent !== null) {\n        contents.RawContent = output.RawContent;\n    }\n    if (output.SilentPush !== undefined && output.SilentPush !== null) {\n        contents.SilentPush = output.SilentPush;\n    }\n    if (output.TimeToLive !== undefined && output.TimeToLive !== null) {\n        contents.TimeToLive = output.TimeToLive;\n    }\n    if (output.Title !== undefined && output.Title !== null) {\n        contents.Title = output.Title;\n    }\n    if (output.Url !== undefined && output.Url !== null) {\n        contents.Url = output.Url;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MessageBody = function (output, context) {\n    var contents = {\n        __type: \"MessageBody\",\n        Message: undefined,\n        RequestID: undefined\n    };\n    if (output.Message !== undefined && output.Message !== null) {\n        contents.Message = output.Message;\n    }\n    if (output.RequestID !== undefined && output.RequestID !== null) {\n        contents.RequestID = output.RequestID;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MessageConfiguration = function (output, context) {\n    var contents = {\n        __type: \"MessageConfiguration\",\n        ADMMessage: undefined,\n        APNSMessage: undefined,\n        BaiduMessage: undefined,\n        DefaultMessage: undefined,\n        EmailMessage: undefined,\n        GCMMessage: undefined,\n        SMSMessage: undefined\n    };\n    if (output.ADMMessage !== undefined && output.ADMMessage !== null) {\n        contents.ADMMessage = deserializeAws_restJson1_1Message(output.ADMMessage, context);\n    }\n    if (output.APNSMessage !== undefined && output.APNSMessage !== null) {\n        contents.APNSMessage = deserializeAws_restJson1_1Message(output.APNSMessage, context);\n    }\n    if (output.BaiduMessage !== undefined && output.BaiduMessage !== null) {\n        contents.BaiduMessage = deserializeAws_restJson1_1Message(output.BaiduMessage, context);\n    }\n    if (output.DefaultMessage !== undefined && output.DefaultMessage !== null) {\n        contents.DefaultMessage = deserializeAws_restJson1_1Message(output.DefaultMessage, context);\n    }\n    if (output.EmailMessage !== undefined && output.EmailMessage !== null) {\n        contents.EmailMessage = deserializeAws_restJson1_1CampaignEmailMessage(output.EmailMessage, context);\n    }\n    if (output.GCMMessage !== undefined && output.GCMMessage !== null) {\n        contents.GCMMessage = deserializeAws_restJson1_1Message(output.GCMMessage, context);\n    }\n    if (output.SMSMessage !== undefined && output.SMSMessage !== null) {\n        contents.SMSMessage = deserializeAws_restJson1_1CampaignSmsMessage(output.SMSMessage, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MessageResponse = function (output, context) {\n    var contents = {\n        __type: \"MessageResponse\",\n        ApplicationId: undefined,\n        EndpointResult: undefined,\n        RequestId: undefined,\n        Result: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.EndpointResult !== undefined && output.EndpointResult !== null) {\n        contents.EndpointResult = deserializeAws_restJson1_1MapOfEndpointMessageResult(output.EndpointResult, context);\n    }\n    if (output.RequestId !== undefined && output.RequestId !== null) {\n        contents.RequestId = output.RequestId;\n    }\n    if (output.Result !== undefined && output.Result !== null) {\n        contents.Result = deserializeAws_restJson1_1MapOfMessageResult(output.Result, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MessageResult = function (output, context) {\n    var contents = {\n        __type: \"MessageResult\",\n        DeliveryStatus: undefined,\n        MessageId: undefined,\n        StatusCode: undefined,\n        StatusMessage: undefined,\n        UpdatedToken: undefined\n    };\n    if (output.DeliveryStatus !== undefined && output.DeliveryStatus !== null) {\n        contents.DeliveryStatus = output.DeliveryStatus;\n    }\n    if (output.MessageId !== undefined && output.MessageId !== null) {\n        contents.MessageId = output.MessageId;\n    }\n    if (output.StatusCode !== undefined && output.StatusCode !== null) {\n        contents.StatusCode = output.StatusCode;\n    }\n    if (output.StatusMessage !== undefined && output.StatusMessage !== null) {\n        contents.StatusMessage = output.StatusMessage;\n    }\n    if (output.UpdatedToken !== undefined && output.UpdatedToken !== null) {\n        contents.UpdatedToken = output.UpdatedToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MetricDimension = function (output, context) {\n    var contents = {\n        __type: \"MetricDimension\",\n        ComparisonOperator: undefined,\n        Value: undefined\n    };\n    if (output.ComparisonOperator !== undefined &&\n        output.ComparisonOperator !== null) {\n        contents.ComparisonOperator = output.ComparisonOperator;\n    }\n    if (output.Value !== undefined && output.Value !== null) {\n        contents.Value = output.Value;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MultiConditionalBranch = function (output, context) {\n    var contents = {\n        __type: \"MultiConditionalBranch\",\n        Condition: undefined,\n        NextActivity: undefined\n    };\n    if (output.Condition !== undefined && output.Condition !== null) {\n        contents.Condition = deserializeAws_restJson1_1SimpleCondition(output.Condition, context);\n    }\n    if (output.NextActivity !== undefined && output.NextActivity !== null) {\n        contents.NextActivity = output.NextActivity;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1MultiConditionalSplitActivity = function (output, context) {\n    var contents = {\n        __type: \"MultiConditionalSplitActivity\",\n        Branches: undefined,\n        DefaultActivity: undefined,\n        EvaluationWaitTime: undefined\n    };\n    if (output.Branches !== undefined && output.Branches !== null) {\n        contents.Branches = deserializeAws_restJson1_1ListOfMultiConditionalBranch(output.Branches, context);\n    }\n    if (output.DefaultActivity !== undefined && output.DefaultActivity !== null) {\n        contents.DefaultActivity = output.DefaultActivity;\n    }\n    if (output.EvaluationWaitTime !== undefined &&\n        output.EvaluationWaitTime !== null) {\n        contents.EvaluationWaitTime = deserializeAws_restJson1_1WaitTime(output.EvaluationWaitTime, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1NumberValidateResponse = function (output, context) {\n    var contents = {\n        __type: \"NumberValidateResponse\",\n        Carrier: undefined,\n        City: undefined,\n        CleansedPhoneNumberE164: undefined,\n        CleansedPhoneNumberNational: undefined,\n        Country: undefined,\n        CountryCodeIso2: undefined,\n        CountryCodeNumeric: undefined,\n        County: undefined,\n        OriginalCountryCodeIso2: undefined,\n        OriginalPhoneNumber: undefined,\n        PhoneType: undefined,\n        PhoneTypeCode: undefined,\n        Timezone: undefined,\n        ZipCode: undefined\n    };\n    if (output.Carrier !== undefined && output.Carrier !== null) {\n        contents.Carrier = output.Carrier;\n    }\n    if (output.City !== undefined && output.City !== null) {\n        contents.City = output.City;\n    }\n    if (output.CleansedPhoneNumberE164 !== undefined &&\n        output.CleansedPhoneNumberE164 !== null) {\n        contents.CleansedPhoneNumberE164 = output.CleansedPhoneNumberE164;\n    }\n    if (output.CleansedPhoneNumberNational !== undefined &&\n        output.CleansedPhoneNumberNational !== null) {\n        contents.CleansedPhoneNumberNational = output.CleansedPhoneNumberNational;\n    }\n    if (output.Country !== undefined && output.Country !== null) {\n        contents.Country = output.Country;\n    }\n    if (output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null) {\n        contents.CountryCodeIso2 = output.CountryCodeIso2;\n    }\n    if (output.CountryCodeNumeric !== undefined &&\n        output.CountryCodeNumeric !== null) {\n        contents.CountryCodeNumeric = output.CountryCodeNumeric;\n    }\n    if (output.County !== undefined && output.County !== null) {\n        contents.County = output.County;\n    }\n    if (output.OriginalCountryCodeIso2 !== undefined &&\n        output.OriginalCountryCodeIso2 !== null) {\n        contents.OriginalCountryCodeIso2 = output.OriginalCountryCodeIso2;\n    }\n    if (output.OriginalPhoneNumber !== undefined &&\n        output.OriginalPhoneNumber !== null) {\n        contents.OriginalPhoneNumber = output.OriginalPhoneNumber;\n    }\n    if (output.PhoneType !== undefined && output.PhoneType !== null) {\n        contents.PhoneType = output.PhoneType;\n    }\n    if (output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null) {\n        contents.PhoneTypeCode = output.PhoneTypeCode;\n    }\n    if (output.Timezone !== undefined && output.Timezone !== null) {\n        contents.Timezone = output.Timezone;\n    }\n    if (output.ZipCode !== undefined && output.ZipCode !== null) {\n        contents.ZipCode = output.ZipCode;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1PushNotificationTemplateResponse = function (output, context) {\n    var contents = {\n        __type: \"PushNotificationTemplateResponse\",\n        ADM: undefined,\n        APNS: undefined,\n        Arn: undefined,\n        Baidu: undefined,\n        CreationDate: undefined,\n        Default: undefined,\n        DefaultSubstitutions: undefined,\n        GCM: undefined,\n        LastModifiedDate: undefined,\n        TemplateDescription: undefined,\n        TemplateName: undefined,\n        TemplateType: undefined,\n        Version: undefined,\n        tags: undefined\n    };\n    if (output.ADM !== undefined && output.ADM !== null) {\n        contents.ADM = deserializeAws_restJson1_1AndroidPushNotificationTemplate(output.ADM, context);\n    }\n    if (output.APNS !== undefined && output.APNS !== null) {\n        contents.APNS = deserializeAws_restJson1_1APNSPushNotificationTemplate(output.APNS, context);\n    }\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.Baidu !== undefined && output.Baidu !== null) {\n        contents.Baidu = deserializeAws_restJson1_1AndroidPushNotificationTemplate(output.Baidu, context);\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Default !== undefined && output.Default !== null) {\n        contents.Default = deserializeAws_restJson1_1DefaultPushNotificationTemplate(output.Default, context);\n    }\n    if (output.DefaultSubstitutions !== undefined &&\n        output.DefaultSubstitutions !== null) {\n        contents.DefaultSubstitutions = output.DefaultSubstitutions;\n    }\n    if (output.GCM !== undefined && output.GCM !== null) {\n        contents.GCM = deserializeAws_restJson1_1AndroidPushNotificationTemplate(output.GCM, context);\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.TemplateDescription !== undefined &&\n        output.TemplateDescription !== null) {\n        contents.TemplateDescription = output.TemplateDescription;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateType !== undefined && output.TemplateType !== null) {\n        contents.TemplateType = output.TemplateType;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1QuietTime = function (output, context) {\n    var contents = {\n        __type: \"QuietTime\",\n        End: undefined,\n        Start: undefined\n    };\n    if (output.End !== undefined && output.End !== null) {\n        contents.End = output.End;\n    }\n    if (output.Start !== undefined && output.Start !== null) {\n        contents.Start = output.Start;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1RandomSplitActivity = function (output, context) {\n    var contents = {\n        __type: \"RandomSplitActivity\",\n        Branches: undefined\n    };\n    if (output.Branches !== undefined && output.Branches !== null) {\n        contents.Branches = deserializeAws_restJson1_1ListOfRandomSplitEntry(output.Branches, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1RandomSplitEntry = function (output, context) {\n    var contents = {\n        __type: \"RandomSplitEntry\",\n        NextActivity: undefined,\n        Percentage: undefined\n    };\n    if (output.NextActivity !== undefined && output.NextActivity !== null) {\n        contents.NextActivity = output.NextActivity;\n    }\n    if (output.Percentage !== undefined && output.Percentage !== null) {\n        contents.Percentage = output.Percentage;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1RecencyDimension = function (output, context) {\n    var contents = {\n        __type: \"RecencyDimension\",\n        Duration: undefined,\n        RecencyType: undefined\n    };\n    if (output.Duration !== undefined && output.Duration !== null) {\n        contents.Duration = output.Duration;\n    }\n    if (output.RecencyType !== undefined && output.RecencyType !== null) {\n        contents.RecencyType = output.RecencyType;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ResultRow = function (output, context) {\n    var contents = {\n        __type: \"ResultRow\",\n        GroupedBys: undefined,\n        Values: undefined\n    };\n    if (output.GroupedBys !== undefined && output.GroupedBys !== null) {\n        contents.GroupedBys = deserializeAws_restJson1_1ListOfResultRowValue(output.GroupedBys, context);\n    }\n    if (output.Values !== undefined && output.Values !== null) {\n        contents.Values = deserializeAws_restJson1_1ListOfResultRowValue(output.Values, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1ResultRowValue = function (output, context) {\n    var contents = {\n        __type: \"ResultRowValue\",\n        Key: undefined,\n        Type: undefined,\n        Value: undefined\n    };\n    if (output.Key !== undefined && output.Key !== null) {\n        contents.Key = output.Key;\n    }\n    if (output.Type !== undefined && output.Type !== null) {\n        contents.Type = output.Type;\n    }\n    if (output.Value !== undefined && output.Value !== null) {\n        contents.Value = output.Value;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SMSChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"SMSChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        PromotionalMessagesPerSecond: undefined,\n        SenderId: undefined,\n        ShortCode: undefined,\n        TransactionalMessagesPerSecond: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.PromotionalMessagesPerSecond !== undefined &&\n        output.PromotionalMessagesPerSecond !== null) {\n        contents.PromotionalMessagesPerSecond = output.PromotionalMessagesPerSecond;\n    }\n    if (output.SenderId !== undefined && output.SenderId !== null) {\n        contents.SenderId = output.SenderId;\n    }\n    if (output.ShortCode !== undefined && output.ShortCode !== null) {\n        contents.ShortCode = output.ShortCode;\n    }\n    if (output.TransactionalMessagesPerSecond !== undefined &&\n        output.TransactionalMessagesPerSecond !== null) {\n        contents.TransactionalMessagesPerSecond =\n            output.TransactionalMessagesPerSecond;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SMSTemplateResponse = function (output, context) {\n    var contents = {\n        __type: \"SMSTemplateResponse\",\n        Arn: undefined,\n        Body: undefined,\n        CreationDate: undefined,\n        DefaultSubstitutions: undefined,\n        LastModifiedDate: undefined,\n        TemplateDescription: undefined,\n        TemplateName: undefined,\n        TemplateType: undefined,\n        Version: undefined,\n        tags: undefined\n    };\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultSubstitutions !== undefined &&\n        output.DefaultSubstitutions !== null) {\n        contents.DefaultSubstitutions = output.DefaultSubstitutions;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.TemplateDescription !== undefined &&\n        output.TemplateDescription !== null) {\n        contents.TemplateDescription = output.TemplateDescription;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateType !== undefined && output.TemplateType !== null) {\n        contents.TemplateType = output.TemplateType;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1Schedule = function (output, context) {\n    var contents = {\n        __type: \"Schedule\",\n        EndTime: undefined,\n        EventFilter: undefined,\n        Frequency: undefined,\n        IsLocalTime: undefined,\n        QuietTime: undefined,\n        StartTime: undefined,\n        Timezone: undefined\n    };\n    if (output.EndTime !== undefined && output.EndTime !== null) {\n        contents.EndTime = output.EndTime;\n    }\n    if (output.EventFilter !== undefined && output.EventFilter !== null) {\n        contents.EventFilter = deserializeAws_restJson1_1CampaignEventFilter(output.EventFilter, context);\n    }\n    if (output.Frequency !== undefined && output.Frequency !== null) {\n        contents.Frequency = output.Frequency;\n    }\n    if (output.IsLocalTime !== undefined && output.IsLocalTime !== null) {\n        contents.IsLocalTime = output.IsLocalTime;\n    }\n    if (output.QuietTime !== undefined && output.QuietTime !== null) {\n        contents.QuietTime = deserializeAws_restJson1_1QuietTime(output.QuietTime, context);\n    }\n    if (output.StartTime !== undefined && output.StartTime !== null) {\n        contents.StartTime = output.StartTime;\n    }\n    if (output.Timezone !== undefined && output.Timezone !== null) {\n        contents.Timezone = output.Timezone;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentBehaviors = function (output, context) {\n    var contents = {\n        __type: \"SegmentBehaviors\",\n        Recency: undefined\n    };\n    if (output.Recency !== undefined && output.Recency !== null) {\n        contents.Recency = deserializeAws_restJson1_1RecencyDimension(output.Recency, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentCondition = function (output, context) {\n    var contents = {\n        __type: \"SegmentCondition\",\n        SegmentId: undefined\n    };\n    if (output.SegmentId !== undefined && output.SegmentId !== null) {\n        contents.SegmentId = output.SegmentId;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentDemographics = function (output, context) {\n    var contents = {\n        __type: \"SegmentDemographics\",\n        AppVersion: undefined,\n        Channel: undefined,\n        DeviceType: undefined,\n        Make: undefined,\n        Model: undefined,\n        Platform: undefined\n    };\n    if (output.AppVersion !== undefined && output.AppVersion !== null) {\n        contents.AppVersion = deserializeAws_restJson1_1SetDimension(output.AppVersion, context);\n    }\n    if (output.Channel !== undefined && output.Channel !== null) {\n        contents.Channel = deserializeAws_restJson1_1SetDimension(output.Channel, context);\n    }\n    if (output.DeviceType !== undefined && output.DeviceType !== null) {\n        contents.DeviceType = deserializeAws_restJson1_1SetDimension(output.DeviceType, context);\n    }\n    if (output.Make !== undefined && output.Make !== null) {\n        contents.Make = deserializeAws_restJson1_1SetDimension(output.Make, context);\n    }\n    if (output.Model !== undefined && output.Model !== null) {\n        contents.Model = deserializeAws_restJson1_1SetDimension(output.Model, context);\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = deserializeAws_restJson1_1SetDimension(output.Platform, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentDimensions = function (output, context) {\n    var contents = {\n        __type: \"SegmentDimensions\",\n        Attributes: undefined,\n        Behavior: undefined,\n        Demographic: undefined,\n        Location: undefined,\n        Metrics: undefined,\n        UserAttributes: undefined\n    };\n    if (output.Attributes !== undefined && output.Attributes !== null) {\n        contents.Attributes = deserializeAws_restJson1_1MapOfAttributeDimension(output.Attributes, context);\n    }\n    if (output.Behavior !== undefined && output.Behavior !== null) {\n        contents.Behavior = deserializeAws_restJson1_1SegmentBehaviors(output.Behavior, context);\n    }\n    if (output.Demographic !== undefined && output.Demographic !== null) {\n        contents.Demographic = deserializeAws_restJson1_1SegmentDemographics(output.Demographic, context);\n    }\n    if (output.Location !== undefined && output.Location !== null) {\n        contents.Location = deserializeAws_restJson1_1SegmentLocation(output.Location, context);\n    }\n    if (output.Metrics !== undefined && output.Metrics !== null) {\n        contents.Metrics = deserializeAws_restJson1_1MapOfMetricDimension(output.Metrics, context);\n    }\n    if (output.UserAttributes !== undefined && output.UserAttributes !== null) {\n        contents.UserAttributes = deserializeAws_restJson1_1MapOfAttributeDimension(output.UserAttributes, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentGroup = function (output, context) {\n    var contents = {\n        __type: \"SegmentGroup\",\n        Dimensions: undefined,\n        SourceSegments: undefined,\n        SourceType: undefined,\n        Type: undefined\n    };\n    if (output.Dimensions !== undefined && output.Dimensions !== null) {\n        contents.Dimensions = deserializeAws_restJson1_1ListOfSegmentDimensions(output.Dimensions, context);\n    }\n    if (output.SourceSegments !== undefined && output.SourceSegments !== null) {\n        contents.SourceSegments = deserializeAws_restJson1_1ListOfSegmentReference(output.SourceSegments, context);\n    }\n    if (output.SourceType !== undefined && output.SourceType !== null) {\n        contents.SourceType = output.SourceType;\n    }\n    if (output.Type !== undefined && output.Type !== null) {\n        contents.Type = output.Type;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentGroupList = function (output, context) {\n    var contents = {\n        __type: \"SegmentGroupList\",\n        Groups: undefined,\n        Include: undefined\n    };\n    if (output.Groups !== undefined && output.Groups !== null) {\n        contents.Groups = deserializeAws_restJson1_1ListOfSegmentGroup(output.Groups, context);\n    }\n    if (output.Include !== undefined && output.Include !== null) {\n        contents.Include = output.Include;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentImportResource = function (output, context) {\n    var contents = {\n        __type: \"SegmentImportResource\",\n        ChannelCounts: undefined,\n        ExternalId: undefined,\n        Format: undefined,\n        RoleArn: undefined,\n        S3Url: undefined,\n        Size: undefined\n    };\n    if (output.ChannelCounts !== undefined && output.ChannelCounts !== null) {\n        contents.ChannelCounts = deserializeAws_restJson1_1MapOf__integer(output.ChannelCounts, context);\n    }\n    if (output.ExternalId !== undefined && output.ExternalId !== null) {\n        contents.ExternalId = output.ExternalId;\n    }\n    if (output.Format !== undefined && output.Format !== null) {\n        contents.Format = output.Format;\n    }\n    if (output.RoleArn !== undefined && output.RoleArn !== null) {\n        contents.RoleArn = output.RoleArn;\n    }\n    if (output.S3Url !== undefined && output.S3Url !== null) {\n        contents.S3Url = output.S3Url;\n    }\n    if (output.Size !== undefined && output.Size !== null) {\n        contents.Size = output.Size;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentLocation = function (output, context) {\n    var contents = {\n        __type: \"SegmentLocation\",\n        Country: undefined,\n        GPSPoint: undefined\n    };\n    if (output.Country !== undefined && output.Country !== null) {\n        contents.Country = deserializeAws_restJson1_1SetDimension(output.Country, context);\n    }\n    if (output.GPSPoint !== undefined && output.GPSPoint !== null) {\n        contents.GPSPoint = deserializeAws_restJson1_1GPSPointDimension(output.GPSPoint, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentReference = function (output, context) {\n    var contents = {\n        __type: \"SegmentReference\",\n        Id: undefined,\n        Version: undefined\n    };\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentResponse = function (output, context) {\n    var contents = {\n        __type: \"SegmentResponse\",\n        ApplicationId: undefined,\n        Arn: undefined,\n        CreationDate: undefined,\n        Dimensions: undefined,\n        Id: undefined,\n        ImportDefinition: undefined,\n        LastModifiedDate: undefined,\n        Name: undefined,\n        SegmentGroups: undefined,\n        SegmentType: undefined,\n        Version: undefined,\n        tags: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Dimensions !== undefined && output.Dimensions !== null) {\n        contents.Dimensions = deserializeAws_restJson1_1SegmentDimensions(output.Dimensions, context);\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.ImportDefinition !== undefined &&\n        output.ImportDefinition !== null) {\n        contents.ImportDefinition = deserializeAws_restJson1_1SegmentImportResource(output.ImportDefinition, context);\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Name !== undefined && output.Name !== null) {\n        contents.Name = output.Name;\n    }\n    if (output.SegmentGroups !== undefined && output.SegmentGroups !== null) {\n        contents.SegmentGroups = deserializeAws_restJson1_1SegmentGroupList(output.SegmentGroups, context);\n    }\n    if (output.SegmentType !== undefined && output.SegmentType !== null) {\n        contents.SegmentType = output.SegmentType;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SegmentsResponse = function (output, context) {\n    var contents = {\n        __type: \"SegmentsResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfSegmentResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SendUsersMessageResponse = function (output, context) {\n    var contents = {\n        __type: \"SendUsersMessageResponse\",\n        ApplicationId: undefined,\n        RequestId: undefined,\n        Result: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.RequestId !== undefined && output.RequestId !== null) {\n        contents.RequestId = output.RequestId;\n    }\n    if (output.Result !== undefined && output.Result !== null) {\n        contents.Result = deserializeAws_restJson1_1MapOfMapOfEndpointMessageResult(output.Result, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SetDimension = function (output, context) {\n    var contents = {\n        __type: \"SetDimension\",\n        DimensionType: undefined,\n        Values: undefined\n    };\n    if (output.DimensionType !== undefined && output.DimensionType !== null) {\n        contents.DimensionType = output.DimensionType;\n    }\n    if (output.Values !== undefined && output.Values !== null) {\n        contents.Values = deserializeAws_restJson1_1ListOf__string(output.Values, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1SimpleCondition = function (output, context) {\n    var contents = {\n        __type: \"SimpleCondition\",\n        EventCondition: undefined,\n        SegmentCondition: undefined,\n        SegmentDimensions: undefined\n    };\n    if (output.EventCondition !== undefined && output.EventCondition !== null) {\n        contents.EventCondition = deserializeAws_restJson1_1EventCondition(output.EventCondition, context);\n    }\n    if (output.SegmentCondition !== undefined &&\n        output.SegmentCondition !== null) {\n        contents.SegmentCondition = deserializeAws_restJson1_1SegmentCondition(output.SegmentCondition, context);\n    }\n    if (output.segmentDimensions !== undefined &&\n        output.segmentDimensions !== null) {\n        contents.SegmentDimensions = deserializeAws_restJson1_1SegmentDimensions(output.segmentDimensions, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1StartCondition = function (output, context) {\n    var contents = {\n        __type: \"StartCondition\",\n        Description: undefined,\n        SegmentStartCondition: undefined\n    };\n    if (output.Description !== undefined && output.Description !== null) {\n        contents.Description = output.Description;\n    }\n    if (output.SegmentStartCondition !== undefined &&\n        output.SegmentStartCondition !== null) {\n        contents.SegmentStartCondition = deserializeAws_restJson1_1SegmentCondition(output.SegmentStartCondition, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TagsModel = function (output, context) {\n    var contents = {\n        __type: \"TagsModel\",\n        tags: undefined\n    };\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1Template = function (output, context) {\n    var contents = {\n        __type: \"Template\",\n        Name: undefined,\n        Version: undefined\n    };\n    if (output.Name !== undefined && output.Name !== null) {\n        contents.Name = output.Name;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TemplateConfiguration = function (output, context) {\n    var contents = {\n        __type: \"TemplateConfiguration\",\n        EmailTemplate: undefined,\n        PushTemplate: undefined,\n        SMSTemplate: undefined,\n        VoiceTemplate: undefined\n    };\n    if (output.EmailTemplate !== undefined && output.EmailTemplate !== null) {\n        contents.EmailTemplate = deserializeAws_restJson1_1Template(output.EmailTemplate, context);\n    }\n    if (output.PushTemplate !== undefined && output.PushTemplate !== null) {\n        contents.PushTemplate = deserializeAws_restJson1_1Template(output.PushTemplate, context);\n    }\n    if (output.SMSTemplate !== undefined && output.SMSTemplate !== null) {\n        contents.SMSTemplate = deserializeAws_restJson1_1Template(output.SMSTemplate, context);\n    }\n    if (output.VoiceTemplate !== undefined && output.VoiceTemplate !== null) {\n        contents.VoiceTemplate = deserializeAws_restJson1_1Template(output.VoiceTemplate, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TemplateResponse = function (output, context) {\n    var contents = {\n        __type: \"TemplateResponse\",\n        Arn: undefined,\n        CreationDate: undefined,\n        DefaultSubstitutions: undefined,\n        LastModifiedDate: undefined,\n        TemplateDescription: undefined,\n        TemplateName: undefined,\n        TemplateType: undefined,\n        Version: undefined,\n        tags: undefined\n    };\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultSubstitutions !== undefined &&\n        output.DefaultSubstitutions !== null) {\n        contents.DefaultSubstitutions = output.DefaultSubstitutions;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.TemplateDescription !== undefined &&\n        output.TemplateDescription !== null) {\n        contents.TemplateDescription = output.TemplateDescription;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateType !== undefined && output.TemplateType !== null) {\n        contents.TemplateType = output.TemplateType;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TemplateVersionResponse = function (output, context) {\n    var contents = {\n        __type: \"TemplateVersionResponse\",\n        CreationDate: undefined,\n        DefaultSubstitutions: undefined,\n        LastModifiedDate: undefined,\n        TemplateDescription: undefined,\n        TemplateName: undefined,\n        TemplateType: undefined,\n        Version: undefined\n    };\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultSubstitutions !== undefined &&\n        output.DefaultSubstitutions !== null) {\n        contents.DefaultSubstitutions = output.DefaultSubstitutions;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.TemplateDescription !== undefined &&\n        output.TemplateDescription !== null) {\n        contents.TemplateDescription = output.TemplateDescription;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateType !== undefined && output.TemplateType !== null) {\n        contents.TemplateType = output.TemplateType;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TemplateVersionsResponse = function (output, context) {\n    var contents = {\n        __type: \"TemplateVersionsResponse\",\n        Item: undefined,\n        Message: undefined,\n        NextToken: undefined,\n        RequestID: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfTemplateVersionResponse(output.Item, context);\n    }\n    if (output.Message !== undefined && output.Message !== null) {\n        contents.Message = output.Message;\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    if (output.RequestID !== undefined && output.RequestID !== null) {\n        contents.RequestID = output.RequestID;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TemplatesResponse = function (output, context) {\n    var contents = {\n        __type: \"TemplatesResponse\",\n        Item: undefined,\n        NextToken: undefined\n    };\n    if (output.Item !== undefined && output.Item !== null) {\n        contents.Item = deserializeAws_restJson1_1ListOfTemplateResponse(output.Item, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1TreatmentResource = function (output, context) {\n    var contents = {\n        __type: \"TreatmentResource\",\n        Id: undefined,\n        MessageConfiguration: undefined,\n        Schedule: undefined,\n        SizePercent: undefined,\n        State: undefined,\n        TemplateConfiguration: undefined,\n        TreatmentDescription: undefined,\n        TreatmentName: undefined\n    };\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.MessageConfiguration !== undefined &&\n        output.MessageConfiguration !== null) {\n        contents.MessageConfiguration = deserializeAws_restJson1_1MessageConfiguration(output.MessageConfiguration, context);\n    }\n    if (output.Schedule !== undefined && output.Schedule !== null) {\n        contents.Schedule = deserializeAws_restJson1_1Schedule(output.Schedule, context);\n    }\n    if (output.SizePercent !== undefined && output.SizePercent !== null) {\n        contents.SizePercent = output.SizePercent;\n    }\n    if (output.State !== undefined && output.State !== null) {\n        contents.State = deserializeAws_restJson1_1CampaignState(output.State, context);\n    }\n    if (output.TemplateConfiguration !== undefined &&\n        output.TemplateConfiguration !== null) {\n        contents.TemplateConfiguration = deserializeAws_restJson1_1TemplateConfiguration(output.TemplateConfiguration, context);\n    }\n    if (output.TreatmentDescription !== undefined &&\n        output.TreatmentDescription !== null) {\n        contents.TreatmentDescription = output.TreatmentDescription;\n    }\n    if (output.TreatmentName !== undefined && output.TreatmentName !== null) {\n        contents.TreatmentName = output.TreatmentName;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1VoiceChannelResponse = function (output, context) {\n    var contents = {\n        __type: \"VoiceChannelResponse\",\n        ApplicationId: undefined,\n        CreationDate: undefined,\n        Enabled: undefined,\n        HasCredential: undefined,\n        Id: undefined,\n        IsArchived: undefined,\n        LastModifiedBy: undefined,\n        LastModifiedDate: undefined,\n        Platform: undefined,\n        Version: undefined\n    };\n    if (output.ApplicationId !== undefined && output.ApplicationId !== null) {\n        contents.ApplicationId = output.ApplicationId;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.Enabled !== undefined && output.Enabled !== null) {\n        contents.Enabled = output.Enabled;\n    }\n    if (output.HasCredential !== undefined && output.HasCredential !== null) {\n        contents.HasCredential = output.HasCredential;\n    }\n    if (output.Id !== undefined && output.Id !== null) {\n        contents.Id = output.Id;\n    }\n    if (output.IsArchived !== undefined && output.IsArchived !== null) {\n        contents.IsArchived = output.IsArchived;\n    }\n    if (output.LastModifiedBy !== undefined && output.LastModifiedBy !== null) {\n        contents.LastModifiedBy = output.LastModifiedBy;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.Platform !== undefined && output.Platform !== null) {\n        contents.Platform = output.Platform;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1VoiceTemplateResponse = function (output, context) {\n    var contents = {\n        __type: \"VoiceTemplateResponse\",\n        Arn: undefined,\n        Body: undefined,\n        CreationDate: undefined,\n        DefaultSubstitutions: undefined,\n        LanguageCode: undefined,\n        LastModifiedDate: undefined,\n        TemplateDescription: undefined,\n        TemplateName: undefined,\n        TemplateType: undefined,\n        Version: undefined,\n        VoiceId: undefined,\n        tags: undefined\n    };\n    if (output.Arn !== undefined && output.Arn !== null) {\n        contents.Arn = output.Arn;\n    }\n    if (output.Body !== undefined && output.Body !== null) {\n        contents.Body = output.Body;\n    }\n    if (output.CreationDate !== undefined && output.CreationDate !== null) {\n        contents.CreationDate = output.CreationDate;\n    }\n    if (output.DefaultSubstitutions !== undefined &&\n        output.DefaultSubstitutions !== null) {\n        contents.DefaultSubstitutions = output.DefaultSubstitutions;\n    }\n    if (output.LanguageCode !== undefined && output.LanguageCode !== null) {\n        contents.LanguageCode = output.LanguageCode;\n    }\n    if (output.LastModifiedDate !== undefined &&\n        output.LastModifiedDate !== null) {\n        contents.LastModifiedDate = output.LastModifiedDate;\n    }\n    if (output.TemplateDescription !== undefined &&\n        output.TemplateDescription !== null) {\n        contents.TemplateDescription = output.TemplateDescription;\n    }\n    if (output.TemplateName !== undefined && output.TemplateName !== null) {\n        contents.TemplateName = output.TemplateName;\n    }\n    if (output.TemplateType !== undefined && output.TemplateType !== null) {\n        contents.TemplateType = output.TemplateType;\n    }\n    if (output.Version !== undefined && output.Version !== null) {\n        contents.Version = output.Version;\n    }\n    if (output.VoiceId !== undefined && output.VoiceId !== null) {\n        contents.VoiceId = output.VoiceId;\n    }\n    if (output.tags !== undefined && output.tags !== null) {\n        contents.tags = deserializeAws_restJson1_1MapOf__string(output.tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1WaitActivity = function (output, context) {\n    var contents = {\n        __type: \"WaitActivity\",\n        NextActivity: undefined,\n        WaitTime: undefined\n    };\n    if (output.NextActivity !== undefined && output.NextActivity !== null) {\n        contents.NextActivity = output.NextActivity;\n    }\n    if (output.WaitTime !== undefined && output.WaitTime !== null) {\n        contents.WaitTime = deserializeAws_restJson1_1WaitTime(output.WaitTime, context);\n    }\n    return contents;\n};\nvar deserializeAws_restJson1_1WaitTime = function (output, context) {\n    var contents = {\n        __type: \"WaitTime\",\n        WaitFor: undefined,\n        WaitUntil: undefined\n    };\n    if (output.WaitFor !== undefined && output.WaitFor !== null) {\n        contents.WaitFor = output.WaitFor;\n    }\n    if (output.WaitUntil !== undefined && output.WaitUntil !== null) {\n        contents.WaitUntil = output.WaitUntil;\n    }\n    return contents;\n};\nvar deserializeMetadata = function (output) { return ({\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n}); };\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return (context.streamCollector(streamBody) || Promise.resolve(new Uint8Array()));\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) {\n        return context.utf8Encoder(body);\n    });\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n    var findKey = function (object, key) {\n        return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); });\n    };\n    var sanitizeErrorCode = function (rawValue) {\n        var cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restJson1_1.js.map"]},"metadata":{},"sourceType":"module"}