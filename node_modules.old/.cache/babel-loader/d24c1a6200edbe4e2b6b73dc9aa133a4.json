{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function serializeAws_json1_1AddTagsToStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.AddTagsToStream\";\n      body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1CreateStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.CreateStream\";\n      body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DecreaseStreamRetentionPeriodCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DecreaseStreamRetentionPeriod\";\n      body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DeleteStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DeleteStream\";\n      body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DeregisterStreamConsumerCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DeregisterStreamConsumer\";\n      body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DescribeLimitsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeLimits\";\n      body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DescribeStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeStream\";\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DescribeStreamConsumerCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeStreamConsumer\";\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DescribeStreamSummaryCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeStreamSummary\";\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1DisableEnhancedMonitoringCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DisableEnhancedMonitoring\";\n      body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1EnableEnhancedMonitoringCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.EnableEnhancedMonitoring\";\n      body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1GetRecordsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.GetRecords\";\n      body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1GetShardIteratorCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.GetShardIterator\";\n      body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1IncreaseStreamRetentionPeriodCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.IncreaseStreamRetentionPeriod\";\n      body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1ListShardsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListShards\";\n      body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1ListStreamConsumersCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListStreamConsumers\";\n      body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1ListStreamsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListStreams\";\n      body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1ListTagsForStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListTagsForStream\";\n      body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1MergeShardsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.MergeShards\";\n      body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1PutRecordCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.PutRecord\";\n      body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1PutRecordsCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.PutRecords\";\n      body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1RegisterStreamConsumerCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.RegisterStreamConsumer\";\n      body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1RemoveTagsFromStreamCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.RemoveTagsFromStream\";\n      body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1SplitShardCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.SplitShard\";\n      body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1StartStreamEncryptionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.StartStreamEncryption\";\n      body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1StopStreamEncryptionCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.StopStreamEncryption\";\n      body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1SubscribeToShardCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.SubscribeToShard\";\n      body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function serializeAws_json1_1UpdateShardCountCommand(input, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {};\n      headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n      headers[\"X-Amz-Target\"] = \"Kinesis_20131202.UpdateShardCount\";\n      body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n}\nexport function deserializeAws_json1_1AddTagsToStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1AddTagsToStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1CreateStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1CreateStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DeleteStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DeleteStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DeregisterStreamConsumerCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DescribeLimitsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeLimitsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DescribeLimitsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DescribeStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DescribeStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DescribeStreamConsumerCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamConsumerOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DescribeStreamSummaryCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamSummaryOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1DisableEnhancedMonitoringCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"EnhancedMonitoringOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1EnableEnhancedMonitoringCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"EnhancedMonitoringOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1GetRecordsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetRecordsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"GetRecordsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1GetRecordsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ExpiredIteratorException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#ExpiredIteratorException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1GetShardIteratorCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"GetShardIteratorOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1GetShardIteratorCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1ListShardsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListShardsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListShardsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListShardsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1ListShardsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1ListStreamConsumersCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListStreamConsumersOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1ListStreamConsumersCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1ListStreamsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListStreamsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListStreamsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1ListStreamsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1ListTagsForStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListTagsForStreamOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1ListTagsForStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1MergeShardsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1MergeShardsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1MergeShardsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1PutRecordCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRecordCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"PutRecordOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1PutRecordCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1PutRecordsCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRecordsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"PutRecordsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1PutRecordsCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1RegisterStreamConsumerCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"RegisterStreamConsumerOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1RemoveTagsFromStreamCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1SplitShardCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1SplitShardCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1SplitShardCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1StartStreamEncryptionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1StartStreamEncryptionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1StopStreamEncryptionCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1StopStreamEncryptionCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1SubscribeToShardCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"SubscribeToShardOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1SubscribeToShardCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nexport function deserializeAws_json1_1UpdateShardCountCommand(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateShardCountOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n}\n\nfunction deserializeAws_json1_1UpdateShardCountCommandError(output, context) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis.v20131202#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n}\n\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n      contents = __assign({\n        name: \"ExpiredIteratorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n      contents = __assign({\n        name: \"ExpiredNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n      contents = __assign({\n        name: \"InvalidArgumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n      contents = __assign({\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n      contents = __assign({\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n      contents = __assign({\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n      contents = __assign({\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n      contents = __assign({\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n      contents = __assign({\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n      contents = __assign({\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_json1_1AddTagsToStreamInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  if (input.Tags !== undefined) {\n    bodyParams[\"Tags\"] = serializeAws_json1_1TagMap(input.Tags, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1CreateStreamInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ShardCount !== undefined) {\n    bodyParams[\"ShardCount\"] = input.ShardCount;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.RetentionPeriodHours !== undefined) {\n    bodyParams[\"RetentionPeriodHours\"] = input.RetentionPeriodHours;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DeleteStreamInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EnforceConsumerDeletion !== undefined) {\n    bodyParams[\"EnforceConsumerDeletion\"] = input.EnforceConsumerDeletion;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ConsumerARN !== undefined) {\n    bodyParams[\"ConsumerARN\"] = input.ConsumerARN;\n  }\n\n  if (input.ConsumerName !== undefined) {\n    bodyParams[\"ConsumerName\"] = input.ConsumerName;\n  }\n\n  if (input.StreamARN !== undefined) {\n    bodyParams[\"StreamARN\"] = input.StreamARN;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DescribeLimitsInput = function (input, context) {\n  var bodyParams = {};\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DescribeStreamConsumerInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ConsumerARN !== undefined) {\n    bodyParams[\"ConsumerARN\"] = input.ConsumerARN;\n  }\n\n  if (input.ConsumerName !== undefined) {\n    bodyParams[\"ConsumerName\"] = input.ConsumerName;\n  }\n\n  if (input.StreamARN !== undefined) {\n    bodyParams[\"StreamARN\"] = input.StreamARN;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DescribeStreamInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ExclusiveStartShardId !== undefined) {\n    bodyParams[\"ExclusiveStartShardId\"] = input.ExclusiveStartShardId;\n  }\n\n  if (input.Limit !== undefined) {\n    bodyParams[\"Limit\"] = input.Limit;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DescribeStreamSummaryInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ShardLevelMetrics !== undefined) {\n    bodyParams[\"ShardLevelMetrics\"] = serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context);\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ShardLevelMetrics !== undefined) {\n    bodyParams[\"ShardLevelMetrics\"] = serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context);\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1GetRecordsInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Limit !== undefined) {\n    bodyParams[\"Limit\"] = input.Limit;\n  }\n\n  if (input.ShardIterator !== undefined) {\n    bodyParams[\"ShardIterator\"] = input.ShardIterator;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1GetShardIteratorInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ShardId !== undefined) {\n    bodyParams[\"ShardId\"] = input.ShardId;\n  }\n\n  if (input.ShardIteratorType !== undefined) {\n    bodyParams[\"ShardIteratorType\"] = input.ShardIteratorType;\n  }\n\n  if (input.StartingSequenceNumber !== undefined) {\n    bodyParams[\"StartingSequenceNumber\"] = input.StartingSequenceNumber;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  if (input.Timestamp !== undefined) {\n    bodyParams[\"Timestamp\"] = Math.round(input.Timestamp.getTime() / 1000);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.RetentionPeriodHours !== undefined) {\n    bodyParams[\"RetentionPeriodHours\"] = input.RetentionPeriodHours;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1ListShardsInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ExclusiveStartShardId !== undefined) {\n    bodyParams[\"ExclusiveStartShardId\"] = input.ExclusiveStartShardId;\n  }\n\n  if (input.MaxResults !== undefined) {\n    bodyParams[\"MaxResults\"] = input.MaxResults;\n  }\n\n  if (input.NextToken !== undefined) {\n    bodyParams[\"NextToken\"] = input.NextToken;\n  }\n\n  if (input.StreamCreationTimestamp !== undefined) {\n    bodyParams[\"StreamCreationTimestamp\"] = Math.round(input.StreamCreationTimestamp.getTime() / 1000);\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1ListStreamConsumersInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.MaxResults !== undefined) {\n    bodyParams[\"MaxResults\"] = input.MaxResults;\n  }\n\n  if (input.NextToken !== undefined) {\n    bodyParams[\"NextToken\"] = input.NextToken;\n  }\n\n  if (input.StreamARN !== undefined) {\n    bodyParams[\"StreamARN\"] = input.StreamARN;\n  }\n\n  if (input.StreamCreationTimestamp !== undefined) {\n    bodyParams[\"StreamCreationTimestamp\"] = Math.round(input.StreamCreationTimestamp.getTime() / 1000);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1ListStreamsInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ExclusiveStartStreamName !== undefined) {\n    bodyParams[\"ExclusiveStartStreamName\"] = input.ExclusiveStartStreamName;\n  }\n\n  if (input.Limit !== undefined) {\n    bodyParams[\"Limit\"] = input.Limit;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1ListTagsForStreamInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ExclusiveStartTagKey !== undefined) {\n    bodyParams[\"ExclusiveStartTagKey\"] = input.ExclusiveStartTagKey;\n  }\n\n  if (input.Limit !== undefined) {\n    bodyParams[\"Limit\"] = input.Limit;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1MergeShardsInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.AdjacentShardToMerge !== undefined) {\n    bodyParams[\"AdjacentShardToMerge\"] = input.AdjacentShardToMerge;\n  }\n\n  if (input.ShardToMerge !== undefined) {\n    bodyParams[\"ShardToMerge\"] = input.ShardToMerge;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1MetricsNameList = function (input, context) {\n  var e_1, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n      var entry = input_1_1.value;\n      contents.push(entry);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_json1_1PutRecordInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = context.base64Encoder(input.Data);\n  }\n\n  if (input.ExplicitHashKey !== undefined) {\n    bodyParams[\"ExplicitHashKey\"] = input.ExplicitHashKey;\n  }\n\n  if (input.PartitionKey !== undefined) {\n    bodyParams[\"PartitionKey\"] = input.PartitionKey;\n  }\n\n  if (input.SequenceNumberForOrdering !== undefined) {\n    bodyParams[\"SequenceNumberForOrdering\"] = input.SequenceNumberForOrdering;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1PutRecordsInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Records !== undefined) {\n    bodyParams[\"Records\"] = serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context);\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1PutRecordsRequestEntry = function (input, context) {\n  var bodyParams = {};\n\n  if (input.Data !== undefined) {\n    bodyParams[\"Data\"] = context.base64Encoder(input.Data);\n  }\n\n  if (input.ExplicitHashKey !== undefined) {\n    bodyParams[\"ExplicitHashKey\"] = input.ExplicitHashKey;\n  }\n\n  if (input.PartitionKey !== undefined) {\n    bodyParams[\"PartitionKey\"] = input.PartitionKey;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1PutRecordsRequestEntryList = function (input, context) {\n  var e_2, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {\n      var entry = input_2_1.value;\n      contents.push(serializeAws_json1_1PutRecordsRequestEntry(entry, context));\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_json1_1RegisterStreamConsumerInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ConsumerName !== undefined) {\n    bodyParams[\"ConsumerName\"] = input.ConsumerName;\n  }\n\n  if (input.StreamARN !== undefined) {\n    bodyParams[\"StreamARN\"] = input.StreamARN;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  if (input.TagKeys !== undefined) {\n    bodyParams[\"TagKeys\"] = serializeAws_json1_1TagKeyList(input.TagKeys, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1SplitShardInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.NewStartingHashKey !== undefined) {\n    bodyParams[\"NewStartingHashKey\"] = input.NewStartingHashKey;\n  }\n\n  if (input.ShardToSplit !== undefined) {\n    bodyParams[\"ShardToSplit\"] = input.ShardToSplit;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1StartStreamEncryptionInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EncryptionType !== undefined) {\n    bodyParams[\"EncryptionType\"] = input.EncryptionType;\n  }\n\n  if (input.KeyId !== undefined) {\n    bodyParams[\"KeyId\"] = input.KeyId;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1StartingPosition = function (input, context) {\n  var bodyParams = {};\n\n  if (input.SequenceNumber !== undefined) {\n    bodyParams[\"SequenceNumber\"] = input.SequenceNumber;\n  }\n\n  if (input.Timestamp !== undefined) {\n    bodyParams[\"Timestamp\"] = Math.round(input.Timestamp.getTime() / 1000);\n  }\n\n  if (input.Type !== undefined) {\n    bodyParams[\"Type\"] = input.Type;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1StopStreamEncryptionInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.EncryptionType !== undefined) {\n    bodyParams[\"EncryptionType\"] = input.EncryptionType;\n  }\n\n  if (input.KeyId !== undefined) {\n    bodyParams[\"KeyId\"] = input.KeyId;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1SubscribeToShardInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ConsumerARN !== undefined) {\n    bodyParams[\"ConsumerARN\"] = input.ConsumerARN;\n  }\n\n  if (input.ShardId !== undefined) {\n    bodyParams[\"ShardId\"] = input.ShardId;\n  }\n\n  if (input.StartingPosition !== undefined) {\n    bodyParams[\"StartingPosition\"] = serializeAws_json1_1StartingPosition(input.StartingPosition, context);\n  }\n\n  return bodyParams;\n};\n\nvar serializeAws_json1_1TagKeyList = function (input, context) {\n  var e_3, _a;\n\n  var contents = [];\n\n  try {\n    for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {\n      var entry = input_3_1.value;\n      contents.push(entry);\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return contents;\n};\n\nvar serializeAws_json1_1TagMap = function (input, context) {\n  var mapParams = {};\n  Object.keys(input).forEach(function (key) {\n    mapParams[key] = input[key];\n  });\n  return mapParams;\n};\n\nvar serializeAws_json1_1UpdateShardCountInput = function (input, context) {\n  var bodyParams = {};\n\n  if (input.ScalingType !== undefined) {\n    bodyParams[\"ScalingType\"] = input.ScalingType;\n  }\n\n  if (input.StreamName !== undefined) {\n    bodyParams[\"StreamName\"] = input.StreamName;\n  }\n\n  if (input.TargetShardCount !== undefined) {\n    bodyParams[\"TargetShardCount\"] = input.TargetShardCount;\n  }\n\n  return bodyParams;\n};\n\nvar deserializeAws_json1_1Consumer = function (output, context) {\n  var contents = {\n    __type: \"Consumer\",\n    ConsumerARN: undefined,\n    ConsumerCreationTimestamp: undefined,\n    ConsumerName: undefined,\n    ConsumerStatus: undefined\n  };\n\n  if (output.ConsumerARN !== undefined && output.ConsumerARN !== null) {\n    contents.ConsumerARN = output.ConsumerARN;\n  }\n\n  if (output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null) {\n    contents.ConsumerCreationTimestamp = new Date(Math.round(output.ConsumerCreationTimestamp * 1000));\n  }\n\n  if (output.ConsumerName !== undefined && output.ConsumerName !== null) {\n    contents.ConsumerName = output.ConsumerName;\n  }\n\n  if (output.ConsumerStatus !== undefined && output.ConsumerStatus !== null) {\n    contents.ConsumerStatus = output.ConsumerStatus;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ConsumerDescription = function (output, context) {\n  var contents = {\n    __type: \"ConsumerDescription\",\n    ConsumerARN: undefined,\n    ConsumerCreationTimestamp: undefined,\n    ConsumerName: undefined,\n    ConsumerStatus: undefined,\n    StreamARN: undefined\n  };\n\n  if (output.ConsumerARN !== undefined && output.ConsumerARN !== null) {\n    contents.ConsumerARN = output.ConsumerARN;\n  }\n\n  if (output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null) {\n    contents.ConsumerCreationTimestamp = new Date(Math.round(output.ConsumerCreationTimestamp * 1000));\n  }\n\n  if (output.ConsumerName !== undefined && output.ConsumerName !== null) {\n    contents.ConsumerName = output.ConsumerName;\n  }\n\n  if (output.ConsumerStatus !== undefined && output.ConsumerStatus !== null) {\n    contents.ConsumerStatus = output.ConsumerStatus;\n  }\n\n  if (output.StreamARN !== undefined && output.StreamARN !== null) {\n    contents.StreamARN = output.StreamARN;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ConsumerList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Consumer(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1DescribeLimitsOutput = function (output, context) {\n  var contents = {\n    __type: \"DescribeLimitsOutput\",\n    OpenShardCount: undefined,\n    ShardLimit: undefined\n  };\n\n  if (output.OpenShardCount !== undefined && output.OpenShardCount !== null) {\n    contents.OpenShardCount = output.OpenShardCount;\n  }\n\n  if (output.ShardLimit !== undefined && output.ShardLimit !== null) {\n    contents.ShardLimit = output.ShardLimit;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function (output, context) {\n  var contents = {\n    __type: \"DescribeStreamConsumerOutput\",\n    ConsumerDescription: undefined\n  };\n\n  if (output.ConsumerDescription !== undefined && output.ConsumerDescription !== null) {\n    contents.ConsumerDescription = deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1DescribeStreamOutput = function (output, context) {\n  var contents = {\n    __type: \"DescribeStreamOutput\",\n    StreamDescription: undefined\n  };\n\n  if (output.StreamDescription !== undefined && output.StreamDescription !== null) {\n    contents.StreamDescription = deserializeAws_json1_1StreamDescription(output.StreamDescription, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function (output, context) {\n  var contents = {\n    __type: \"DescribeStreamSummaryOutput\",\n    StreamDescriptionSummary: undefined\n  };\n\n  if (output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null) {\n    contents.StreamDescriptionSummary = deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1EnhancedMetrics = function (output, context) {\n  var contents = {\n    __type: \"EnhancedMetrics\",\n    ShardLevelMetrics: undefined\n  };\n\n  if (output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null) {\n    contents.ShardLevelMetrics = deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1EnhancedMonitoringList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1EnhancedMetrics(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function (output, context) {\n  var contents = {\n    __type: \"EnhancedMonitoringOutput\",\n    CurrentShardLevelMetrics: undefined,\n    DesiredShardLevelMetrics: undefined,\n    StreamName: undefined\n  };\n\n  if (output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null) {\n    contents.CurrentShardLevelMetrics = deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context);\n  }\n\n  if (output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null) {\n    contents.DesiredShardLevelMetrics = deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context);\n  }\n\n  if (output.StreamName !== undefined && output.StreamName !== null) {\n    contents.StreamName = output.StreamName;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ExpiredIteratorException = function (output, context) {\n  var contents = {\n    __type: \"ExpiredIteratorException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ExpiredNextTokenException = function (output, context) {\n  var contents = {\n    __type: \"ExpiredNextTokenException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1GetRecordsOutput = function (output, context) {\n  var contents = {\n    __type: \"GetRecordsOutput\",\n    MillisBehindLatest: undefined,\n    NextShardIterator: undefined,\n    Records: undefined\n  };\n\n  if (output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null) {\n    contents.MillisBehindLatest = output.MillisBehindLatest;\n  }\n\n  if (output.NextShardIterator !== undefined && output.NextShardIterator !== null) {\n    contents.NextShardIterator = output.NextShardIterator;\n  }\n\n  if (output.Records !== undefined && output.Records !== null) {\n    contents.Records = deserializeAws_json1_1RecordList(output.Records, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1GetShardIteratorOutput = function (output, context) {\n  var contents = {\n    __type: \"GetShardIteratorOutput\",\n    ShardIterator: undefined\n  };\n\n  if (output.ShardIterator !== undefined && output.ShardIterator !== null) {\n    contents.ShardIterator = output.ShardIterator;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1HashKeyRange = function (output, context) {\n  var contents = {\n    __type: \"HashKeyRange\",\n    EndingHashKey: undefined,\n    StartingHashKey: undefined\n  };\n\n  if (output.EndingHashKey !== undefined && output.EndingHashKey !== null) {\n    contents.EndingHashKey = output.EndingHashKey;\n  }\n\n  if (output.StartingHashKey !== undefined && output.StartingHashKey !== null) {\n    contents.StartingHashKey = output.StartingHashKey;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1InternalFailureException = function (output, context) {\n  var contents = {\n    __type: \"InternalFailureException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1InvalidArgumentException = function (output, context) {\n  var contents = {\n    __type: \"InvalidArgumentException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1KMSAccessDeniedException = function (output, context) {\n  var contents = {\n    __type: \"KMSAccessDeniedException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1KMSDisabledException = function (output, context) {\n  var contents = {\n    __type: \"KMSDisabledException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1KMSInvalidStateException = function (output, context) {\n  var contents = {\n    __type: \"KMSInvalidStateException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1KMSNotFoundException = function (output, context) {\n  var contents = {\n    __type: \"KMSNotFoundException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1KMSOptInRequired = function (output, context) {\n  var contents = {\n    __type: \"KMSOptInRequired\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1KMSThrottlingException = function (output, context) {\n  var contents = {\n    __type: \"KMSThrottlingException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  var contents = {\n    __type: \"LimitExceededException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ListShardsOutput = function (output, context) {\n  var contents = {\n    __type: \"ListShardsOutput\",\n    NextToken: undefined,\n    Shards: undefined\n  };\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  if (output.Shards !== undefined && output.Shards !== null) {\n    contents.Shards = deserializeAws_json1_1ShardList(output.Shards, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ListStreamConsumersOutput = function (output, context) {\n  var contents = {\n    __type: \"ListStreamConsumersOutput\",\n    Consumers: undefined,\n    NextToken: undefined\n  };\n\n  if (output.Consumers !== undefined && output.Consumers !== null) {\n    contents.Consumers = deserializeAws_json1_1ConsumerList(output.Consumers, context);\n  }\n\n  if (output.NextToken !== undefined && output.NextToken !== null) {\n    contents.NextToken = output.NextToken;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ListStreamsOutput = function (output, context) {\n  var contents = {\n    __type: \"ListStreamsOutput\",\n    HasMoreStreams: undefined,\n    StreamNames: undefined\n  };\n\n  if (output.HasMoreStreams !== undefined && output.HasMoreStreams !== null) {\n    contents.HasMoreStreams = output.HasMoreStreams;\n  }\n\n  if (output.StreamNames !== undefined && output.StreamNames !== null) {\n    contents.StreamNames = deserializeAws_json1_1StreamNameList(output.StreamNames, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ListTagsForStreamOutput = function (output, context) {\n  var contents = {\n    __type: \"ListTagsForStreamOutput\",\n    HasMoreTags: undefined,\n    Tags: undefined\n  };\n\n  if (output.HasMoreTags !== undefined && output.HasMoreTags !== null) {\n    contents.HasMoreTags = output.HasMoreTags;\n  }\n\n  if (output.Tags !== undefined && output.Tags !== null) {\n    contents.Tags = deserializeAws_json1_1TagList(output.Tags, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1MetricsNameList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n  var contents = {\n    __type: \"ProvisionedThroughputExceededException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1PutRecordOutput = function (output, context) {\n  var contents = {\n    __type: \"PutRecordOutput\",\n    EncryptionType: undefined,\n    SequenceNumber: undefined,\n    ShardId: undefined\n  };\n\n  if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n    contents.EncryptionType = output.EncryptionType;\n  }\n\n  if (output.SequenceNumber !== undefined && output.SequenceNumber !== null) {\n    contents.SequenceNumber = output.SequenceNumber;\n  }\n\n  if (output.ShardId !== undefined && output.ShardId !== null) {\n    contents.ShardId = output.ShardId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1PutRecordsOutput = function (output, context) {\n  var contents = {\n    __type: \"PutRecordsOutput\",\n    EncryptionType: undefined,\n    FailedRecordCount: undefined,\n    Records: undefined\n  };\n\n  if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n    contents.EncryptionType = output.EncryptionType;\n  }\n\n  if (output.FailedRecordCount !== undefined && output.FailedRecordCount !== null) {\n    contents.FailedRecordCount = output.FailedRecordCount;\n  }\n\n  if (output.Records !== undefined && output.Records !== null) {\n    contents.Records = deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1PutRecordsResultEntry = function (output, context) {\n  var contents = {\n    __type: \"PutRecordsResultEntry\",\n    ErrorCode: undefined,\n    ErrorMessage: undefined,\n    SequenceNumber: undefined,\n    ShardId: undefined\n  };\n\n  if (output.ErrorCode !== undefined && output.ErrorCode !== null) {\n    contents.ErrorCode = output.ErrorCode;\n  }\n\n  if (output.ErrorMessage !== undefined && output.ErrorMessage !== null) {\n    contents.ErrorMessage = output.ErrorMessage;\n  }\n\n  if (output.SequenceNumber !== undefined && output.SequenceNumber !== null) {\n    contents.SequenceNumber = output.SequenceNumber;\n  }\n\n  if (output.ShardId !== undefined && output.ShardId !== null) {\n    contents.ShardId = output.ShardId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1PutRecordsResultEntryList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1_Record = function (output, context) {\n  var contents = {\n    __type: \"Record\",\n    ApproximateArrivalTimestamp: undefined,\n    Data: undefined,\n    EncryptionType: undefined,\n    PartitionKey: undefined,\n    SequenceNumber: undefined\n  };\n\n  if (output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null) {\n    contents.ApproximateArrivalTimestamp = new Date(Math.round(output.ApproximateArrivalTimestamp * 1000));\n  }\n\n  if (output.Data !== undefined && output.Data !== null) {\n    contents.Data = context.base64Decoder(output.Data);\n  }\n\n  if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n    contents.EncryptionType = output.EncryptionType;\n  }\n\n  if (output.PartitionKey !== undefined && output.PartitionKey !== null) {\n    contents.PartitionKey = output.PartitionKey;\n  }\n\n  if (output.SequenceNumber !== undefined && output.SequenceNumber !== null) {\n    contents.SequenceNumber = output.SequenceNumber;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1RecordList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1_Record(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function (output, context) {\n  var contents = {\n    __type: \"RegisterStreamConsumerOutput\",\n    Consumer: undefined\n  };\n\n  if (output.Consumer !== undefined && output.Consumer !== null) {\n    contents.Consumer = deserializeAws_json1_1Consumer(output.Consumer, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ResourceInUseException = function (output, context) {\n  var contents = {\n    __type: \"ResourceInUseException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  var contents = {\n    __type: \"ResourceNotFoundException\",\n    message: undefined\n  };\n\n  if (output.message !== undefined && output.message !== null) {\n    contents.message = output.message;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1SequenceNumberRange = function (output, context) {\n  var contents = {\n    __type: \"SequenceNumberRange\",\n    EndingSequenceNumber: undefined,\n    StartingSequenceNumber: undefined\n  };\n\n  if (output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null) {\n    contents.EndingSequenceNumber = output.EndingSequenceNumber;\n  }\n\n  if (output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null) {\n    contents.StartingSequenceNumber = output.StartingSequenceNumber;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1Shard = function (output, context) {\n  var contents = {\n    __type: \"Shard\",\n    AdjacentParentShardId: undefined,\n    HashKeyRange: undefined,\n    ParentShardId: undefined,\n    SequenceNumberRange: undefined,\n    ShardId: undefined\n  };\n\n  if (output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null) {\n    contents.AdjacentParentShardId = output.AdjacentParentShardId;\n  }\n\n  if (output.HashKeyRange !== undefined && output.HashKeyRange !== null) {\n    contents.HashKeyRange = deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context);\n  }\n\n  if (output.ParentShardId !== undefined && output.ParentShardId !== null) {\n    contents.ParentShardId = output.ParentShardId;\n  }\n\n  if (output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null) {\n    contents.SequenceNumberRange = deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context);\n  }\n\n  if (output.ShardId !== undefined && output.ShardId !== null) {\n    contents.ShardId = output.ShardId;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1ShardList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Shard(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1StreamDescription = function (output, context) {\n  var contents = {\n    __type: \"StreamDescription\",\n    EncryptionType: undefined,\n    EnhancedMonitoring: undefined,\n    HasMoreShards: undefined,\n    KeyId: undefined,\n    RetentionPeriodHours: undefined,\n    Shards: undefined,\n    StreamARN: undefined,\n    StreamCreationTimestamp: undefined,\n    StreamName: undefined,\n    StreamStatus: undefined\n  };\n\n  if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n    contents.EncryptionType = output.EncryptionType;\n  }\n\n  if (output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null) {\n    contents.EnhancedMonitoring = deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context);\n  }\n\n  if (output.HasMoreShards !== undefined && output.HasMoreShards !== null) {\n    contents.HasMoreShards = output.HasMoreShards;\n  }\n\n  if (output.KeyId !== undefined && output.KeyId !== null) {\n    contents.KeyId = output.KeyId;\n  }\n\n  if (output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null) {\n    contents.RetentionPeriodHours = output.RetentionPeriodHours;\n  }\n\n  if (output.Shards !== undefined && output.Shards !== null) {\n    contents.Shards = deserializeAws_json1_1ShardList(output.Shards, context);\n  }\n\n  if (output.StreamARN !== undefined && output.StreamARN !== null) {\n    contents.StreamARN = output.StreamARN;\n  }\n\n  if (output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null) {\n    contents.StreamCreationTimestamp = new Date(Math.round(output.StreamCreationTimestamp * 1000));\n  }\n\n  if (output.StreamName !== undefined && output.StreamName !== null) {\n    contents.StreamName = output.StreamName;\n  }\n\n  if (output.StreamStatus !== undefined && output.StreamStatus !== null) {\n    contents.StreamStatus = output.StreamStatus;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1StreamDescriptionSummary = function (output, context) {\n  var contents = {\n    __type: \"StreamDescriptionSummary\",\n    ConsumerCount: undefined,\n    EncryptionType: undefined,\n    EnhancedMonitoring: undefined,\n    KeyId: undefined,\n    OpenShardCount: undefined,\n    RetentionPeriodHours: undefined,\n    StreamARN: undefined,\n    StreamCreationTimestamp: undefined,\n    StreamName: undefined,\n    StreamStatus: undefined\n  };\n\n  if (output.ConsumerCount !== undefined && output.ConsumerCount !== null) {\n    contents.ConsumerCount = output.ConsumerCount;\n  }\n\n  if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n    contents.EncryptionType = output.EncryptionType;\n  }\n\n  if (output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null) {\n    contents.EnhancedMonitoring = deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context);\n  }\n\n  if (output.KeyId !== undefined && output.KeyId !== null) {\n    contents.KeyId = output.KeyId;\n  }\n\n  if (output.OpenShardCount !== undefined && output.OpenShardCount !== null) {\n    contents.OpenShardCount = output.OpenShardCount;\n  }\n\n  if (output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null) {\n    contents.RetentionPeriodHours = output.RetentionPeriodHours;\n  }\n\n  if (output.StreamARN !== undefined && output.StreamARN !== null) {\n    contents.StreamARN = output.StreamARN;\n  }\n\n  if (output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null) {\n    contents.StreamCreationTimestamp = new Date(Math.round(output.StreamCreationTimestamp * 1000));\n  }\n\n  if (output.StreamName !== undefined && output.StreamName !== null) {\n    contents.StreamName = output.StreamName;\n  }\n\n  if (output.StreamStatus !== undefined && output.StreamStatus !== null) {\n    contents.StreamStatus = output.StreamStatus;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1StreamNameList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1SubscribeToShardEvent = function (output, context) {\n  var contents = {\n    __type: \"SubscribeToShardEvent\",\n    ContinuationSequenceNumber: undefined,\n    MillisBehindLatest: undefined,\n    Records: undefined\n  };\n\n  if (output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null) {\n    contents.ContinuationSequenceNumber = output.ContinuationSequenceNumber;\n  }\n\n  if (output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null) {\n    contents.MillisBehindLatest = output.MillisBehindLatest;\n  }\n\n  if (output.Records !== undefined && output.Records !== null) {\n    contents.Records = deserializeAws_json1_1RecordList(output.Records, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1SubscribeToShardEventStream = function (output, context) {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n    };\n  }\n\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n    };\n  }\n\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n    };\n  }\n\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n    };\n  }\n\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n    };\n  }\n\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n    };\n  }\n\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n    };\n  }\n\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n    };\n  }\n\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n    };\n  }\n\n  var key = Object.keys(output)[0];\n  return {\n    $unknown: [key, output[key]]\n  };\n};\n\nvar deserializeAws_json1_1SubscribeToShardOutput = function (output, context) {\n  var contents = {\n    __type: \"SubscribeToShardOutput\",\n    EventStream: undefined\n  };\n\n  if (output.EventStream !== undefined && output.EventStream !== null) {\n    contents.EventStream = deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1Tag = function (output, context) {\n  var contents = {\n    __type: \"Tag\",\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output.Key !== undefined && output.Key !== null) {\n    contents.Key = output.Key;\n  }\n\n  if (output.Value !== undefined && output.Value !== null) {\n    contents.Value = output.Value;\n  }\n\n  return contents;\n};\n\nvar deserializeAws_json1_1TagList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Tag(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1UpdateShardCountOutput = function (output, context) {\n  var contents = {\n    __type: \"UpdateShardCountOutput\",\n    CurrentShardCount: undefined,\n    StreamName: undefined,\n    TargetShardCount: undefined\n  };\n\n  if (output.CurrentShardCount !== undefined && output.CurrentShardCount !== null) {\n    contents.CurrentShardCount = output.CurrentShardCount;\n  }\n\n  if (output.StreamName !== undefined && output.StreamName !== null) {\n    contents.StreamName = output.StreamName;\n  }\n\n  if (output.TargetShardCount !== undefined && output.TargetShardCount !== null) {\n    contents.TargetShardCount = output.TargetShardCount;\n  }\n\n  return contents;\n};\n\nvar deserializeMetadata = function (output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  var contents = __assign(__assign({}, context.endpoint), {\n    protocol: \"https\",\n    method: \"POST\",\n    path: path,\n    headers: headers\n  });\n\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n\n  if (body !== undefined) {\n    contents.body = body;\n  }\n\n  return new __HttpRequest(contents);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};","map":{"version":3,"sources":["../../../protocols/Aws_json1_1.ts"],"names":[],"mappings":";AA4LA,SACE,WAAW,IAAI,aADjB,QAGO,wBAHP;AAaA,OAAM,SAAgB,0CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,wCAAwC,CAAC,KAAD,EAAQ,OAAR,CADnC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,uCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,+BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,qCAAqC,CAAC,KAAD,EAAQ,OAAR,CAApD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,wDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,gDAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,sDAAsD,CAAC,KAAD,EAAQ,OAAR,CADjD,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,uCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,+BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,qCAAqC,CAAC,KAAD,EAAQ,OAAR,CAApD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,mDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,2CAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,iDAAiD,CAAC,KAAD,EAAQ,OAAR,CAD5C,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,yCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,iCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,uCAAuC,CAAC,KAAD,EAAQ,OAAR,CADlC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,yCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,iCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,uCAAuC,CAAC,KAAD,EAAQ,OAAR,CADlC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,yCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,+CAA+C,CAAC,KAAD,EAAQ,OAAR,CAD1C,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,wCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,8CAA8C,CAAC,KAAD,EAAQ,OAAR,CADzC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,oDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4CAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,kDAAkD,CAAC,KAAD,EAAQ,OAAR,CAD7C,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,mDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,2CAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,iDAAiD,CAAC,KAAD,EAAQ,OAAR,CAD5C,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,qCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,6BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,mCAAmC,CAAC,KAAD,EAAQ,OAAR,CAAlD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,mCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CADpC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,wDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,gDAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,sDAAsD,CAAC,KAAD,EAAQ,OAAR,CADjD,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,qCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,6BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,mCAAmC,CAAC,KAAD,EAAQ,OAAR,CAAlD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,8CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,sCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,4CAA4C,CAAC,KAAD,EAAQ,OAAR,CADvC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,sCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,8BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,oCAAoC,CAAC,KAAD,EAAQ,OAAR,CAAnD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,4CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,oCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CADrC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,sCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,8BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,oCAAoC,CAAC,KAAD,EAAQ,OAAR,CAAnD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,oCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,kCAAkC,CAAC,KAAD,EAAQ,OAAR,CAAjD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,qCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,6BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,mCAAmC,CAAC,KAAD,EAAQ,OAAR,CAAlD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,iDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,yCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,+CAA+C,CAAC,KAAD,EAAQ,OAAR,CAD1C,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,uCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,6CAA6C,CAAC,KAAD,EAAQ,OAAR,CADxC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,qCAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,6BAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,mCAAmC,CAAC,KAAD,EAAQ,OAAR,CAAlD,CAAP;AACA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,gDAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,wCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,8CAA8C,CAAC,KAAD,EAAQ,OAAR,CADzC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,+CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,uCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,6CAA6C,CAAC,KAAD,EAAQ,OAAR,CADxC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,mCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CADpC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,2CAAhB,CACJ,KADI,EAEJ,OAFI,EAEmB;;;;AAEjB,MAAA,OAAO,GAAgB,EAAvB;AACN,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,4BAA1B;AACA,MAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,mCAA1B;AAEA,MAAA,IAAI,GAAG,IAAI,CAAC,SAAL,CACL,yCAAyC,CAAC,KAAD,EAAQ,OAAR,CADpC,CAAP;AAGA,aAAA,CAAA;AAAA;AAAA,QAAO,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAA1B,CAAA;;;AACD;AAED,OAAM,SAAgB,4CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,iDAAiD,CAAC,MAAD,EAAS,OAAT,CAAxD,CAAA;AACD;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAAiC;AAC7C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADe,WAAzC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,iDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,yCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,8CAA8C,CAAC,MAAD,EAAS,OAAT,CAArD,CAAA;AACD;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADY,WAAtC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,8CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AApBG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,0DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,+DAA+D,CACpE,MADoE,EAEpE,OAFoE,CAAtE,CAAA;AAID;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA+C;AAC3D,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAD6B,WAAvD;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,yCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,8CAA8C,CAAC,MAAD,EAAS,OAAT,CAArD,CAAA;AACD;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA8B;AAC1C,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADY,WAAtC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,8CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AApBG,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,qDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,0DAA0D,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE,CAAA;AAID;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA0C;AACtD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADwB,WAAlD;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,0DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AApBG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,2CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,gDAAgD,CAAC,MAAD,EAAS,OAAT,CAAvD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,0CAA0C,CAAC,IAAD,EAAO,OAAP,CAArD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,gDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AAEG,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,2CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,gDAAgD,CAAC,MAAD,EAAS,OAAT,CAAvD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,0CAA0C,CAAC,IAAD,EAAO,OAAP,CAArD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,gDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AATG,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,kDAAkD,CAAC,IAAD,EAAO,OAAP,CAA7D;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AApBG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,iDAAiD,CAAC,IAAD,EAAO,OAAP,CAA5D;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AATG,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,sDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,2DAA2D,CAChE,MADgE,EAEhE,OAFgE,CAAlE,CAAA;AAID;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,8CAA8C,CAAC,IAAD,EAAO,OAAP,CAAzD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,2DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,qDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,0DAA0D,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE,CAAA;AAID;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,8CAA8C,CAAC,IAAD,EAAO,OAAP,CAAzD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,0DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,4CAA4C,CAAC,MAAD,EAAS,OAAT,CAAnD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,sCAAsC,CAAC,IAAD,EAAO,OAAP,CAAjD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,kB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wC;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wE;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AAjGG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8CAA8C,CACtD,YADsD,EAEtD,OAFsD,CAApD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oEAAoE,CAC5E,YAD4E,EAE5E,OAF4E,CAA1E,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,4CAA4C,CAAC,IAAD,EAAO,OAAP,CAAvD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wC;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wE;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AApBG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oEAAoE,CAC5E,YAD4E,EAE5E,OAF4E,CAA1E,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,0DAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,+DAA+D,CACpE,MADoE,EAEpE,OAFoE,CAAtE,CAAA;AAID;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA+C;AAC3D,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAD6B,WAAvD;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,+DAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,4CAA4C,CAAC,MAAD,EAAS,OAAT,CAAnD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,sCAAsC,CAAC,IAAD,EAAO,OAAP,CAAjD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,gDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,qDAAqD,CAC1D,MAD0D,EAE1D,OAF0D,CAA5D,CAAA;AAID;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,+CAA+C,CAAC,IAAD,EAAO,OAAP,CAA1D;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,qDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AA1CG,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,wCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,6CAA6C,CAAC,MAAD,EAAS,OAAT,CAApD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,uCAAuC,CAAC,IAAD,EAAO,OAAP,CAAlD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,6CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AAEG,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,8CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,mDAAmD,CAAC,MAAD,EAAS,OAAT,CAA1D,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,6CAA6C,CAAC,IAAD,EAAO,OAAP,CAAxD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,mDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AApBG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,wCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,6CAA6C,CAAC,MAAD,EAAS,OAAT,CAApD,CAAA;AACD;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA6B;AACzC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADW,WAArC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,6CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,sCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,2CAA2C,CAAC,MAAD,EAAS,OAAT,CAAlD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,qCAAqC,CAAC,IAAD,EAAO,OAAP,CAAhD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,2CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,kB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wC;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wE;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AAtFG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8CAA8C,CACtD,YADsD,EAEtD,OAFsD,CAApD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oEAAoE,CAC5E,YAD4E,EAE5E,OAF4E,CAA1E,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,4CAA4C,CAAC,MAAD,EAAS,OAAT,CAAnD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,sCAAsC,CAAC,IAAD,EAAO,OAAP,CAAjD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,kB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wC;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wE;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AAtFG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8CAA8C,CACtD,YADsD,EAEtD,OAFsD,CAApD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oEAAoE,CAC5E,YAD4E,EAE5E,OAF4E,CAA1E,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,mDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,wDAAwD,CAC7D,MAD6D,EAE7D,OAF6D,CAA/D,CAAA;AAID;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,kDAAkD,CAAC,IAAD,EAAO,OAAP,CAA7D;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,wDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAAsC;AAClD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADoB,WAA9C;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,uCAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,4CAA4C,CAAC,MAAD,EAAS,OAAT,CAAnD,CAAA;AACD;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAA4B;AACxC,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADU,WAApC;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,4CAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,kDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,uDAAuD,CAC5D,MAD4D,EAE5D,OAF4D,CAA9D,CAAA;AAID;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAAuC;AACnD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADqB,WAA/C;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,uDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,sB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,sD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,kB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,kD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,EAAA,CAAA;;;;;;;;;AAjGG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,kDAAkD,CAC1D,YAD0D,EAE1D,OAF0D,CAAxD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,8CAA8C,CACtD,YADsD,EAEtD,OAFsD,CAApD,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,iDAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,sDAAsD,CAC3D,MAD2D,EAE3D,OAF2D,CAA7D,CAAA;AAID;;AACD,iBAAA,CAAA;AAAA;AAAA,YAAM,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAjB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACM,UAAA,QAAQ,GAAsC;AAClD,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AADoB,WAA9C;AAGN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,sDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,4CAA4C,CAAC,IAAD,EAAO,OAAP,CAAvD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,OAAM,SAAgB,6CAAhB,CACJ,MADI,EAEJ,OAFI,EAEmB;;;;;;AAEvB,cAAI,MAAM,CAAC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,mBAAA,CAAA;AAAA;AAAA,cAAO,kDAAkD,CAAC,MAAD,EAAS,OAAT,CAAzD,CAAA;AACD;;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAAZ,UAAA,IAAI,GAAQ,EAAA,CAAA,IAAA,EAAZ;AACF,UAAA,QAAQ,GAAQ,EAAhB;AACJ,UAAA,QAAQ,GAAG,4CAA4C,CAAC,IAAD,EAAO,OAAP,CAAvD;AACM,UAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD,CADlB;AAEZ,YAAA,MAAM,EAAE;AAFI,WAAA,EAGT,QAHS,CAAR;AAKN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP,CAAA;;;;AACD;;AAED,SAAe,kDAAf,CACE,MADF,EAEE,OAFF,EAEyB;;;;;;;6BAGlB,M;;AACG,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAAf,CAAA;;;AAFF,UAAA,YAAY,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,EAEhB,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EAA2C,EAF3B,EAAA,CAAA,CAAZ;AAKF,UAAA,SAAS,GAAW,cAApB;AACE,UAAA,cAAc,GAAW,YAAY,CAAC,IAAb,CAAkB,QAAlB,EAA4B,KAA5B,CAAkC,GAAlC,CAAzB;AACN,UAAA,SAAS,GACP,cAAc,CAAC,CAAD,CAAd,KAAsB,SAAtB,GAAkC,cAAc,CAAC,CAAD,CAAhD,GAAsD,cAAc,CAAC,CAAD,CADtE;AAEQ,UAAA,EAAA,GAAA,SAAA;;;iBACD,0B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,0D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,wB;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,wD;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBAUA,2B;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;iBACA,2D;AAAA,qBAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;;;;AA/BG,iBAAA,CAAA;AAAA;AAAA,YAAM,sDAAsD,CAC9D,YAD8D,EAE9D,OAF8D,CAA5D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,oDAAoD,CAC5D,YAD4D,EAE5D,OAF4D,CAA1D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;;AAIM,iBAAA,CAAA;AAAA;AAAA,YAAM,uDAAuD,CAC/D,YAD+D,EAE/D,OAF+D,CAA7D,CAAA;;;AADN,UAAA,QAAQ,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CACF,EAAA,CAAA,IAAA,EADE,CAAA,CAAA,CAAA,EAIJ;AACF,YAAA,IAAI,EAAE,SADJ;AAEF,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAF5B,WAJI,CAAA,CAAR;AAQA,iBAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;;;AAEM,UAAA,UAAU,GAAG,YAAY,CAAC,IAA1B;AACN,UAAA,SAAS,GAAG,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAA9B,IAAsC,SAAlD;AACA,UAAA,QAAQ,GAAG,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,UADM,CAAA,EACI;AACb,YAAA,IAAI,EAAE,KAAG,SADI;AAEb,YAAA,OAAO,EAAE,UAAU,CAAC,OAAX,IAAsB,UAAU,CAAC,OAAjC,IAA4C,SAFxC;AAGb,YAAA,MAAM,EAAE,QAHK;AAIb,YAAA,SAAS,EAAE,mBAAmB,CAAC,MAAD;AAJjB,WADJ,CAAX;;;;AAQE,UAAA,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAA7B,IAAwC,SAAlD;AACN,UAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,iBAAO,QAAQ,CAAC,OAAhB;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,MAAP,CAAc,IAAI,KAAJ,CAAU,OAAV,CAAd,EAAkC,QAAlC,CAAf,CAAP,CAAA;;;;AACD;;AAED,IAAM,sDAAsD,GAAG,UAC7D,YAD6D,EAE7D,OAF6D,EAEtC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,8CAA8C,CACtE,IADsE,EAEtE,OAFsE,CAAlE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,0BADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,uDAAuD,GAAG,UAC9D,YAD8D,EAE9D,OAF8D,EAEvC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,+CAA+C,CACvE,IADuE,EAEvE,OAFuE,CAAnE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,2BADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,sDAAsD,GAAG,UAC7D,YAD6D,EAE7D,OAF6D,EAEtC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,8CAA8C,CACtE,IADsE,EAEtE,OAFsE,CAAlE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,0BADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,sDAAsD,GAAG,UAC7D,YAD6D,EAE7D,OAF6D,EAEtC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,8CAA8C,CACtE,IADsE,EAEtE,OAFsE,CAAlE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,0BADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,kDAAkD,GAAG,UACzD,YADyD,EAEzD,OAFyD,EAElC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,0CAA0C,CAClE,IADkE,EAElE,OAFkE,CAA9D;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,sBADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,sDAAsD,GAAG,UAC7D,YAD6D,EAE7D,OAF6D,EAEtC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,8CAA8C,CACtE,IADsE,EAEtE,OAFsE,CAAlE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,0BADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,kDAAkD,GAAG,UACzD,YADyD,EAEzD,OAFyD,EAElC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,0CAA0C,CAClE,IADkE,EAElE,OAFkE,CAA9D;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,sBADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,8CAA8C,GAAG,UACrD,YADqD,EAErD,OAFqD,EAE9B;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,sCAAsC,CAC9D,IAD8D,EAE9D,OAF8D,CAA1D;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,kBADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,oDAAoD,GAAG,UAC3D,YAD2D,EAE3D,OAF2D,EAEpC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,4CAA4C,CACpE,IADoE,EAEpE,OAFoE,CAAhE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,wBADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,oDAAoD,GAAG,UAC3D,YAD2D,EAE3D,OAF2D,EAEpC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,4CAA4C,CACpE,IADoE,EAEpE,OAFoE,CAAhE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,wBADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,oEAAoE,GAAG,UAC3E,YAD2E,EAE3E,OAF2E,EAEpD;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,4DAA4D,CACpF,IADoF,EAEpF,OAFoF,CAAhF;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,wCADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,oDAAoD,GAAG,UAC3D,YAD2D,EAE3D,OAF2D,EAEpC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,4CAA4C,CACpE,IADoE,EAEpE,OAFoE,CAAhE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,wBADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,uDAAuD,GAAG,UAC9D,YAD8D,EAE9D,OAF8D,EAEvC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAEjB,MAAA,IAAI,GAAG,YAAY,CAAC,IAApB;AACA,MAAA,YAAY,GAAQ,+CAA+C,CACvE,IADuE,EAEvE,OAFuE,CAAnE;AAIA,MAAA,QAAQ,GAAA,QAAA,CAAA;AACZ,QAAA,IAAI,EAAE,2BADM;AAEZ,QAAA,MAAM,EAAE,QAFI;AAGZ,QAAA,SAAS,EAAE,mBAAmB,CAAC,YAAD;AAHlB,OAAA,EAIT,YAJS,CAAR;AAMN,aAAA,CAAA;AAAA;AAAA,QAAO,QAAP,CAAA;;GAbuB,CAAA;AAcxB,CAhBD;;AAkBA,IAAM,wCAAwC,GAAG,UAC/C,KAD+C,EAE/C,OAF+C,EAExB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,0BAA0B,CAAC,KAAK,CAAC,IAAP,EAAa,OAAb,CAA/C;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,sDAAsD,GAAG,UAC7D,KAD6D,EAE7D,OAF6D,EAEtC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,qCAAqC,GAAG,UAC5C,KAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,uBAAN,KAAkC,SAAtC,EAAiD;AAC/C,IAAA,UAAU,CAAC,yBAAD,CAAV,GAAwC,KAAK,CAAC,uBAA9C;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,iDAAiD,GAAG,UACxD,KADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;AACA,SAAO,UAAP;AACD,CAND;;AAQA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,uCAAuC,GAAG,UAC9C,KAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CAAC,uBAAD,CAAV,GAAsC,KAAK,CAAC,qBAA5C;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CATD;;AAWA,IAAM,kDAAkD,GAAG,UACzD,KADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,mCAAmC,CACnE,KAAK,CAAC,iBAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,iDAAiD,GAAG,UACxD,KADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,mCAAmC,CACnE,KAAK,CAAC,iBAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,aAAN,KAAwB,SAA5B,EAAuC;AACrC,IAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,KAAK,CAAC,aAApC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,iBAAN,KAA4B,SAAhC,EAA2C;AACzC,IAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAK,CAAC,iBAAxC;AACD;;AACD,MAAI,KAAK,CAAC,sBAAN,KAAiC,SAArC,EAAgD;AAC9C,IAAA,UAAU,CAAC,wBAAD,CAAV,GAAuC,KAAK,CAAC,sBAA7C;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,SAAN,CAAgB,OAAhB,KAA4B,IAAvC,CAA1B;AACD;;AACD,SAAO,UAAP;AACD,CArBD;;AAuBA,IAAM,sDAAsD,GAAG,UAC7D,KAD6D,EAE7D,OAF6D,EAEtC;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,qBAAN,KAAgC,SAApC,EAA+C;AAC7C,IAAA,UAAU,CAAC,uBAAD,CAAV,GAAsC,KAAK,CAAC,qBAA5C;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,uBAAN,KAAkC,SAAtC,EAAiD;AAC/C,IAAA,UAAU,CAAC,yBAAD,CAAV,GAAwC,IAAI,CAAC,KAAL,CACtC,KAAK,CAAC,uBAAN,CAA8B,OAA9B,KAA0C,IADJ,CAAxC;AAGD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAvBD;;AAyBA,IAAM,4CAA4C,GAAG,UACnD,KADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,MAAI,KAAK,CAAC,uBAAN,KAAkC,SAAtC,EAAiD;AAC/C,IAAA,UAAU,CAAC,yBAAD,CAAV,GAAwC,IAAI,CAAC,KAAL,CACtC,KAAK,CAAC,uBAAN,CAA8B,OAA9B,KAA0C,IADJ,CAAxC;AAGD;;AACD,SAAO,UAAP;AACD,CApBD;;AAsBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,wBAAN,KAAmC,SAAvC,EAAkD;AAChD,IAAA,UAAU,CAAC,0BAAD,CAAV,GAAyC,KAAK,CAAC,wBAA/C;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,oBAAN,KAA+B,SAAnC,EAA8C;AAC5C,IAAA,UAAU,CAAC,sBAAD,CAAV,GAAqC,KAAK,CAAC,oBAA3C;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,KAAd;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,kCAAkC,GAAG,UACzC,KADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,OAAO,CAAC,aAAR,CAAsB,KAAK,CAAC,IAA5B,CAArB;AACD;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,yBAAN,KAAoC,SAAxC,EAAmD;AACjD,IAAA,UAAU,CAAC,2BAAD,CAAV,GAA0C,KAAK,CAAC,yBAAhD;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CArBD;;AAuBA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,8CAA8C,CACpE,KAAK,CAAC,OAD8D,EAEpE,OAFoE,CAAtE;AAID;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,0CAA0C,GAAG,UACjD,KADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,OAAO,CAAC,aAAR,CAAsB,KAAK,CAAC,IAA5B,CAArB;AACD;;AACD,MAAI,KAAK,CAAC,eAAN,KAA0B,SAA9B,EAAyC;AACvC,IAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,KAAK,CAAC,eAAtC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,0CAA0C,CAAC,KAAD,EAAQ,OAAR,CAAxD;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,+CAA+C,GAAG,UACtD,KADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,KAAK,CAAC,SAAhC;AACD;;AACD,SAAO,UAAP;AACD,CAZD;;AAcA,IAAM,6CAA6C,GAAG,UACpD,KADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,8BAA8B,CACpD,KAAK,CAAC,OAD8C,EAEpD,OAFoD,CAAtD;AAID;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,mCAAmC,GAAG,UAC1C,KAD0C,EAE1C,OAF0C,EAEnB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,kBAAN,KAA6B,SAAjC,EAA4C;AAC1C,IAAA,UAAU,CAAC,oBAAD,CAAV,GAAmC,KAAK,CAAC,kBAAzC;AACD;;AACD,MAAI,KAAK,CAAC,YAAN,KAAuB,SAA3B,EAAsC;AACpC,IAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,KAAK,CAAC,YAAnC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,8CAA8C,GAAG,UACrD,KADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,oCAAoC,GAAG,UAC3C,KAD2C,EAE3C,OAF2C,EAEpB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,SAAN,KAAoB,SAAxB,EAAmC;AACjC,IAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,SAAN,CAAgB,OAAhB,KAA4B,IAAvC,CAA1B;AACD;;AACD,MAAI,KAAK,CAAC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,IAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,KAAK,CAAC,IAA3B;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,6CAA6C,GAAG,UACpD,KADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,cAAN,KAAyB,SAA7B,EAAwC;AACtC,IAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,KAAK,CAAC,cAArC;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC7B,IAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,KAAK,CAAC,KAA5B;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC/B,IAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,KAAK,CAAC,OAA9B;AACD;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,oCAAoC,CACnE,KAAK,CAAC,gBAD6D,EAEnE,OAFmE,CAArE;AAID;;AACD,SAAO,UAAP;AACD,CAlBD;;AAoBA,IAAM,8BAA8B,GAAG,UACrC,KADqC,EAErC,OAFqC,EAEd;;;AAEvB,MAAM,QAAQ,GAAG,EAAjB;;;AACA,SAAkB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAuB,CAAA,SAAA,CAAA,IAAvB,EAAuB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAvB,EAAyB;AAApB,UAAI,KAAK,GAAA,SAAA,CAAA,KAAT;AACH,MAAA,QAAQ,CAAC,IAAT,CAAc,KAAd;AACD;;;;;;;;;;;;;AACD,SAAO,QAAP;AACD,CATD;;AAWA,IAAM,0BAA0B,GAAG,UACjC,KADiC,EAEjC,OAFiC,EAEV;AAEvB,MAAM,SAAS,GAAQ,EAAvB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,GAAA,EAAG;AAC5B,IAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,KAAK,CAAC,GAAD,CAAtB;AACD,GAFD;AAGA,SAAO,SAAP;AACD,CATD;;AAWA,IAAM,yCAAyC,GAAG,UAChD,KADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAM,UAAU,GAAQ,EAAxB;;AACA,MAAI,KAAK,CAAC,WAAN,KAAsB,SAA1B,EAAqC;AACnC,IAAA,UAAU,CAAC,aAAD,CAAV,GAA4B,KAAK,CAAC,WAAlC;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,KAAqB,SAAzB,EAAoC;AAClC,IAAA,UAAU,CAAC,YAAD,CAAV,GAA2B,KAAK,CAAC,UAAjC;AACD;;AACD,MAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C;AACxC,IAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,CAAC,gBAAvC;AACD;;AACD,SAAO,UAAP;AACD,CAfD;;AAiBA,IAAM,8BAA8B,GAAG,UACrC,MADqC,EAErC,OAFqC,EAEd;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,UADU;AAElB,IAAA,WAAW,EAAE,SAFK;AAGlB,IAAA,yBAAyB,EAAE,SAHT;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,cAAc,EAAE;AALE,GAApB;;AAOA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MACE,MAAM,CAAC,yBAAP,KAAqC,SAArC,IACA,MAAM,CAAC,yBAAP,KAAqC,IAFvC,EAGE;AACA,IAAA,QAAQ,CAAC,yBAAT,GAAqC,IAAI,IAAJ,CACnC,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,yBAAP,GAAmC,IAA9C,CADmC,CAArC;AAGD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,SAAO,QAAP;AACD,CA7BD;;AA+BA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,WAAW,EAAE,SAFK;AAGlB,IAAA,yBAAyB,EAAE,SAHT;AAIlB,IAAA,YAAY,EAAE,SAJI;AAKlB,IAAA,cAAc,EAAE,SALE;AAMlB,IAAA,SAAS,EAAE;AANO,GAApB;;AAQA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MACE,MAAM,CAAC,yBAAP,KAAqC,SAArC,IACA,MAAM,CAAC,yBAAP,KAAqC,IAFvC,EAGE;AACA,IAAA,QAAQ,CAAC,yBAAT,GAAqC,IAAI,IAAJ,CACnC,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,yBAAP,GAAmC,IAA9C,CADmC,CAArC;AAGD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAjCD;;AAmCA,IAAM,kCAAkC,GAAG,UACzC,MADyC,EAEzC,OAFyC,EAElB;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,8BAA8B,CAAC,KAAD,EAAQ,OAAR,CAA9B;AAA8C,GADzC,CAAP;AAGD,CAPD;;AASA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,UAAU,EAAE;AAHM,GAApB;;AAKA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,kDAAkD,GAAG,UACzD,MADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,8BADU;AAElB,IAAA,mBAAmB,EAAE;AAFH,GAApB;;AAIA,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,yCAAyC,CACtE,MAAM,CAAC,mBAD+D,EAEtE,OAFsE,CAAxE;AAID;;AACD,SAAO,QAAP;AACD,CAlBD;;AAoBA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,iBAAiB,EAAE;AAFD,GAApB;;AAIA,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,uCAAuC,CAClE,MAAM,CAAC,iBAD2D,EAElE,OAFkE,CAApE;AAID;;AACD,SAAO,QAAP;AACD,CAlBD;;AAoBA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,6BADU;AAElB,IAAA,wBAAwB,EAAE;AAFR,GAApB;;AAIA,MACE,MAAM,CAAC,wBAAP,KAAoC,SAApC,IACA,MAAM,CAAC,wBAAP,KAAoC,IAFtC,EAGE;AACA,IAAA,QAAQ,CAAC,wBAAT,GAAoC,8CAA8C,CAChF,MAAM,CAAC,wBADyE,EAEhF,OAFgF,CAAlF;AAID;;AACD,SAAO,QAAP;AACD,CAlBD;;AAoBA,IAAM,qCAAqC,GAAG,UAC5C,MAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,iBAAiB,EAAE;AAFD,GAApB;;AAIA,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,qCAAqC,CAChE,MAAM,CAAC,iBADyD,EAEhE,OAFgE,CAAlE;AAID;;AACD,SAAO,QAAP;AACD,CAlBD;;AAoBA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,qCAAqC,CAAC,KAAD,EAAQ,OAAR,CAArC;AAAqD,GADhD,CAAP;AAGD,CAPD;;AASA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,wBAAwB,EAAE,SAFR;AAGlB,IAAA,wBAAwB,EAAE,SAHR;AAIlB,IAAA,UAAU,EAAE;AAJM,GAApB;;AAMA,MACE,MAAM,CAAC,wBAAP,KAAoC,SAApC,IACA,MAAM,CAAC,wBAAP,KAAoC,IAFtC,EAGE;AACA,IAAA,QAAQ,CAAC,wBAAT,GAAoC,qCAAqC,CACvE,MAAM,CAAC,wBADgE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MACE,MAAM,CAAC,wBAAP,KAAoC,SAApC,IACA,MAAM,CAAC,wBAAP,KAAoC,IAFtC,EAGE;AACA,IAAA,QAAQ,CAAC,wBAAT,GAAoC,qCAAqC,CACvE,MAAM,CAAC,wBADgE,EAEvE,OAFuE,CAAzE;AAID;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,SAAO,QAAP;AACD,CAhCD;;AAkCA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,2BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,kBAAkB,EAAE,SAFF;AAGlB,IAAA,iBAAiB,EAAE,SAHD;AAIlB,IAAA,OAAO,EAAE;AAJS,GAApB;;AAMA,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,gCAAgC,CACjD,MAAM,CAAC,OAD0C,EAEjD,OAFiD,CAAnD;AAID;;AACD,SAAO,QAAP;AACD,CA7BD;;AA+BA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,aAAa,EAAE;AAFG,GAApB;;AAIA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,kCAAkC,GAAG,UACzC,MADyC,EAEzC,OAFyC,EAElB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,cADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,eAAe,EAAE;AAHC,GAApB;;AAKA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,eAAP,KAA2B,SAA3B,IAAwC,MAAM,CAAC,eAAP,KAA2B,IAAvE,EAA6E;AAC3E,IAAA,QAAQ,CAAC,eAAT,GAA2B,MAAM,CAAC,eAAlC;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,0CAA0C,GAAG,UACjD,MADiD,EAEjD,OAFiD,EAE1B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,sBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,SAAS,EAAE,SAFO;AAGlB,IAAA,MAAM,EAAE;AAHU,GAApB;;AAKA,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,+BAA+B,CAAC,MAAM,CAAC,MAAR,EAAgB,OAAhB,CAAjD;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,2BADU;AAElB,IAAA,SAAS,EAAE,SAFO;AAGlB,IAAA,SAAS,EAAE;AAHO,GAApB;;AAKA,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,kCAAkC,CACrD,MAAM,CAAC,SAD8C,EAErD,OAFqD,CAAvD;AAID;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,WAAW,EAAE;AAHK,GAApB;;AAKA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,oCAAoC,CACzD,MAAM,CAAC,WADkD,EAEzD,OAFyD,CAA3D;AAID;;AACD,SAAO,QAAP;AACD,CAnBD;;AAqBA,IAAM,6CAA6C,GAAG,UACpD,MADoD,EAEpD,OAFoD,EAE7B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,yBADU;AAElB,IAAA,WAAW,EAAE,SAFK;AAGlB,IAAA,IAAI,EAAE;AAHY,GAApB;;AAKA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,MAAM,CAAC,WAA9B;AACD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,6BAA6B,CAAC,MAAM,CAAC,IAAR,EAAc,OAAd,CAA7C;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,qCAAqC,GAAG,UAC5C,MAD4C,EAE5C,OAF4C,EAErB;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AAAK,WAAA,KAAA;AAAK,GAAxC,CAAP;AACD,CALD;;AAOA,IAAM,4DAA4D,GAAG,UACnE,MADmE,EAEnE,OAFmE,EAE5C;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wCADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,qCAAqC,GAAG,UAC5C,MAD4C,EAE5C,OAF4C,EAErB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,iBADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,cAAc,EAAE,SAHE;AAIlB,IAAA,OAAO,EAAE;AAJS,GAApB;;AAMA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CApBD;;AAsBA,IAAM,sCAAsC,GAAG,UAC7C,MAD6C,EAE7C,OAF6C,EAEtB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,kBADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,iBAAiB,EAAE,SAHD;AAIlB,IAAA,OAAO,EAAE;AAJS,GAApB;;AAMA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,+CAA+C,CAChE,MAAM,CAAC,OADyD,EAEhE,OAFgE,CAAlE;AAID;;AACD,SAAO,QAAP;AACD,CA1BD;;AA4BA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,SAAS,EAAE,SAFO;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,cAAc,EAAE,SAJE;AAKlB,IAAA,OAAO,EAAE;AALS,GAApB;;AAOA,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAxBD;;AA0BA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,2CAA2C,CAAC,KAAD,EAAQ,OAAR,CAA3C;AAA2D,GADtD,CAAP;AAGD,CAPD;;AASA,IAAM,6BAA6B,GAAG,UACpC,MADoC,EAEpC,OAFoC,EAEb;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,QADU;AAElB,IAAA,2BAA2B,EAAE,SAFX;AAGlB,IAAA,IAAI,EAAE,SAHY;AAIlB,IAAA,cAAc,EAAE,SAJE;AAKlB,IAAA,YAAY,EAAE,SALI;AAMlB,IAAA,cAAc,EAAE;AANE,GAApB;;AAQA,MACE,MAAM,CAAC,2BAAP,KAAuC,SAAvC,IACA,MAAM,CAAC,2BAAP,KAAuC,IAFzC,EAGE;AACA,IAAA,QAAQ,CAAC,2BAAT,GAAuC,IAAI,IAAJ,CACrC,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,2BAAP,GAAqC,IAAhD,CADqC,CAAvC;AAGD;;AACD,MAAI,MAAM,CAAC,IAAP,KAAgB,SAAhB,IAA6B,MAAM,CAAC,IAAP,KAAgB,IAAjD,EAAuD;AACrD,IAAA,QAAQ,CAAC,IAAT,GAAgB,OAAO,CAAC,aAAR,CAAsB,MAAM,CAAC,IAA7B,CAAhB;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,SAAO,QAAP;AACD,CAjCD;;AAmCA,IAAM,gCAAgC,GAAG,UACvC,MADuC,EAEvC,OAFuC,EAEhB;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,6BAA6B,CAAC,KAAD,EAAQ,OAAR,CAA7B;AAA6C,GADxC,CAAP;AAGD,CAPD;;AASA,IAAM,kDAAkD,GAAG,UACzD,MADyD,EAEzD,OAFyD,EAElC;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,8BADU;AAElB,IAAA,QAAQ,EAAE;AAFQ,GAApB;;AAIA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,IAAA,QAAQ,CAAC,QAAT,GAAoB,8BAA8B,CAChD,MAAM,CAAC,QADyC,EAEhD,OAFgD,CAAlD;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,+CAA+C,GAAG,UACtD,MADsD,EAEtD,OAFsD,EAE/B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,2BADU;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;;AAIA,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAZD;;AAcA,IAAM,yCAAyC,GAAG,UAChD,MADgD,EAEhD,OAFgD,EAEzB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,qBADU;AAElB,IAAA,oBAAoB,EAAE,SAFJ;AAGlB,IAAA,sBAAsB,EAAE;AAHN,GAApB;;AAKA,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MACE,MAAM,CAAC,sBAAP,KAAkC,SAAlC,IACA,MAAM,CAAC,sBAAP,KAAkC,IAFpC,EAGE;AACA,IAAA,QAAQ,CAAC,sBAAT,GAAkC,MAAM,CAAC,sBAAzC;AACD;;AACD,SAAO,QAAP;AACD,CAtBD;;AAwBA,IAAM,2BAA2B,GAAG,UAClC,MADkC,EAElC,OAFkC,EAEX;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,OADU;AAElB,IAAA,qBAAqB,EAAE,SAFL;AAGlB,IAAA,YAAY,EAAE,SAHI;AAIlB,IAAA,aAAa,EAAE,SAJG;AAKlB,IAAA,mBAAmB,EAAE,SALH;AAMlB,IAAA,OAAO,EAAE;AANS,GAApB;;AAQA,MACE,MAAM,CAAC,qBAAP,KAAiC,SAAjC,IACA,MAAM,CAAC,qBAAP,KAAiC,IAFnC,EAGE;AACA,IAAA,QAAQ,CAAC,qBAAT,GAAiC,MAAM,CAAC,qBAAxC;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,kCAAkC,CACxD,MAAM,CAAC,YADiD,EAExD,OAFwD,CAA1D;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MACE,MAAM,CAAC,mBAAP,KAA+B,SAA/B,IACA,MAAM,CAAC,mBAAP,KAA+B,IAFjC,EAGE;AACA,IAAA,QAAQ,CAAC,mBAAT,GAA+B,yCAAyC,CACtE,MAAM,CAAC,mBAD+D,EAEtE,OAFsE,CAAxE;AAID;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,OAA1B;AACD;;AACD,SAAO,QAAP;AACD,CAxCD;;AA0CA,IAAM,+BAA+B,GAAG,UACtC,MADsC,EAEtC,OAFsC,EAEf;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,2BAA2B,CAAC,KAAD,EAAQ,OAAR,CAA3B;AAA2C,GADtC,CAAP;AAGD,CAPD;;AASA,IAAM,uCAAuC,GAAG,UAC9C,MAD8C,EAE9C,OAF8C,EAEvB;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,mBADU;AAElB,IAAA,cAAc,EAAE,SAFE;AAGlB,IAAA,kBAAkB,EAAE,SAHF;AAIlB,IAAA,aAAa,EAAE,SAJG;AAKlB,IAAA,KAAK,EAAE,SALW;AAMlB,IAAA,oBAAoB,EAAE,SANJ;AAOlB,IAAA,MAAM,EAAE,SAPU;AAQlB,IAAA,SAAS,EAAE,SARO;AASlB,IAAA,uBAAuB,EAAE,SATP;AAUlB,IAAA,UAAU,EAAE,SAVM;AAWlB,IAAA,YAAY,EAAE;AAXI,GAApB;;AAaA,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,MAAM,CAAC,kBADiE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,IAAA,QAAQ,CAAC,MAAT,GAAkB,+BAA+B,CAAC,MAAM,CAAC,MAAR,EAAgB,OAAhB,CAAjD;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MACE,MAAM,CAAC,uBAAP,KAAmC,SAAnC,IACA,MAAM,CAAC,uBAAP,KAAmC,IAFrC,EAGE;AACA,IAAA,QAAQ,CAAC,uBAAT,GAAmC,IAAI,IAAJ,CACjC,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,uBAAP,GAAiC,IAA5C,CADiC,CAAnC;AAGD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,SAAO,QAAP;AACD,CA9DD;;AAgEA,IAAM,8CAA8C,GAAG,UACrD,MADqD,EAErD,OAFqD,EAE9B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,0BADU;AAElB,IAAA,aAAa,EAAE,SAFG;AAGlB,IAAA,cAAc,EAAE,SAHE;AAIlB,IAAA,kBAAkB,EAAE,SAJF;AAKlB,IAAA,KAAK,EAAE,SALW;AAMlB,IAAA,cAAc,EAAE,SANE;AAOlB,IAAA,oBAAoB,EAAE,SAPJ;AAQlB,IAAA,SAAS,EAAE,SARO;AASlB,IAAA,uBAAuB,EAAE,SATP;AAUlB,IAAA,UAAU,EAAE,SAVM;AAWlB,IAAA,YAAY,EAAE;AAXI,GAApB;;AAaA,MAAI,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,KAAyB,IAAnE,EAAyE;AACvE,IAAA,QAAQ,CAAC,aAAT,GAAyB,MAAM,CAAC,aAAhC;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,4CAA4C,CACxE,MAAM,CAAC,kBADiE,EAExE,OAFwE,CAA1E;AAID;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,MAAI,MAAM,CAAC,cAAP,KAA0B,SAA1B,IAAuC,MAAM,CAAC,cAAP,KAA0B,IAArE,EAA2E;AACzE,IAAA,QAAQ,CAAC,cAAT,GAA0B,MAAM,CAAC,cAAjC;AACD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,IAAA,QAAQ,CAAC,oBAAT,GAAgC,MAAM,CAAC,oBAAvC;AACD;;AACD,MAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,IAAA,QAAQ,CAAC,SAAT,GAAqB,MAAM,CAAC,SAA5B;AACD;;AACD,MACE,MAAM,CAAC,uBAAP,KAAmC,SAAnC,IACA,MAAM,CAAC,uBAAP,KAAmC,IAFrC,EAGE;AACA,IAAA,QAAQ,CAAC,uBAAT,GAAmC,IAAI,IAAJ,CACjC,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,uBAAP,GAAiC,IAA5C,CADiC,CAAnC;AAGD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MAAI,MAAM,CAAC,YAAP,KAAwB,SAAxB,IAAqC,MAAM,CAAC,YAAP,KAAwB,IAAjE,EAAuE;AACrE,IAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACD;;AACD,SAAO,QAAP;AACD,CA9DD;;AAgEA,IAAM,oCAAoC,GAAG,UAC3C,MAD2C,EAE3C,OAF2C,EAEpB;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AAAK,WAAA,KAAA;AAAK,GAAxC,CAAP;AACD,CALD;;AAOA,IAAM,2CAA2C,GAAG,UAClD,MADkD,EAElD,OAFkD,EAE3B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,uBADU;AAElB,IAAA,0BAA0B,EAAE,SAFV;AAGlB,IAAA,kBAAkB,EAAE,SAHF;AAIlB,IAAA,OAAO,EAAE;AAJS,GAApB;;AAMA,MACE,MAAM,CAAC,0BAAP,KAAsC,SAAtC,IACA,MAAM,CAAC,0BAAP,KAAsC,IAFxC,EAGE;AACA,IAAA,QAAQ,CAAC,0BAAT,GAAsC,MAAM,CAAC,0BAA7C;AACD;;AACD,MACE,MAAM,CAAC,kBAAP,KAA8B,SAA9B,IACA,MAAM,CAAC,kBAAP,KAA8B,IAFhC,EAGE;AACA,IAAA,QAAQ,CAAC,kBAAT,GAA8B,MAAM,CAAC,kBAArC;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,IAAA,QAAQ,CAAC,OAAT,GAAmB,gCAAgC,CACjD,MAAM,CAAC,OAD0C,EAEjD,OAFiD,CAAnD;AAID;;AACD,SAAO,QAAP;AACD,CA7BD;;AA+BA,IAAM,iDAAiD,GAAG,UACxD,MADwD,EAExD,OAFwD,EAEjC;AAEvB,MACE,MAAM,CAAC,wBAAP,KAAoC,SAApC,IACA,MAAM,CAAC,wBAAP,KAAoC,IAFtC,EAGE;AACA,WAAO;AACL,MAAA,wBAAwB,EAAE,8CAA8C,CACtE,MAAM,CAAC,wBAD+D,EAEtE,OAFsE;AADnE,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,wBAAP,KAAoC,SAApC,IACA,MAAM,CAAC,wBAAP,KAAoC,IAFtC,EAGE;AACA,WAAO;AACL,MAAA,wBAAwB,EAAE,8CAA8C,CACtE,MAAM,CAAC,wBAD+D,EAEtE,OAFsE;AADnE,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,WAAO;AACL,MAAA,oBAAoB,EAAE,0CAA0C,CAC9D,MAAM,CAAC,oBADuD,EAE9D,OAF8D;AAD3D,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,wBAAP,KAAoC,SAApC,IACA,MAAM,CAAC,wBAAP,KAAoC,IAFtC,EAGE;AACA,WAAO;AACL,MAAA,wBAAwB,EAAE,8CAA8C,CACtE,MAAM,CAAC,wBAD+D,EAEtE,OAFsE;AADnE,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,oBAAP,KAAgC,SAAhC,IACA,MAAM,CAAC,oBAAP,KAAgC,IAFlC,EAGE;AACA,WAAO;AACL,MAAA,oBAAoB,EAAE,0CAA0C,CAC9D,MAAM,CAAC,oBADuD,EAE9D,OAF8D;AAD3D,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,WAAO;AACL,MAAA,gBAAgB,EAAE,sCAAsC,CACtD,MAAM,CAAC,gBAD+C,EAEtD,OAFsD;AADnD,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,sBAAP,KAAkC,SAAlC,IACA,MAAM,CAAC,sBAAP,KAAkC,IAFpC,EAGE;AACA,WAAO;AACL,MAAA,sBAAsB,EAAE,4CAA4C,CAClE,MAAM,CAAC,sBAD2D,EAElE,OAFkE;AAD/D,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,sBAAP,KAAkC,SAAlC,IACA,MAAM,CAAC,sBAAP,KAAkC,IAFpC,EAGE;AACA,WAAO;AACL,MAAA,sBAAsB,EAAE,4CAA4C,CAClE,MAAM,CAAC,sBAD2D,EAElE,OAFkE;AAD/D,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,yBAAP,KAAqC,SAArC,IACA,MAAM,CAAC,yBAAP,KAAqC,IAFvC,EAGE;AACA,WAAO;AACL,MAAA,yBAAyB,EAAE,+CAA+C,CACxE,MAAM,CAAC,yBADiE,EAExE,OAFwE;AADrE,KAAP;AAMD;;AACD,MACE,MAAM,CAAC,qBAAP,KAAiC,SAAjC,IACA,MAAM,CAAC,qBAAP,KAAiC,IAFnC,EAGE;AACA,WAAO;AACL,MAAA,qBAAqB,EAAE,2CAA2C,CAChE,MAAM,CAAC,qBADyD,EAEhE,OAFgE;AAD7D,KAAP;AAMD;;AACD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,CAApB,CAAZ;AACA,SAAO;AAAE,IAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,MAAM,CAAC,GAAD,CAAZ;AAAZ,GAAP;AACD,CApHD;;AAsHA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,WAAW,EAAE;AAFK,GAApB;;AAIA,MAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,IAAA,QAAQ,CAAC,WAAT,GAAuB,iDAAiD,CACtE,MAAM,CAAC,WAD+D,EAEtE,OAFsE,CAAxE;AAID;;AACD,SAAO,QAAP;AACD,CAfD;;AAiBA,IAAM,yBAAyB,GAAG,UAChC,MADgC,EAEhC,OAFgC,EAET;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,KADU;AAElB,IAAA,GAAG,EAAE,SAFa;AAGlB,IAAA,KAAK,EAAE;AAHW,GAApB;;AAKA,MAAI,MAAM,CAAC,GAAP,KAAe,SAAf,IAA4B,MAAM,CAAC,GAAP,KAAe,IAA/C,EAAqD;AACnD,IAAA,QAAQ,CAAC,GAAT,GAAe,MAAM,CAAC,GAAtB;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,KAAP,KAAiB,IAAnD,EAAyD;AACvD,IAAA,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAAxB;AACD;;AACD,SAAO,QAAP;AACD,CAhBD;;AAkBA,IAAM,6BAA6B,GAAG,UACpC,MADoC,EAEpC,OAFoC,EAEb;AAEvB,SAAO,CAAC,MAAM,IAAI,EAAX,EAAe,GAAf,CAAmB,UAAC,KAAD,EAAW;AACnC,WAAA,yBAAyB,CAAC,KAAD,EAAQ,OAAR,CAAzB;AAAyC,GADpC,CAAP;AAGD,CAPD;;AASA,IAAM,4CAA4C,GAAG,UACnD,MADmD,EAEnD,OAFmD,EAE5B;AAEvB,MAAI,QAAQ,GAAQ;AAClB,IAAA,MAAM,EAAE,wBADU;AAElB,IAAA,iBAAiB,EAAE,SAFD;AAGlB,IAAA,UAAU,EAAE,SAHM;AAIlB,IAAA,gBAAgB,EAAE;AAJA,GAApB;;AAMA,MACE,MAAM,CAAC,iBAAP,KAA6B,SAA7B,IACA,MAAM,CAAC,iBAAP,KAA6B,IAF/B,EAGE;AACA,IAAA,QAAQ,CAAC,iBAAT,GAA6B,MAAM,CAAC,iBAApC;AACD;;AACD,MAAI,MAAM,CAAC,UAAP,KAAsB,SAAtB,IAAmC,MAAM,CAAC,UAAP,KAAsB,IAA7D,EAAmE;AACjE,IAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACD;;AACD,MACE,MAAM,CAAC,gBAAP,KAA4B,SAA5B,IACA,MAAM,CAAC,gBAAP,KAA4B,IAF9B,EAGE;AACA,IAAA,QAAQ,CAAC,gBAAT,GAA4B,MAAM,CAAC,gBAAnC;AACD;;AACD,SAAO,QAAP;AACD,CA1BD;;AA4BA,IAAM,mBAAmB,GAAG,UAAC,MAAD,EAAuB;AAAyB,SAAC;AAC3E,IAAA,cAAc,EAAE,MAAM,CAAC,UADoD;AAE3E,IAAA,WAAW,EAAE,MAAM,CAAC,OAFuD;AAG3E,IAAA,SAAS,EAAE,MAAM,CAAC,OAAP,CAAe,kBAAf;AAHgE,GAAD;AAI1E,CAJF,C,CAMA;;;AACA,IAAM,WAAW,GAAG,UAClB,UADkB,EAElB,OAFkB,EAEK;AAEvB,MAAI,UAAU,YAAY,UAA1B,EAAsC;AACpC,WAAO,OAAO,CAAC,OAAR,CAAgB,UAAhB,CAAP;AACD;;AACD,SACE,OAAO,CAAC,eAAR,CAAwB,UAAxB,KAAuC,OAAO,CAAC,OAAR,CAAgB,IAAI,UAAJ,EAAhB,CADzC;AAGD,CAVD,C,CAYA;;;AACA,IAAM,iBAAiB,GAAG,UACxB,UADwB,EAExB,OAFwB,EAED;AAEvB,SAAO,WAAW,CAAC,UAAD,EAAa,OAAb,CAAX,CAAiC,IAAjC,CAAsC,UAAA,IAAA,EAAI;AAC/C,WAAA,OAAO,CAAC,WAAR,CAAoB,IAApB,CAAA;AAAyB,GADpB,CAAP;AAGD,CAPD;;AASA,IAAM,mBAAmB,GAAG,UAC1B,OAD0B,EAE1B,OAF0B,EAG1B,IAH0B,EAI1B,gBAJ0B,EAK1B,IAL0B,EAKjB;AAET,MAAM,QAAQ,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACT,OAAO,CAAC,QADC,CAAA,EACO;AACnB,IAAA,QAAQ,EAAE,OADS;AAEnB,IAAA,MAAM,EAAE,MAFW;AAGnB,IAAA,IAAI,EAAE,IAHa;AAInB,IAAA,OAAO,EAAE;AAJU,GADP,CAAd;;AAOA,MAAI,gBAAgB,KAAK,SAAzB,EAAoC;AAClC,IAAA,QAAQ,CAAC,QAAT,GAAoB,gBAApB;AACD;;AACD,MAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,IAAA,QAAQ,CAAC,IAAT,GAAgB,IAAhB;AACD;;AACD,SAAO,IAAI,aAAJ,CAAkB,QAAlB,CAAP;AACD,CArBD;;AAuBA,IAAM,SAAS,GAAG,UAAC,UAAD,EAAkB,OAAlB,EAAyC;AACzD,SAAO,iBAAiB,CAAC,UAAD,EAAa,OAAb,CAAjB,CAAuC,IAAvC,CAA4C,UAAA,OAAA,EAAO;AACxD,QAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,aAAO,IAAI,CAAC,KAAL,CAAW,OAAX,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GALM,CAAP;AAMD,CAPD","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function serializeAws_json1_1AddTagsToStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.AddTagsToStream\";\n            body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1CreateStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.CreateStream\";\n            body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DecreaseStreamRetentionPeriodCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DecreaseStreamRetentionPeriod\";\n            body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DeleteStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DeleteStream\";\n            body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DeregisterStreamConsumerCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DeregisterStreamConsumer\";\n            body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DescribeLimitsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeLimits\";\n            body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DescribeStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeStream\";\n            body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DescribeStreamConsumerCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeStreamConsumer\";\n            body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DescribeStreamSummaryCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DescribeStreamSummary\";\n            body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1DisableEnhancedMonitoringCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.DisableEnhancedMonitoring\";\n            body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1EnableEnhancedMonitoringCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.EnableEnhancedMonitoring\";\n            body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1GetRecordsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.GetRecords\";\n            body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1GetShardIteratorCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.GetShardIterator\";\n            body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1IncreaseStreamRetentionPeriodCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.IncreaseStreamRetentionPeriod\";\n            body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1ListShardsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListShards\";\n            body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1ListStreamConsumersCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListStreamConsumers\";\n            body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1ListStreamsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListStreams\";\n            body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1ListTagsForStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.ListTagsForStream\";\n            body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1MergeShardsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.MergeShards\";\n            body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1PutRecordCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.PutRecord\";\n            body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1PutRecordsCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.PutRecords\";\n            body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1RegisterStreamConsumerCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.RegisterStreamConsumer\";\n            body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1RemoveTagsFromStreamCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.RemoveTagsFromStream\";\n            body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1SplitShardCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.SplitShard\";\n            body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1StartStreamEncryptionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.StartStreamEncryption\";\n            body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1StopStreamEncryptionCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.StopStreamEncryption\";\n            body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1SubscribeToShardCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.SubscribeToShard\";\n            body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function serializeAws_json1_1UpdateShardCountCommand(input, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var headers, body;\n        return __generator(this, function (_a) {\n            headers = {};\n            headers[\"Content-Type\"] = \"application/x-amz-json-1.1\";\n            headers[\"X-Amz-Target\"] = \"Kinesis_20131202.UpdateShardCount\";\n            body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n            return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n        });\n    });\n}\nexport function deserializeAws_json1_1AddTagsToStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1AddTagsToStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1CreateStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1CreateStreamCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1CreateStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                    }\n                    return [3 /*break*/, 8];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 8:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _g.label = 9;\n                case 9:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DeleteStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DeleteStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"LimitExceededException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 2];\n                        case \"ResourceInUseException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 4];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 6];\n                    }\n                    return [3 /*break*/, 8];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 8:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _g.label = 9;\n                case 9:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DeregisterStreamConsumerCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 6];\n                    }\n                    return [3 /*break*/, 8];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 8:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _g.label = 9;\n                case 9:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DescribeLimitsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeLimitsOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DescribeLimitsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"LimitExceededException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DescribeStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeStreamOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DescribeStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n        return __generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"LimitExceededException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 2];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 4];\n                    }\n                    return [3 /*break*/, 6];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 7];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 7];\n                case 6:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _f.label = 7;\n                case 7:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DescribeStreamConsumerCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeStreamConsumerOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 6];\n                    }\n                    return [3 /*break*/, 8];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 8:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _g.label = 9;\n                case 9:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DescribeStreamSummaryCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeStreamSummaryOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n        return __generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"LimitExceededException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 2];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 4];\n                    }\n                    return [3 /*break*/, 6];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 7];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 7];\n                case 6:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _f.label = 7;\n                case 7:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1DisableEnhancedMonitoringCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"EnhancedMonitoringOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1EnableEnhancedMonitoringCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"EnhancedMonitoringOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1GetRecordsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1GetRecordsCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"GetRecordsOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1GetRecordsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n        return __generator(this, function (_p) {\n            switch (_p.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"ExpiredIteratorException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#ExpiredIteratorException\": return [3 /*break*/, 2];\n                        case \"InvalidArgumentException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 4];\n                        case \"KMSAccessDeniedException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\": return [3 /*break*/, 6];\n                        case \"KMSDisabledException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\": return [3 /*break*/, 8];\n                        case \"KMSInvalidStateException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\": return [3 /*break*/, 10];\n                        case \"KMSNotFoundException\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\": return [3 /*break*/, 12];\n                        case \"KMSOptInRequired\": return [3 /*break*/, 14];\n                        case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\": return [3 /*break*/, 14];\n                        case \"KMSThrottlingException\": return [3 /*break*/, 16];\n                        case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\": return [3 /*break*/, 16];\n                        case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 18];\n                        case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\": return [3 /*break*/, 18];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 20];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 20];\n                    }\n                    return [3 /*break*/, 22];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 14:\n                    _k = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n                case 15:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 16:\n                    _l = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n                case 17:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 18:\n                    _m = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n                case 19:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 20:\n                    _o = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 21:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 22:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _p.label = 23;\n                case 23:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1GetShardIteratorCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"GetShardIteratorOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1GetShardIteratorCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 6];\n                    }\n                    return [3 /*break*/, 8];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 8:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _g.label = 9;\n                case 9:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1ListShardsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1ListShardsCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1ListShardsOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListShardsOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1ListShardsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"ExpiredNextTokenException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#ExpiredNextTokenException\": return [3 /*break*/, 2];\n                        case \"InvalidArgumentException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 4];\n                        case \"LimitExceededException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 6];\n                        case \"ResourceInUseException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 8];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1ListStreamConsumersCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListStreamConsumersOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1ListStreamConsumersCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"ExpiredNextTokenException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#ExpiredNextTokenException\": return [3 /*break*/, 2];\n                        case \"InvalidArgumentException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 4];\n                        case \"LimitExceededException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 6];\n                        case \"ResourceInUseException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 8];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 10];\n                    }\n                    return [3 /*break*/, 12];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 13];\n                case 12:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _j.label = 13;\n                case 13:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1ListStreamsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1ListStreamsCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListStreamsOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1ListStreamsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"LimitExceededException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 2];\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 5];\n                case 4:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _e.label = 5;\n                case 5:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1ListTagsForStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListTagsForStreamOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1ListTagsForStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 6];\n                    }\n                    return [3 /*break*/, 8];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 9];\n                case 8:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _g.label = 9;\n                case 9:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1MergeShardsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1MergeShardsCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1MergeShardsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1PutRecordCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1PutRecordCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1PutRecordOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"PutRecordOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1PutRecordCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n        return __generator(this, function (_o) {\n            switch (_o.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"KMSAccessDeniedException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\": return [3 /*break*/, 4];\n                        case \"KMSDisabledException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\": return [3 /*break*/, 6];\n                        case \"KMSInvalidStateException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\": return [3 /*break*/, 8];\n                        case \"KMSNotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\": return [3 /*break*/, 10];\n                        case \"KMSOptInRequired\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\": return [3 /*break*/, 12];\n                        case \"KMSThrottlingException\": return [3 /*break*/, 14];\n                        case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\": return [3 /*break*/, 14];\n                        case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                        case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 18];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 18];\n                    }\n                    return [3 /*break*/, 20];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 14:\n                    _k = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n                case 15:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 16:\n                    _l = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n                case 17:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 18:\n                    _m = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 19:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 20:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _o.label = 21;\n                case 21:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1PutRecordsCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1PutRecordsCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"PutRecordsOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1PutRecordsCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n        return __generator(this, function (_o) {\n            switch (_o.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"KMSAccessDeniedException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\": return [3 /*break*/, 4];\n                        case \"KMSDisabledException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\": return [3 /*break*/, 6];\n                        case \"KMSInvalidStateException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\": return [3 /*break*/, 8];\n                        case \"KMSNotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\": return [3 /*break*/, 10];\n                        case \"KMSOptInRequired\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\": return [3 /*break*/, 12];\n                        case \"KMSThrottlingException\": return [3 /*break*/, 14];\n                        case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\": return [3 /*break*/, 14];\n                        case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                        case \"com.amazonaws.kinesis.v20131202#ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 18];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 18];\n                    }\n                    return [3 /*break*/, 20];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 14:\n                    _k = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n                case 15:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 16:\n                    _l = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n                case 17:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 18:\n                    _m = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 19:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 21];\n                case 20:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _o.label = 21;\n                case 21:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1RegisterStreamConsumerCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"RegisterStreamConsumerOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1RemoveTagsFromStreamCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1SplitShardCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1SplitShardCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1SplitShardCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1StartStreamEncryptionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1StartStreamEncryptionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n        return __generator(this, function (_p) {\n            switch (_p.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"KMSAccessDeniedException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#KMSAccessDeniedException\": return [3 /*break*/, 4];\n                        case \"KMSDisabledException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#KMSDisabledException\": return [3 /*break*/, 6];\n                        case \"KMSInvalidStateException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#KMSInvalidStateException\": return [3 /*break*/, 8];\n                        case \"KMSNotFoundException\": return [3 /*break*/, 10];\n                        case \"com.amazonaws.kinesis.v20131202#KMSNotFoundException\": return [3 /*break*/, 10];\n                        case \"KMSOptInRequired\": return [3 /*break*/, 12];\n                        case \"com.amazonaws.kinesis.v20131202#KMSOptInRequired\": return [3 /*break*/, 12];\n                        case \"KMSThrottlingException\": return [3 /*break*/, 14];\n                        case \"com.amazonaws.kinesis.v20131202#KMSThrottlingException\": return [3 /*break*/, 14];\n                        case \"LimitExceededException\": return [3 /*break*/, 16];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 16];\n                        case \"ResourceInUseException\": return [3 /*break*/, 18];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 18];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 20];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 20];\n                    }\n                    return [3 /*break*/, 22];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 10:\n                    _h = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n                case 11:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 12:\n                    _j = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n                case 13:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 14:\n                    _k = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n                case 15:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 16:\n                    _l = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 17:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 18:\n                    _m = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 19:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 20:\n                    _o = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 21:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 23];\n                case 22:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _p.label = 23;\n                case 23:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1StopStreamEncryptionCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, collectBody(output.body, context)];\n                case 1:\n                    _a.sent();\n                    response = {\n                        $metadata: deserializeMetadata(output)\n                    };\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1StopStreamEncryptionCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1SubscribeToShardCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"SubscribeToShardOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1SubscribeToShardCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nexport function deserializeAws_json1_1UpdateShardCountCommand(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, contents, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (output.statusCode >= 400) {\n                        return [2 /*return*/, deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n                    }\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    data = _a.sent();\n                    contents = {};\n                    contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n                    response = __assign({ $metadata: deserializeMetadata(output), __type: \"UpdateShardCountOutput\" }, contents);\n                    return [2 /*return*/, Promise.resolve(response)];\n            }\n        });\n    });\n}\nfunction deserializeAws_json1_1UpdateShardCountCommandError(output, context) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = [__assign({}, output)];\n                    _b = {};\n                    return [4 /*yield*/, parseBody(output.body, context)];\n                case 1:\n                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                    errorCode = \"UnknownError\";\n                    errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                    errorCode =\n                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                    _c = errorCode;\n                    switch (_c) {\n                        case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"com.amazonaws.kinesis.v20131202#InvalidArgumentException\": return [3 /*break*/, 2];\n                        case \"LimitExceededException\": return [3 /*break*/, 4];\n                        case \"com.amazonaws.kinesis.v20131202#LimitExceededException\": return [3 /*break*/, 4];\n                        case \"ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceInUseException\": return [3 /*break*/, 6];\n                        case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                        case \"com.amazonaws.kinesis.v20131202#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    }\n                    return [3 /*break*/, 10];\n                case 2:\n                    _d = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n                case 3:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 4:\n                    _e = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n                case 5:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 6:\n                    _f = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n                case 7:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 8:\n                    _g = [{}];\n                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n                case 9:\n                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                    return [3 /*break*/, 11];\n                case 10:\n                    parsedBody = parsedOutput.body;\n                    errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                    response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                    _h.label = 11;\n                case 11:\n                    message = response.message || response.Message || errorCode;\n                    response.message = message;\n                    delete response.Message;\n                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n            }\n        });\n    });\n}\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n        contents = __assign({ name: \"ExpiredIteratorException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n        contents = __assign({ name: \"ExpiredNextTokenException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n        contents = __assign({ name: \"InvalidArgumentException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n        contents = __assign({ name: \"KMSAccessDeniedException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n        contents = __assign({ name: \"KMSDisabledException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n        contents = __assign({ name: \"KMSInvalidStateException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n        contents = __assign({ name: \"KMSNotFoundException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n        contents = __assign({ name: \"KMSOptInRequired\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n        contents = __assign({ name: \"KMSThrottlingException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n        contents = __assign({ name: \"LimitExceededException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n        contents = __assign({ name: \"ProvisionedThroughputExceededException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n        contents = __assign({ name: \"ResourceInUseException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n        contents = __assign({ name: \"ResourceNotFoundException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_json1_1AddTagsToStreamInput = function (input, context) {\n    var bodyParams = {};\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    if (input.Tags !== undefined) {\n        bodyParams[\"Tags\"] = serializeAws_json1_1TagMap(input.Tags, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1CreateStreamInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ShardCount !== undefined) {\n        bodyParams[\"ShardCount\"] = input.ShardCount;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function (input, context) {\n    var bodyParams = {};\n    if (input.RetentionPeriodHours !== undefined) {\n        bodyParams[\"RetentionPeriodHours\"] = input.RetentionPeriodHours;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DeleteStreamInput = function (input, context) {\n    var bodyParams = {};\n    if (input.EnforceConsumerDeletion !== undefined) {\n        bodyParams[\"EnforceConsumerDeletion\"] = input.EnforceConsumerDeletion;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ConsumerARN !== undefined) {\n        bodyParams[\"ConsumerARN\"] = input.ConsumerARN;\n    }\n    if (input.ConsumerName !== undefined) {\n        bodyParams[\"ConsumerName\"] = input.ConsumerName;\n    }\n    if (input.StreamARN !== undefined) {\n        bodyParams[\"StreamARN\"] = input.StreamARN;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DescribeLimitsInput = function (input, context) {\n    var bodyParams = {};\n    return bodyParams;\n};\nvar serializeAws_json1_1DescribeStreamConsumerInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ConsumerARN !== undefined) {\n        bodyParams[\"ConsumerARN\"] = input.ConsumerARN;\n    }\n    if (input.ConsumerName !== undefined) {\n        bodyParams[\"ConsumerName\"] = input.ConsumerName;\n    }\n    if (input.StreamARN !== undefined) {\n        bodyParams[\"StreamARN\"] = input.StreamARN;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DescribeStreamInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ExclusiveStartShardId !== undefined) {\n        bodyParams[\"ExclusiveStartShardId\"] = input.ExclusiveStartShardId;\n    }\n    if (input.Limit !== undefined) {\n        bodyParams[\"Limit\"] = input.Limit;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DescribeStreamSummaryInput = function (input, context) {\n    var bodyParams = {};\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ShardLevelMetrics !== undefined) {\n        bodyParams[\"ShardLevelMetrics\"] = serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context);\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ShardLevelMetrics !== undefined) {\n        bodyParams[\"ShardLevelMetrics\"] = serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context);\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1GetRecordsInput = function (input, context) {\n    var bodyParams = {};\n    if (input.Limit !== undefined) {\n        bodyParams[\"Limit\"] = input.Limit;\n    }\n    if (input.ShardIterator !== undefined) {\n        bodyParams[\"ShardIterator\"] = input.ShardIterator;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1GetShardIteratorInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ShardId !== undefined) {\n        bodyParams[\"ShardId\"] = input.ShardId;\n    }\n    if (input.ShardIteratorType !== undefined) {\n        bodyParams[\"ShardIteratorType\"] = input.ShardIteratorType;\n    }\n    if (input.StartingSequenceNumber !== undefined) {\n        bodyParams[\"StartingSequenceNumber\"] = input.StartingSequenceNumber;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    if (input.Timestamp !== undefined) {\n        bodyParams[\"Timestamp\"] = Math.round(input.Timestamp.getTime() / 1000);\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function (input, context) {\n    var bodyParams = {};\n    if (input.RetentionPeriodHours !== undefined) {\n        bodyParams[\"RetentionPeriodHours\"] = input.RetentionPeriodHours;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1ListShardsInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ExclusiveStartShardId !== undefined) {\n        bodyParams[\"ExclusiveStartShardId\"] = input.ExclusiveStartShardId;\n    }\n    if (input.MaxResults !== undefined) {\n        bodyParams[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.NextToken !== undefined) {\n        bodyParams[\"NextToken\"] = input.NextToken;\n    }\n    if (input.StreamCreationTimestamp !== undefined) {\n        bodyParams[\"StreamCreationTimestamp\"] = Math.round(input.StreamCreationTimestamp.getTime() / 1000);\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1ListStreamConsumersInput = function (input, context) {\n    var bodyParams = {};\n    if (input.MaxResults !== undefined) {\n        bodyParams[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.NextToken !== undefined) {\n        bodyParams[\"NextToken\"] = input.NextToken;\n    }\n    if (input.StreamARN !== undefined) {\n        bodyParams[\"StreamARN\"] = input.StreamARN;\n    }\n    if (input.StreamCreationTimestamp !== undefined) {\n        bodyParams[\"StreamCreationTimestamp\"] = Math.round(input.StreamCreationTimestamp.getTime() / 1000);\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1ListStreamsInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ExclusiveStartStreamName !== undefined) {\n        bodyParams[\"ExclusiveStartStreamName\"] = input.ExclusiveStartStreamName;\n    }\n    if (input.Limit !== undefined) {\n        bodyParams[\"Limit\"] = input.Limit;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1ListTagsForStreamInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ExclusiveStartTagKey !== undefined) {\n        bodyParams[\"ExclusiveStartTagKey\"] = input.ExclusiveStartTagKey;\n    }\n    if (input.Limit !== undefined) {\n        bodyParams[\"Limit\"] = input.Limit;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1MergeShardsInput = function (input, context) {\n    var bodyParams = {};\n    if (input.AdjacentShardToMerge !== undefined) {\n        bodyParams[\"AdjacentShardToMerge\"] = input.AdjacentShardToMerge;\n    }\n    if (input.ShardToMerge !== undefined) {\n        bodyParams[\"ShardToMerge\"] = input.ShardToMerge;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1MetricsNameList = function (input, context) {\n    var e_1, _a;\n    var contents = [];\n    try {\n        for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n            var entry = input_1_1.value;\n            contents.push(entry);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return contents;\n};\nvar serializeAws_json1_1PutRecordInput = function (input, context) {\n    var bodyParams = {};\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = context.base64Encoder(input.Data);\n    }\n    if (input.ExplicitHashKey !== undefined) {\n        bodyParams[\"ExplicitHashKey\"] = input.ExplicitHashKey;\n    }\n    if (input.PartitionKey !== undefined) {\n        bodyParams[\"PartitionKey\"] = input.PartitionKey;\n    }\n    if (input.SequenceNumberForOrdering !== undefined) {\n        bodyParams[\"SequenceNumberForOrdering\"] = input.SequenceNumberForOrdering;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1PutRecordsInput = function (input, context) {\n    var bodyParams = {};\n    if (input.Records !== undefined) {\n        bodyParams[\"Records\"] = serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context);\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1PutRecordsRequestEntry = function (input, context) {\n    var bodyParams = {};\n    if (input.Data !== undefined) {\n        bodyParams[\"Data\"] = context.base64Encoder(input.Data);\n    }\n    if (input.ExplicitHashKey !== undefined) {\n        bodyParams[\"ExplicitHashKey\"] = input.ExplicitHashKey;\n    }\n    if (input.PartitionKey !== undefined) {\n        bodyParams[\"PartitionKey\"] = input.PartitionKey;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1PutRecordsRequestEntryList = function (input, context) {\n    var e_2, _a;\n    var contents = [];\n    try {\n        for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {\n            var entry = input_2_1.value;\n            contents.push(serializeAws_json1_1PutRecordsRequestEntry(entry, context));\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return contents;\n};\nvar serializeAws_json1_1RegisterStreamConsumerInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ConsumerName !== undefined) {\n        bodyParams[\"ConsumerName\"] = input.ConsumerName;\n    }\n    if (input.StreamARN !== undefined) {\n        bodyParams[\"StreamARN\"] = input.StreamARN;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function (input, context) {\n    var bodyParams = {};\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    if (input.TagKeys !== undefined) {\n        bodyParams[\"TagKeys\"] = serializeAws_json1_1TagKeyList(input.TagKeys, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1SplitShardInput = function (input, context) {\n    var bodyParams = {};\n    if (input.NewStartingHashKey !== undefined) {\n        bodyParams[\"NewStartingHashKey\"] = input.NewStartingHashKey;\n    }\n    if (input.ShardToSplit !== undefined) {\n        bodyParams[\"ShardToSplit\"] = input.ShardToSplit;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1StartStreamEncryptionInput = function (input, context) {\n    var bodyParams = {};\n    if (input.EncryptionType !== undefined) {\n        bodyParams[\"EncryptionType\"] = input.EncryptionType;\n    }\n    if (input.KeyId !== undefined) {\n        bodyParams[\"KeyId\"] = input.KeyId;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1StartingPosition = function (input, context) {\n    var bodyParams = {};\n    if (input.SequenceNumber !== undefined) {\n        bodyParams[\"SequenceNumber\"] = input.SequenceNumber;\n    }\n    if (input.Timestamp !== undefined) {\n        bodyParams[\"Timestamp\"] = Math.round(input.Timestamp.getTime() / 1000);\n    }\n    if (input.Type !== undefined) {\n        bodyParams[\"Type\"] = input.Type;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1StopStreamEncryptionInput = function (input, context) {\n    var bodyParams = {};\n    if (input.EncryptionType !== undefined) {\n        bodyParams[\"EncryptionType\"] = input.EncryptionType;\n    }\n    if (input.KeyId !== undefined) {\n        bodyParams[\"KeyId\"] = input.KeyId;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1SubscribeToShardInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ConsumerARN !== undefined) {\n        bodyParams[\"ConsumerARN\"] = input.ConsumerARN;\n    }\n    if (input.ShardId !== undefined) {\n        bodyParams[\"ShardId\"] = input.ShardId;\n    }\n    if (input.StartingPosition !== undefined) {\n        bodyParams[\"StartingPosition\"] = serializeAws_json1_1StartingPosition(input.StartingPosition, context);\n    }\n    return bodyParams;\n};\nvar serializeAws_json1_1TagKeyList = function (input, context) {\n    var e_3, _a;\n    var contents = [];\n    try {\n        for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {\n            var entry = input_3_1.value;\n            contents.push(entry);\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return contents;\n};\nvar serializeAws_json1_1TagMap = function (input, context) {\n    var mapParams = {};\n    Object.keys(input).forEach(function (key) {\n        mapParams[key] = input[key];\n    });\n    return mapParams;\n};\nvar serializeAws_json1_1UpdateShardCountInput = function (input, context) {\n    var bodyParams = {};\n    if (input.ScalingType !== undefined) {\n        bodyParams[\"ScalingType\"] = input.ScalingType;\n    }\n    if (input.StreamName !== undefined) {\n        bodyParams[\"StreamName\"] = input.StreamName;\n    }\n    if (input.TargetShardCount !== undefined) {\n        bodyParams[\"TargetShardCount\"] = input.TargetShardCount;\n    }\n    return bodyParams;\n};\nvar deserializeAws_json1_1Consumer = function (output, context) {\n    var contents = {\n        __type: \"Consumer\",\n        ConsumerARN: undefined,\n        ConsumerCreationTimestamp: undefined,\n        ConsumerName: undefined,\n        ConsumerStatus: undefined\n    };\n    if (output.ConsumerARN !== undefined && output.ConsumerARN !== null) {\n        contents.ConsumerARN = output.ConsumerARN;\n    }\n    if (output.ConsumerCreationTimestamp !== undefined &&\n        output.ConsumerCreationTimestamp !== null) {\n        contents.ConsumerCreationTimestamp = new Date(Math.round(output.ConsumerCreationTimestamp * 1000));\n    }\n    if (output.ConsumerName !== undefined && output.ConsumerName !== null) {\n        contents.ConsumerName = output.ConsumerName;\n    }\n    if (output.ConsumerStatus !== undefined && output.ConsumerStatus !== null) {\n        contents.ConsumerStatus = output.ConsumerStatus;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ConsumerDescription = function (output, context) {\n    var contents = {\n        __type: \"ConsumerDescription\",\n        ConsumerARN: undefined,\n        ConsumerCreationTimestamp: undefined,\n        ConsumerName: undefined,\n        ConsumerStatus: undefined,\n        StreamARN: undefined\n    };\n    if (output.ConsumerARN !== undefined && output.ConsumerARN !== null) {\n        contents.ConsumerARN = output.ConsumerARN;\n    }\n    if (output.ConsumerCreationTimestamp !== undefined &&\n        output.ConsumerCreationTimestamp !== null) {\n        contents.ConsumerCreationTimestamp = new Date(Math.round(output.ConsumerCreationTimestamp * 1000));\n    }\n    if (output.ConsumerName !== undefined && output.ConsumerName !== null) {\n        contents.ConsumerName = output.ConsumerName;\n    }\n    if (output.ConsumerStatus !== undefined && output.ConsumerStatus !== null) {\n        contents.ConsumerStatus = output.ConsumerStatus;\n    }\n    if (output.StreamARN !== undefined && output.StreamARN !== null) {\n        contents.StreamARN = output.StreamARN;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ConsumerList = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_json1_1Consumer(entry, context);\n    });\n};\nvar deserializeAws_json1_1DescribeLimitsOutput = function (output, context) {\n    var contents = {\n        __type: \"DescribeLimitsOutput\",\n        OpenShardCount: undefined,\n        ShardLimit: undefined\n    };\n    if (output.OpenShardCount !== undefined && output.OpenShardCount !== null) {\n        contents.OpenShardCount = output.OpenShardCount;\n    }\n    if (output.ShardLimit !== undefined && output.ShardLimit !== null) {\n        contents.ShardLimit = output.ShardLimit;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function (output, context) {\n    var contents = {\n        __type: \"DescribeStreamConsumerOutput\",\n        ConsumerDescription: undefined\n    };\n    if (output.ConsumerDescription !== undefined &&\n        output.ConsumerDescription !== null) {\n        contents.ConsumerDescription = deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1DescribeStreamOutput = function (output, context) {\n    var contents = {\n        __type: \"DescribeStreamOutput\",\n        StreamDescription: undefined\n    };\n    if (output.StreamDescription !== undefined &&\n        output.StreamDescription !== null) {\n        contents.StreamDescription = deserializeAws_json1_1StreamDescription(output.StreamDescription, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function (output, context) {\n    var contents = {\n        __type: \"DescribeStreamSummaryOutput\",\n        StreamDescriptionSummary: undefined\n    };\n    if (output.StreamDescriptionSummary !== undefined &&\n        output.StreamDescriptionSummary !== null) {\n        contents.StreamDescriptionSummary = deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1EnhancedMetrics = function (output, context) {\n    var contents = {\n        __type: \"EnhancedMetrics\",\n        ShardLevelMetrics: undefined\n    };\n    if (output.ShardLevelMetrics !== undefined &&\n        output.ShardLevelMetrics !== null) {\n        contents.ShardLevelMetrics = deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1EnhancedMonitoringList = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_json1_1EnhancedMetrics(entry, context);\n    });\n};\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function (output, context) {\n    var contents = {\n        __type: \"EnhancedMonitoringOutput\",\n        CurrentShardLevelMetrics: undefined,\n        DesiredShardLevelMetrics: undefined,\n        StreamName: undefined\n    };\n    if (output.CurrentShardLevelMetrics !== undefined &&\n        output.CurrentShardLevelMetrics !== null) {\n        contents.CurrentShardLevelMetrics = deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context);\n    }\n    if (output.DesiredShardLevelMetrics !== undefined &&\n        output.DesiredShardLevelMetrics !== null) {\n        contents.DesiredShardLevelMetrics = deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context);\n    }\n    if (output.StreamName !== undefined && output.StreamName !== null) {\n        contents.StreamName = output.StreamName;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ExpiredIteratorException = function (output, context) {\n    var contents = {\n        __type: \"ExpiredIteratorException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ExpiredNextTokenException = function (output, context) {\n    var contents = {\n        __type: \"ExpiredNextTokenException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1GetRecordsOutput = function (output, context) {\n    var contents = {\n        __type: \"GetRecordsOutput\",\n        MillisBehindLatest: undefined,\n        NextShardIterator: undefined,\n        Records: undefined\n    };\n    if (output.MillisBehindLatest !== undefined &&\n        output.MillisBehindLatest !== null) {\n        contents.MillisBehindLatest = output.MillisBehindLatest;\n    }\n    if (output.NextShardIterator !== undefined &&\n        output.NextShardIterator !== null) {\n        contents.NextShardIterator = output.NextShardIterator;\n    }\n    if (output.Records !== undefined && output.Records !== null) {\n        contents.Records = deserializeAws_json1_1RecordList(output.Records, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1GetShardIteratorOutput = function (output, context) {\n    var contents = {\n        __type: \"GetShardIteratorOutput\",\n        ShardIterator: undefined\n    };\n    if (output.ShardIterator !== undefined && output.ShardIterator !== null) {\n        contents.ShardIterator = output.ShardIterator;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1HashKeyRange = function (output, context) {\n    var contents = {\n        __type: \"HashKeyRange\",\n        EndingHashKey: undefined,\n        StartingHashKey: undefined\n    };\n    if (output.EndingHashKey !== undefined && output.EndingHashKey !== null) {\n        contents.EndingHashKey = output.EndingHashKey;\n    }\n    if (output.StartingHashKey !== undefined && output.StartingHashKey !== null) {\n        contents.StartingHashKey = output.StartingHashKey;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1InternalFailureException = function (output, context) {\n    var contents = {\n        __type: \"InternalFailureException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1InvalidArgumentException = function (output, context) {\n    var contents = {\n        __type: \"InvalidArgumentException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1KMSAccessDeniedException = function (output, context) {\n    var contents = {\n        __type: \"KMSAccessDeniedException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1KMSDisabledException = function (output, context) {\n    var contents = {\n        __type: \"KMSDisabledException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1KMSInvalidStateException = function (output, context) {\n    var contents = {\n        __type: \"KMSInvalidStateException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1KMSNotFoundException = function (output, context) {\n    var contents = {\n        __type: \"KMSNotFoundException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1KMSOptInRequired = function (output, context) {\n    var contents = {\n        __type: \"KMSOptInRequired\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1KMSThrottlingException = function (output, context) {\n    var contents = {\n        __type: \"KMSThrottlingException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n    var contents = {\n        __type: \"LimitExceededException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ListShardsOutput = function (output, context) {\n    var contents = {\n        __type: \"ListShardsOutput\",\n        NextToken: undefined,\n        Shards: undefined\n    };\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    if (output.Shards !== undefined && output.Shards !== null) {\n        contents.Shards = deserializeAws_json1_1ShardList(output.Shards, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ListStreamConsumersOutput = function (output, context) {\n    var contents = {\n        __type: \"ListStreamConsumersOutput\",\n        Consumers: undefined,\n        NextToken: undefined\n    };\n    if (output.Consumers !== undefined && output.Consumers !== null) {\n        contents.Consumers = deserializeAws_json1_1ConsumerList(output.Consumers, context);\n    }\n    if (output.NextToken !== undefined && output.NextToken !== null) {\n        contents.NextToken = output.NextToken;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ListStreamsOutput = function (output, context) {\n    var contents = {\n        __type: \"ListStreamsOutput\",\n        HasMoreStreams: undefined,\n        StreamNames: undefined\n    };\n    if (output.HasMoreStreams !== undefined && output.HasMoreStreams !== null) {\n        contents.HasMoreStreams = output.HasMoreStreams;\n    }\n    if (output.StreamNames !== undefined && output.StreamNames !== null) {\n        contents.StreamNames = deserializeAws_json1_1StreamNameList(output.StreamNames, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ListTagsForStreamOutput = function (output, context) {\n    var contents = {\n        __type: \"ListTagsForStreamOutput\",\n        HasMoreTags: undefined,\n        Tags: undefined\n    };\n    if (output.HasMoreTags !== undefined && output.HasMoreTags !== null) {\n        contents.HasMoreTags = output.HasMoreTags;\n    }\n    if (output.Tags !== undefined && output.Tags !== null) {\n        contents.Tags = deserializeAws_json1_1TagList(output.Tags, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1MetricsNameList = function (output, context) {\n    return (output || []).map(function (entry) { return entry; });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n    var contents = {\n        __type: \"ProvisionedThroughputExceededException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1PutRecordOutput = function (output, context) {\n    var contents = {\n        __type: \"PutRecordOutput\",\n        EncryptionType: undefined,\n        SequenceNumber: undefined,\n        ShardId: undefined\n    };\n    if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n        contents.EncryptionType = output.EncryptionType;\n    }\n    if (output.SequenceNumber !== undefined && output.SequenceNumber !== null) {\n        contents.SequenceNumber = output.SequenceNumber;\n    }\n    if (output.ShardId !== undefined && output.ShardId !== null) {\n        contents.ShardId = output.ShardId;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1PutRecordsOutput = function (output, context) {\n    var contents = {\n        __type: \"PutRecordsOutput\",\n        EncryptionType: undefined,\n        FailedRecordCount: undefined,\n        Records: undefined\n    };\n    if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n        contents.EncryptionType = output.EncryptionType;\n    }\n    if (output.FailedRecordCount !== undefined &&\n        output.FailedRecordCount !== null) {\n        contents.FailedRecordCount = output.FailedRecordCount;\n    }\n    if (output.Records !== undefined && output.Records !== null) {\n        contents.Records = deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1PutRecordsResultEntry = function (output, context) {\n    var contents = {\n        __type: \"PutRecordsResultEntry\",\n        ErrorCode: undefined,\n        ErrorMessage: undefined,\n        SequenceNumber: undefined,\n        ShardId: undefined\n    };\n    if (output.ErrorCode !== undefined && output.ErrorCode !== null) {\n        contents.ErrorCode = output.ErrorCode;\n    }\n    if (output.ErrorMessage !== undefined && output.ErrorMessage !== null) {\n        contents.ErrorMessage = output.ErrorMessage;\n    }\n    if (output.SequenceNumber !== undefined && output.SequenceNumber !== null) {\n        contents.SequenceNumber = output.SequenceNumber;\n    }\n    if (output.ShardId !== undefined && output.ShardId !== null) {\n        contents.ShardId = output.ShardId;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1PutRecordsResultEntryList = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n    });\n};\nvar deserializeAws_json1_1_Record = function (output, context) {\n    var contents = {\n        __type: \"Record\",\n        ApproximateArrivalTimestamp: undefined,\n        Data: undefined,\n        EncryptionType: undefined,\n        PartitionKey: undefined,\n        SequenceNumber: undefined\n    };\n    if (output.ApproximateArrivalTimestamp !== undefined &&\n        output.ApproximateArrivalTimestamp !== null) {\n        contents.ApproximateArrivalTimestamp = new Date(Math.round(output.ApproximateArrivalTimestamp * 1000));\n    }\n    if (output.Data !== undefined && output.Data !== null) {\n        contents.Data = context.base64Decoder(output.Data);\n    }\n    if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n        contents.EncryptionType = output.EncryptionType;\n    }\n    if (output.PartitionKey !== undefined && output.PartitionKey !== null) {\n        contents.PartitionKey = output.PartitionKey;\n    }\n    if (output.SequenceNumber !== undefined && output.SequenceNumber !== null) {\n        contents.SequenceNumber = output.SequenceNumber;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1RecordList = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_json1_1_Record(entry, context);\n    });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function (output, context) {\n    var contents = {\n        __type: \"RegisterStreamConsumerOutput\",\n        Consumer: undefined\n    };\n    if (output.Consumer !== undefined && output.Consumer !== null) {\n        contents.Consumer = deserializeAws_json1_1Consumer(output.Consumer, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ResourceInUseException = function (output, context) {\n    var contents = {\n        __type: \"ResourceInUseException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n    var contents = {\n        __type: \"ResourceNotFoundException\",\n        message: undefined\n    };\n    if (output.message !== undefined && output.message !== null) {\n        contents.message = output.message;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1SequenceNumberRange = function (output, context) {\n    var contents = {\n        __type: \"SequenceNumberRange\",\n        EndingSequenceNumber: undefined,\n        StartingSequenceNumber: undefined\n    };\n    if (output.EndingSequenceNumber !== undefined &&\n        output.EndingSequenceNumber !== null) {\n        contents.EndingSequenceNumber = output.EndingSequenceNumber;\n    }\n    if (output.StartingSequenceNumber !== undefined &&\n        output.StartingSequenceNumber !== null) {\n        contents.StartingSequenceNumber = output.StartingSequenceNumber;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1Shard = function (output, context) {\n    var contents = {\n        __type: \"Shard\",\n        AdjacentParentShardId: undefined,\n        HashKeyRange: undefined,\n        ParentShardId: undefined,\n        SequenceNumberRange: undefined,\n        ShardId: undefined\n    };\n    if (output.AdjacentParentShardId !== undefined &&\n        output.AdjacentParentShardId !== null) {\n        contents.AdjacentParentShardId = output.AdjacentParentShardId;\n    }\n    if (output.HashKeyRange !== undefined && output.HashKeyRange !== null) {\n        contents.HashKeyRange = deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context);\n    }\n    if (output.ParentShardId !== undefined && output.ParentShardId !== null) {\n        contents.ParentShardId = output.ParentShardId;\n    }\n    if (output.SequenceNumberRange !== undefined &&\n        output.SequenceNumberRange !== null) {\n        contents.SequenceNumberRange = deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context);\n    }\n    if (output.ShardId !== undefined && output.ShardId !== null) {\n        contents.ShardId = output.ShardId;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1ShardList = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_json1_1Shard(entry, context);\n    });\n};\nvar deserializeAws_json1_1StreamDescription = function (output, context) {\n    var contents = {\n        __type: \"StreamDescription\",\n        EncryptionType: undefined,\n        EnhancedMonitoring: undefined,\n        HasMoreShards: undefined,\n        KeyId: undefined,\n        RetentionPeriodHours: undefined,\n        Shards: undefined,\n        StreamARN: undefined,\n        StreamCreationTimestamp: undefined,\n        StreamName: undefined,\n        StreamStatus: undefined\n    };\n    if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n        contents.EncryptionType = output.EncryptionType;\n    }\n    if (output.EnhancedMonitoring !== undefined &&\n        output.EnhancedMonitoring !== null) {\n        contents.EnhancedMonitoring = deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context);\n    }\n    if (output.HasMoreShards !== undefined && output.HasMoreShards !== null) {\n        contents.HasMoreShards = output.HasMoreShards;\n    }\n    if (output.KeyId !== undefined && output.KeyId !== null) {\n        contents.KeyId = output.KeyId;\n    }\n    if (output.RetentionPeriodHours !== undefined &&\n        output.RetentionPeriodHours !== null) {\n        contents.RetentionPeriodHours = output.RetentionPeriodHours;\n    }\n    if (output.Shards !== undefined && output.Shards !== null) {\n        contents.Shards = deserializeAws_json1_1ShardList(output.Shards, context);\n    }\n    if (output.StreamARN !== undefined && output.StreamARN !== null) {\n        contents.StreamARN = output.StreamARN;\n    }\n    if (output.StreamCreationTimestamp !== undefined &&\n        output.StreamCreationTimestamp !== null) {\n        contents.StreamCreationTimestamp = new Date(Math.round(output.StreamCreationTimestamp * 1000));\n    }\n    if (output.StreamName !== undefined && output.StreamName !== null) {\n        contents.StreamName = output.StreamName;\n    }\n    if (output.StreamStatus !== undefined && output.StreamStatus !== null) {\n        contents.StreamStatus = output.StreamStatus;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1StreamDescriptionSummary = function (output, context) {\n    var contents = {\n        __type: \"StreamDescriptionSummary\",\n        ConsumerCount: undefined,\n        EncryptionType: undefined,\n        EnhancedMonitoring: undefined,\n        KeyId: undefined,\n        OpenShardCount: undefined,\n        RetentionPeriodHours: undefined,\n        StreamARN: undefined,\n        StreamCreationTimestamp: undefined,\n        StreamName: undefined,\n        StreamStatus: undefined\n    };\n    if (output.ConsumerCount !== undefined && output.ConsumerCount !== null) {\n        contents.ConsumerCount = output.ConsumerCount;\n    }\n    if (output.EncryptionType !== undefined && output.EncryptionType !== null) {\n        contents.EncryptionType = output.EncryptionType;\n    }\n    if (output.EnhancedMonitoring !== undefined &&\n        output.EnhancedMonitoring !== null) {\n        contents.EnhancedMonitoring = deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context);\n    }\n    if (output.KeyId !== undefined && output.KeyId !== null) {\n        contents.KeyId = output.KeyId;\n    }\n    if (output.OpenShardCount !== undefined && output.OpenShardCount !== null) {\n        contents.OpenShardCount = output.OpenShardCount;\n    }\n    if (output.RetentionPeriodHours !== undefined &&\n        output.RetentionPeriodHours !== null) {\n        contents.RetentionPeriodHours = output.RetentionPeriodHours;\n    }\n    if (output.StreamARN !== undefined && output.StreamARN !== null) {\n        contents.StreamARN = output.StreamARN;\n    }\n    if (output.StreamCreationTimestamp !== undefined &&\n        output.StreamCreationTimestamp !== null) {\n        contents.StreamCreationTimestamp = new Date(Math.round(output.StreamCreationTimestamp * 1000));\n    }\n    if (output.StreamName !== undefined && output.StreamName !== null) {\n        contents.StreamName = output.StreamName;\n    }\n    if (output.StreamStatus !== undefined && output.StreamStatus !== null) {\n        contents.StreamStatus = output.StreamStatus;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1StreamNameList = function (output, context) {\n    return (output || []).map(function (entry) { return entry; });\n};\nvar deserializeAws_json1_1SubscribeToShardEvent = function (output, context) {\n    var contents = {\n        __type: \"SubscribeToShardEvent\",\n        ContinuationSequenceNumber: undefined,\n        MillisBehindLatest: undefined,\n        Records: undefined\n    };\n    if (output.ContinuationSequenceNumber !== undefined &&\n        output.ContinuationSequenceNumber !== null) {\n        contents.ContinuationSequenceNumber = output.ContinuationSequenceNumber;\n    }\n    if (output.MillisBehindLatest !== undefined &&\n        output.MillisBehindLatest !== null) {\n        contents.MillisBehindLatest = output.MillisBehindLatest;\n    }\n    if (output.Records !== undefined && output.Records !== null) {\n        contents.Records = deserializeAws_json1_1RecordList(output.Records, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1SubscribeToShardEventStream = function (output, context) {\n    if (output.InternalFailureException !== undefined &&\n        output.InternalFailureException !== null) {\n        return {\n            InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n        };\n    }\n    if (output.KMSAccessDeniedException !== undefined &&\n        output.KMSAccessDeniedException !== null) {\n        return {\n            KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n        };\n    }\n    if (output.KMSDisabledException !== undefined &&\n        output.KMSDisabledException !== null) {\n        return {\n            KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n        };\n    }\n    if (output.KMSInvalidStateException !== undefined &&\n        output.KMSInvalidStateException !== null) {\n        return {\n            KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n        };\n    }\n    if (output.KMSNotFoundException !== undefined &&\n        output.KMSNotFoundException !== null) {\n        return {\n            KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n        };\n    }\n    if (output.KMSOptInRequired !== undefined &&\n        output.KMSOptInRequired !== null) {\n        return {\n            KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n        };\n    }\n    if (output.KMSThrottlingException !== undefined &&\n        output.KMSThrottlingException !== null) {\n        return {\n            KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n        };\n    }\n    if (output.ResourceInUseException !== undefined &&\n        output.ResourceInUseException !== null) {\n        return {\n            ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n        };\n    }\n    if (output.ResourceNotFoundException !== undefined &&\n        output.ResourceNotFoundException !== null) {\n        return {\n            ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n        };\n    }\n    if (output.SubscribeToShardEvent !== undefined &&\n        output.SubscribeToShardEvent !== null) {\n        return {\n            SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n        };\n    }\n    var key = Object.keys(output)[0];\n    return { $unknown: [key, output[key]] };\n};\nvar deserializeAws_json1_1SubscribeToShardOutput = function (output, context) {\n    var contents = {\n        __type: \"SubscribeToShardOutput\",\n        EventStream: undefined\n    };\n    if (output.EventStream !== undefined && output.EventStream !== null) {\n        contents.EventStream = deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context);\n    }\n    return contents;\n};\nvar deserializeAws_json1_1Tag = function (output, context) {\n    var contents = {\n        __type: \"Tag\",\n        Key: undefined,\n        Value: undefined\n    };\n    if (output.Key !== undefined && output.Key !== null) {\n        contents.Key = output.Key;\n    }\n    if (output.Value !== undefined && output.Value !== null) {\n        contents.Value = output.Value;\n    }\n    return contents;\n};\nvar deserializeAws_json1_1TagList = function (output, context) {\n    return (output || []).map(function (entry) {\n        return deserializeAws_json1_1Tag(entry, context);\n    });\n};\nvar deserializeAws_json1_1UpdateShardCountOutput = function (output, context) {\n    var contents = {\n        __type: \"UpdateShardCountOutput\",\n        CurrentShardCount: undefined,\n        StreamName: undefined,\n        TargetShardCount: undefined\n    };\n    if (output.CurrentShardCount !== undefined &&\n        output.CurrentShardCount !== null) {\n        contents.CurrentShardCount = output.CurrentShardCount;\n    }\n    if (output.StreamName !== undefined && output.StreamName !== null) {\n        contents.StreamName = output.StreamName;\n    }\n    if (output.TargetShardCount !== undefined &&\n        output.TargetShardCount !== null) {\n        contents.TargetShardCount = output.TargetShardCount;\n    }\n    return contents;\n};\nvar deserializeMetadata = function (output) { return ({\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n}); };\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return (context.streamCollector(streamBody) || Promise.resolve(new Uint8Array()));\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) {\n        return context.utf8Encoder(body);\n    });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n    var contents = __assign(__assign({}, context.endpoint), { protocol: \"https\", method: \"POST\", path: path, headers: headers });\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\n//# sourceMappingURL=Aws_json1_1.js.map"]},"metadata":{},"sourceType":"module"}