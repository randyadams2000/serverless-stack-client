{"ast":null,"code":"var _jsxFileName = \"/Users/randyadams/notes-app-client/src/containers/NewNote.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\nimport { API } from \"aws-amplify\";\nexport default function NewNote() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB.`);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await createNote({\n        content\n      });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewNote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    value: content,\n    componentClass: \"textarea\",\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Attachment\"), /*#__PURE__*/React.createElement(FormControl, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Create\")));\n}","map":{"version":3,"sources":["/Users/randyadams/notes-app-client/src/containers/NewNote.js"],"names":["React","useRef","useState","useHistory","FormGroup","FormControl","ControlLabel","LoaderButton","onError","config","API","NewNote","file","history","content","setContent","isLoading","setIsLoading","validateForm","length","handleFileChange","event","current","target","files","handleSubmit","preventDefault","size","MAX_ATTACHMENT_SIZE","alert","createNote","push","e","note","post","body","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\nimport { API } from \"aws-amplify\";\n\nexport default function NewNote() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n\n  if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n    alert(\n      `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n        1000000} MB.`\n    );\n    return;\n  }\n\n  setIsLoading(true);\n\n  try {\n    await createNote({ content });\n    history.push(\"/\");\n  } catch (e) {\n    onError(e);\n    setIsLoading(false);\n  }\n}\n\nfunction createNote(note) {\n  return API.post(\"notes\", \"/notes\", {\n    body: note\n  });\n}\n\n\nfunction createNote(note) {\n  return API.post(\"notes\", \"/notes\", {\n    body: note\n  });\n}\n\n  return (\n    <div className=\"NewNote\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"file\">\n          <ControlLabel>Attachment</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}